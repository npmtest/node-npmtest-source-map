{"/home/travis/build/npmtest/node-npmtest-source-map/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_source_map */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-source-map/lib.npmtest_source_map.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/lib.npmtest_source_map.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":55}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":61}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_source_map */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_source_map = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_source_map = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-source-map/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":54}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":68},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-source-map && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_source_map */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_source_map","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_source_map.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_source_map.rollup.js'] =","            local.assetsDict['/assets.npmtest_source_map.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_source_map.__dirname +","                    '/lib.npmtest_source_map.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/source-map.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/source-map.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":86}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":83}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":61}}},"branchMap":{},"code":["/*"," * Copyright 2009-2011 Mozilla Foundation and contributors"," * Licensed under the New BSD license. See LICENSE.txt or:"," * http://opensource.org/licenses/BSD-3-Clause"," */","exports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;","exports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;","exports.SourceNode = require('./lib/source-node').SourceNode;",""],"l":{"6":1,"7":1,"8":1}},"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/source-map-generator.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/source-map-generator.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":1,"167":0,"168":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0,0,0,0,0,0],"36":[0,0],"37":[0,0,0,0,0,0,0,0,0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"SourceMapGenerator","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}}},"2":{"name":"SourceMapGenerator_fromSourceMap","line":42,"loc":{"start":{"line":42,"column":2},"end":{"line":42,"column":64}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":35},"end":{"line":48,"column":54}}},"4":{"name":"(anonymous_4)","line":74,"loc":{"start":{"line":74,"column":39},"end":{"line":74,"column":61}}},"5":{"name":"SourceMapGenerator_addMapping","line":94,"loc":{"start":{"line":94,"column":2},"end":{"line":94,"column":48}}},"6":{"name":"SourceMapGenerator_setSourceContent","line":132,"loc":{"start":{"line":132,"column":2},"end":{"line":132,"column":76}}},"7":{"name":"SourceMapGenerator_applySourceMap","line":172,"loc":{"start":{"line":172,"column":2},"end":{"line":172,"column":94}}},"8":{"name":"(anonymous_8)","line":195,"loc":{"start":{"line":195,"column":35},"end":{"line":195,"column":54}}},"9":{"name":"(anonymous_9)","line":234,"loc":{"start":{"line":234,"column":39},"end":{"line":234,"column":61}}},"10":{"name":"SourceMapGenerator_validateMapping","line":260,"loc":{"start":{"line":260,"column":2},"end":{"line":261,"column":53}}},"11":{"name":"SourceMapGenerator_serializeMappings","line":291,"loc":{"start":{"line":291,"column":2},"end":{"line":291,"column":50}}},"12":{"name":"SourceMapGenerator_generateSourcesContent","line":357,"loc":{"start":{"line":357,"column":2},"end":{"line":357,"column":76}}},"13":{"name":"(anonymous_13)","line":358,"loc":{"start":{"line":358,"column":24},"end":{"line":358,"column":42}}},"14":{"name":"SourceMapGenerator_toJSON","line":376,"loc":{"start":{"line":376,"column":2},"end":{"line":376,"column":39}}},"15":{"name":"SourceMapGenerator_toString","line":400,"loc":{"start":{"line":400,"column":2},"end":{"line":400,"column":41}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":56}},"5":{"start":{"line":21,"column":0},"end":{"line":32,"column":1}},"6":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":15}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":48}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":60}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":69}},"11":{"start":{"line":28,"column":2},"end":{"line":28,"column":33}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":31}},"13":{"start":{"line":30,"column":2},"end":{"line":30,"column":37}},"14":{"start":{"line":31,"column":2},"end":{"line":31,"column":31}},"15":{"start":{"line":34,"column":0},"end":{"line":34,"column":42}},"16":{"start":{"line":41,"column":0},"end":{"line":81,"column":4}},"17":{"start":{"line":43,"column":4},"end":{"line":43,"column":51}},"18":{"start":{"line":44,"column":4},"end":{"line":47,"column":7}},"19":{"start":{"line":48,"column":4},"end":{"line":73,"column":7}},"20":{"start":{"line":49,"column":6},"end":{"line":54,"column":8}},"21":{"start":{"line":56,"column":6},"end":{"line":70,"column":7}},"22":{"start":{"line":57,"column":8},"end":{"line":57,"column":43}},"23":{"start":{"line":58,"column":8},"end":{"line":60,"column":9}},"24":{"start":{"line":59,"column":10},"end":{"line":59,"column":75}},"25":{"start":{"line":62,"column":8},"end":{"line":65,"column":10}},"26":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"27":{"start":{"line":68,"column":10},"end":{"line":68,"column":41}},"28":{"start":{"line":72,"column":6},"end":{"line":72,"column":39}},"29":{"start":{"line":74,"column":4},"end":{"line":79,"column":7}},"30":{"start":{"line":75,"column":6},"end":{"line":75,"column":68}},"31":{"start":{"line":76,"column":6},"end":{"line":78,"column":7}},"32":{"start":{"line":77,"column":8},"end":{"line":77,"column":56}},"33":{"start":{"line":80,"column":4},"end":{"line":80,"column":21}},"34":{"start":{"line":93,"column":0},"end":{"line":126,"column":4}},"35":{"start":{"line":95,"column":4},"end":{"line":95,"column":52}},"36":{"start":{"line":96,"column":4},"end":{"line":96,"column":56}},"37":{"start":{"line":97,"column":4},"end":{"line":97,"column":52}},"38":{"start":{"line":98,"column":4},"end":{"line":98,"column":48}},"39":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"40":{"start":{"line":101,"column":6},"end":{"line":101,"column":63}},"41":{"start":{"line":104,"column":4},"end":{"line":109,"column":5}},"42":{"start":{"line":105,"column":6},"end":{"line":105,"column":30}},"43":{"start":{"line":106,"column":6},"end":{"line":108,"column":7}},"44":{"start":{"line":107,"column":8},"end":{"line":107,"column":34}},"45":{"start":{"line":111,"column":4},"end":{"line":116,"column":5}},"46":{"start":{"line":112,"column":6},"end":{"line":112,"column":26}},"47":{"start":{"line":113,"column":6},"end":{"line":115,"column":7}},"48":{"start":{"line":114,"column":8},"end":{"line":114,"column":30}},"49":{"start":{"line":118,"column":4},"end":{"line":125,"column":7}},"50":{"start":{"line":131,"column":0},"end":{"line":153,"column":4}},"51":{"start":{"line":133,"column":4},"end":{"line":133,"column":29}},"52":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"53":{"start":{"line":135,"column":6},"end":{"line":135,"column":55}},"54":{"start":{"line":138,"column":4},"end":{"line":152,"column":5}},"55":{"start":{"line":141,"column":6},"end":{"line":143,"column":7}},"56":{"start":{"line":142,"column":8},"end":{"line":142,"column":52}},"57":{"start":{"line":144,"column":6},"end":{"line":144,"column":71}},"58":{"start":{"line":145,"column":11},"end":{"line":152,"column":5}},"59":{"start":{"line":148,"column":6},"end":{"line":148,"column":61}},"60":{"start":{"line":149,"column":6},"end":{"line":151,"column":7}},"61":{"start":{"line":150,"column":8},"end":{"line":150,"column":37}},"62":{"start":{"line":171,"column":0},"end":{"line":246,"column":4}},"63":{"start":{"line":173,"column":4},"end":{"line":173,"column":33}},"64":{"start":{"line":175,"column":4},"end":{"line":183,"column":5}},"65":{"start":{"line":176,"column":6},"end":{"line":181,"column":7}},"66":{"start":{"line":177,"column":8},"end":{"line":180,"column":10}},"67":{"start":{"line":182,"column":6},"end":{"line":182,"column":43}},"68":{"start":{"line":184,"column":4},"end":{"line":184,"column":38}},"69":{"start":{"line":186,"column":4},"end":{"line":188,"column":5}},"70":{"start":{"line":187,"column":6},"end":{"line":187,"column":57}},"71":{"start":{"line":191,"column":4},"end":{"line":191,"column":36}},"72":{"start":{"line":192,"column":4},"end":{"line":192,"column":34}},"73":{"start":{"line":195,"column":4},"end":{"line":229,"column":13}},"74":{"start":{"line":196,"column":6},"end":{"line":217,"column":7}},"75":{"start":{"line":198,"column":8},"end":{"line":201,"column":11}},"76":{"start":{"line":202,"column":8},"end":{"line":216,"column":9}},"77":{"start":{"line":204,"column":10},"end":{"line":204,"column":43}},"78":{"start":{"line":205,"column":10},"end":{"line":207,"column":11}},"79":{"start":{"line":206,"column":12},"end":{"line":206,"column":70}},"80":{"start":{"line":208,"column":10},"end":{"line":210,"column":11}},"81":{"start":{"line":209,"column":12},"end":{"line":209,"column":71}},"82":{"start":{"line":211,"column":10},"end":{"line":211,"column":47}},"83":{"start":{"line":212,"column":10},"end":{"line":212,"column":51}},"84":{"start":{"line":213,"column":10},"end":{"line":215,"column":11}},"85":{"start":{"line":214,"column":12},"end":{"line":214,"column":41}},"86":{"start":{"line":219,"column":6},"end":{"line":219,"column":34}},"87":{"start":{"line":220,"column":6},"end":{"line":222,"column":7}},"88":{"start":{"line":221,"column":8},"end":{"line":221,"column":31}},"89":{"start":{"line":224,"column":6},"end":{"line":224,"column":30}},"90":{"start":{"line":225,"column":6},"end":{"line":227,"column":7}},"91":{"start":{"line":226,"column":8},"end":{"line":226,"column":27}},"92":{"start":{"line":230,"column":4},"end":{"line":230,"column":31}},"93":{"start":{"line":231,"column":4},"end":{"line":231,"column":27}},"94":{"start":{"line":234,"column":4},"end":{"line":245,"column":13}},"95":{"start":{"line":235,"column":6},"end":{"line":235,"column":68}},"96":{"start":{"line":236,"column":6},"end":{"line":244,"column":7}},"97":{"start":{"line":237,"column":8},"end":{"line":239,"column":9}},"98":{"start":{"line":238,"column":10},"end":{"line":238,"column":61}},"99":{"start":{"line":240,"column":8},"end":{"line":242,"column":9}},"100":{"start":{"line":241,"column":10},"end":{"line":241,"column":61}},"101":{"start":{"line":243,"column":8},"end":{"line":243,"column":51}},"102":{"start":{"line":259,"column":0},"end":{"line":284,"column":4}},"103":{"start":{"line":262,"column":4},"end":{"line":283,"column":5}},"104":{"start":{"line":266,"column":6},"end":{"line":266,"column":13}},"105":{"start":{"line":268,"column":9},"end":{"line":283,"column":5}},"106":{"start":{"line":274,"column":6},"end":{"line":274,"column":13}},"107":{"start":{"line":277,"column":6},"end":{"line":282,"column":10}},"108":{"start":{"line":290,"column":0},"end":{"line":354,"column":4}},"109":{"start":{"line":292,"column":4},"end":{"line":292,"column":36}},"110":{"start":{"line":293,"column":4},"end":{"line":293,"column":34}},"111":{"start":{"line":294,"column":4},"end":{"line":294,"column":35}},"112":{"start":{"line":295,"column":4},"end":{"line":295,"column":33}},"113":{"start":{"line":296,"column":4},"end":{"line":296,"column":25}},"114":{"start":{"line":297,"column":4},"end":{"line":297,"column":27}},"115":{"start":{"line":298,"column":4},"end":{"line":298,"column":20}},"116":{"start":{"line":299,"column":4},"end":{"line":299,"column":13}},"117":{"start":{"line":300,"column":4},"end":{"line":300,"column":16}},"118":{"start":{"line":301,"column":4},"end":{"line":301,"column":16}},"119":{"start":{"line":302,"column":4},"end":{"line":302,"column":18}},"120":{"start":{"line":304,"column":4},"end":{"line":304,"column":44}},"121":{"start":{"line":305,"column":4},"end":{"line":351,"column":5}},"122":{"start":{"line":306,"column":6},"end":{"line":306,"column":28}},"123":{"start":{"line":307,"column":6},"end":{"line":307,"column":15}},"124":{"start":{"line":309,"column":6},"end":{"line":323,"column":7}},"125":{"start":{"line":310,"column":8},"end":{"line":310,"column":36}},"126":{"start":{"line":311,"column":8},"end":{"line":314,"column":9}},"127":{"start":{"line":312,"column":10},"end":{"line":312,"column":22}},"128":{"start":{"line":313,"column":10},"end":{"line":313,"column":34}},"129":{"start":{"line":317,"column":8},"end":{"line":322,"column":9}},"130":{"start":{"line":318,"column":10},"end":{"line":320,"column":11}},"131":{"start":{"line":319,"column":12},"end":{"line":319,"column":21}},"132":{"start":{"line":321,"column":10},"end":{"line":321,"column":22}},"133":{"start":{"line":325,"column":6},"end":{"line":326,"column":60}},"134":{"start":{"line":327,"column":6},"end":{"line":327,"column":56}},"135":{"start":{"line":329,"column":6},"end":{"line":348,"column":7}},"136":{"start":{"line":330,"column":8},"end":{"line":330,"column":58}},"137":{"start":{"line":331,"column":8},"end":{"line":331,"column":61}},"138":{"start":{"line":332,"column":8},"end":{"line":332,"column":35}},"139":{"start":{"line":335,"column":8},"end":{"line":336,"column":59}},"140":{"start":{"line":337,"column":8},"end":{"line":337,"column":56}},"141":{"start":{"line":339,"column":8},"end":{"line":340,"column":61}},"142":{"start":{"line":341,"column":8},"end":{"line":341,"column":56}},"143":{"start":{"line":343,"column":8},"end":{"line":347,"column":9}},"144":{"start":{"line":344,"column":10},"end":{"line":344,"column":54}},"145":{"start":{"line":345,"column":10},"end":{"line":345,"column":59}},"146":{"start":{"line":346,"column":10},"end":{"line":346,"column":33}},"147":{"start":{"line":350,"column":6},"end":{"line":350,"column":21}},"148":{"start":{"line":353,"column":4},"end":{"line":353,"column":18}},"149":{"start":{"line":356,"column":0},"end":{"line":370,"column":4}},"150":{"start":{"line":358,"column":4},"end":{"line":369,"column":13}},"151":{"start":{"line":359,"column":6},"end":{"line":361,"column":7}},"152":{"start":{"line":360,"column":8},"end":{"line":360,"column":20}},"153":{"start":{"line":362,"column":6},"end":{"line":364,"column":7}},"154":{"start":{"line":363,"column":8},"end":{"line":363,"column":52}},"155":{"start":{"line":365,"column":6},"end":{"line":365,"column":41}},"156":{"start":{"line":366,"column":6},"end":{"line":368,"column":15}},"157":{"start":{"line":375,"column":0},"end":{"line":394,"column":4}},"158":{"start":{"line":377,"column":4},"end":{"line":382,"column":6}},"159":{"start":{"line":383,"column":4},"end":{"line":385,"column":5}},"160":{"start":{"line":384,"column":6},"end":{"line":384,"column":28}},"161":{"start":{"line":386,"column":4},"end":{"line":388,"column":5}},"162":{"start":{"line":387,"column":6},"end":{"line":387,"column":40}},"163":{"start":{"line":389,"column":4},"end":{"line":391,"column":5}},"164":{"start":{"line":390,"column":6},"end":{"line":390,"column":85}},"165":{"start":{"line":393,"column":4},"end":{"line":393,"column":15}},"166":{"start":{"line":399,"column":0},"end":{"line":402,"column":4}},"167":{"start":{"line":401,"column":4},"end":{"line":401,"column":41}},"168":{"start":{"line":404,"column":0},"end":{"line":404,"column":48}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]},"3":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":8}},{"start":{"line":58,"column":8},"end":{"line":58,"column":8}}]},"4":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":8}},{"start":{"line":67,"column":8},"end":{"line":67,"column":8}}]},"5":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":6}},{"start":{"line":76,"column":6},"end":{"line":76,"column":6}}]},"6":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"7":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"8":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":6},"end":{"line":106,"column":6}},{"start":{"line":106,"column":6},"end":{"line":106,"column":6}}]},"9":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"10":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":6},"end":{"line":113,"column":6}},{"start":{"line":113,"column":6},"end":{"line":113,"column":6}}]},"11":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":20},"end":{"line":121,"column":36}},{"start":{"line":121,"column":40},"end":{"line":121,"column":53}}]},"12":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":22},"end":{"line":122,"column":38}},{"start":{"line":122,"column":42},"end":{"line":122,"column":57}}]},"13":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"14":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"15":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":6},"end":{"line":141,"column":6}},{"start":{"line":141,"column":6},"end":{"line":141,"column":6}}]},"16":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":11},"end":{"line":145,"column":11}},{"start":{"line":145,"column":11},"end":{"line":145,"column":11}}]},"17":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":6},"end":{"line":149,"column":6}},{"start":{"line":149,"column":6},"end":{"line":149,"column":6}}]},"18":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"19":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":6},"end":{"line":176,"column":6}},{"start":{"line":176,"column":6},"end":{"line":176,"column":6}}]},"20":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":4},"end":{"line":186,"column":4}},{"start":{"line":186,"column":4},"end":{"line":186,"column":4}}]},"21":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":6},"end":{"line":196,"column":6}},{"start":{"line":196,"column":6},"end":{"line":196,"column":6}}]},"22":{"line":196,"type":"binary-expr","locations":[{"start":{"line":196,"column":10},"end":{"line":196,"column":39}},{"start":{"line":196,"column":43},"end":{"line":196,"column":71}}]},"23":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":8}},{"start":{"line":202,"column":8},"end":{"line":202,"column":8}}]},"24":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":10},"end":{"line":205,"column":10}},{"start":{"line":205,"column":10},"end":{"line":205,"column":10}}]},"25":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":10},"end":{"line":208,"column":10}},{"start":{"line":208,"column":10},"end":{"line":208,"column":10}}]},"26":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":10},"end":{"line":213,"column":10}},{"start":{"line":213,"column":10},"end":{"line":213,"column":10}}]},"27":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":6}},{"start":{"line":220,"column":6},"end":{"line":220,"column":6}}]},"28":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":10},"end":{"line":220,"column":24}},{"start":{"line":220,"column":28},"end":{"line":220,"column":51}}]},"29":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":6},"end":{"line":225,"column":6}},{"start":{"line":225,"column":6},"end":{"line":225,"column":6}}]},"30":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":10},"end":{"line":225,"column":22}},{"start":{"line":225,"column":26},"end":{"line":225,"column":45}}]},"31":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":6},"end":{"line":236,"column":6}},{"start":{"line":236,"column":6},"end":{"line":236,"column":6}}]},"32":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":8},"end":{"line":237,"column":8}},{"start":{"line":237,"column":8},"end":{"line":237,"column":8}}]},"33":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":8},"end":{"line":240,"column":8}},{"start":{"line":240,"column":8},"end":{"line":240,"column":8}}]},"34":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":262,"column":4}},{"start":{"line":262,"column":4},"end":{"line":262,"column":4}}]},"35":{"line":262,"type":"binary-expr","locations":[{"start":{"line":262,"column":8},"end":{"line":262,"column":18}},{"start":{"line":262,"column":22},"end":{"line":262,"column":42}},{"start":{"line":262,"column":46},"end":{"line":262,"column":68}},{"start":{"line":263,"column":11},"end":{"line":263,"column":30}},{"start":{"line":263,"column":34},"end":{"line":263,"column":56}},{"start":{"line":264,"column":11},"end":{"line":264,"column":21}},{"start":{"line":264,"column":25},"end":{"line":264,"column":33}},{"start":{"line":264,"column":37},"end":{"line":264,"column":43}}]},"36":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":9},"end":{"line":268,"column":9}},{"start":{"line":268,"column":9},"end":{"line":268,"column":9}}]},"37":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":13},"end":{"line":268,"column":23}},{"start":{"line":268,"column":27},"end":{"line":268,"column":47}},{"start":{"line":268,"column":51},"end":{"line":268,"column":73}},{"start":{"line":269,"column":16},"end":{"line":269,"column":25}},{"start":{"line":269,"column":29},"end":{"line":269,"column":48}},{"start":{"line":269,"column":52},"end":{"line":269,"column":73}},{"start":{"line":270,"column":16},"end":{"line":270,"column":35}},{"start":{"line":270,"column":39},"end":{"line":270,"column":61}},{"start":{"line":271,"column":16},"end":{"line":271,"column":34}},{"start":{"line":271,"column":38},"end":{"line":271,"column":59}},{"start":{"line":272,"column":16},"end":{"line":272,"column":23}}]},"38":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":6},"end":{"line":309,"column":6}},{"start":{"line":309,"column":6},"end":{"line":309,"column":6}}]},"39":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":8},"end":{"line":317,"column":8}},{"start":{"line":317,"column":8},"end":{"line":317,"column":8}}]},"40":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":10},"end":{"line":318,"column":10}},{"start":{"line":318,"column":10},"end":{"line":318,"column":10}}]},"41":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":6},"end":{"line":329,"column":6}},{"start":{"line":329,"column":6},"end":{"line":329,"column":6}}]},"42":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":8},"end":{"line":343,"column":8}},{"start":{"line":343,"column":8},"end":{"line":343,"column":8}}]},"43":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":6},"end":{"line":359,"column":6}},{"start":{"line":359,"column":6},"end":{"line":359,"column":6}}]},"44":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":6},"end":{"line":362,"column":6}},{"start":{"line":362,"column":6},"end":{"line":362,"column":6}}]},"45":{"line":366,"type":"cond-expr","locations":[{"start":{"line":367,"column":10},"end":{"line":367,"column":36}},{"start":{"line":368,"column":10},"end":{"line":368,"column":14}}]},"46":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":4},"end":{"line":383,"column":4}},{"start":{"line":383,"column":4},"end":{"line":383,"column":4}}]},"47":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":4},"end":{"line":386,"column":4}},{"start":{"line":386,"column":4},"end":{"line":386,"column":4}}]},"48":{"line":389,"type":"if","locations":[{"start":{"line":389,"column":4},"end":{"line":389,"column":4}},{"start":{"line":389,"column":4},"end":{"line":389,"column":4}}]}},"code":["/* -*- Mode: js; js-indent-level: 2; -*- */","/*"," * Copyright 2011 Mozilla Foundation and contributors"," * Licensed under the New BSD license. See LICENSE or:"," * http://opensource.org/licenses/BSD-3-Clause"," */","","var base64VLQ = require('./base64-vlq');","var util = require('./util');","var ArraySet = require('./array-set').ArraySet;","var MappingList = require('./mapping-list').MappingList;","","/**"," * An instance of the SourceMapGenerator represents a source map which is"," * being built incrementally. You may pass an object with the following"," * properties:"," *"," *   - file: The filename of the generated source."," *   - sourceRoot: A root for all relative URLs in this source map."," */","function SourceMapGenerator(aArgs) {","  if (!aArgs) {","    aArgs = {};","  }","  this._file = util.getArg(aArgs, 'file', null);","  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);","  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);","  this._sources = new ArraySet();","  this._names = new ArraySet();","  this._mappings = new MappingList();","  this._sourcesContents = null;","}","","SourceMapGenerator.prototype._version = 3;","","/**"," * Creates a new SourceMapGenerator based on a SourceMapConsumer"," *"," * @param aSourceMapConsumer The SourceMap."," */","SourceMapGenerator.fromSourceMap =","  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {","    var sourceRoot = aSourceMapConsumer.sourceRoot;","    var generator = new SourceMapGenerator({","      file: aSourceMapConsumer.file,","      sourceRoot: sourceRoot","    });","    aSourceMapConsumer.eachMapping(function (mapping) {","      var newMapping = {","        generated: {","          line: mapping.generatedLine,","          column: mapping.generatedColumn","        }","      };","","      if (mapping.source != null) {","        newMapping.source = mapping.source;","        if (sourceRoot != null) {","          newMapping.source = util.relative(sourceRoot, newMapping.source);","        }","","        newMapping.original = {","          line: mapping.originalLine,","          column: mapping.originalColumn","        };","","        if (mapping.name != null) {","          newMapping.name = mapping.name;","        }","      }","","      generator.addMapping(newMapping);","    });","    aSourceMapConsumer.sources.forEach(function (sourceFile) {","      var content = aSourceMapConsumer.sourceContentFor(sourceFile);","      if (content != null) {","        generator.setSourceContent(sourceFile, content);","      }","    });","    return generator;","  };","","/**"," * Add a single mapping from original source line and column to the generated"," * source's line and column for this source map being created. The mapping"," * object should have the following properties:"," *"," *   - generated: An object with the generated line and column positions."," *   - original: An object with the original line and column positions."," *   - source: The original source file (relative to the sourceRoot)."," *   - name: An optional original token name for this mapping."," */","SourceMapGenerator.prototype.addMapping =","  function SourceMapGenerator_addMapping(aArgs) {","    var generated = util.getArg(aArgs, 'generated');","    var original = util.getArg(aArgs, 'original', null);","    var source = util.getArg(aArgs, 'source', null);","    var name = util.getArg(aArgs, 'name', null);","","    if (!this._skipValidation) {","      this._validateMapping(generated, original, source, name);","    }","","    if (source != null) {","      source = String(source);","      if (!this._sources.has(source)) {","        this._sources.add(source);","      }","    }","","    if (name != null) {","      name = String(name);","      if (!this._names.has(name)) {","        this._names.add(name);","      }","    }","","    this._mappings.add({","      generatedLine: generated.line,","      generatedColumn: generated.column,","      originalLine: original != null && original.line,","      originalColumn: original != null && original.column,","      source: source,","      name: name","    });","  };","","/**"," * Set the source content for a source file."," */","SourceMapGenerator.prototype.setSourceContent =","  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {","    var source = aSourceFile;","    if (this._sourceRoot != null) {","      source = util.relative(this._sourceRoot, source);","    }","","    if (aSourceContent != null) {","      // Add the source content to the _sourcesContents map.","      // Create a new _sourcesContents map if the property is null.","      if (!this._sourcesContents) {","        this._sourcesContents = Object.create(null);","      }","      this._sourcesContents[util.toSetString(source)] = aSourceContent;","    } else if (this._sourcesContents) {","      // Remove the source file from the _sourcesContents map.","      // If the _sourcesContents map is empty, set the property to null.","      delete this._sourcesContents[util.toSetString(source)];","      if (Object.keys(this._sourcesContents).length === 0) {","        this._sourcesContents = null;","      }","    }","  };","","/**"," * Applies the mappings of a sub-source-map for a specific source file to the"," * source map being generated. Each mapping to the supplied source file is"," * rewritten using the supplied source map. Note: The resolution for the"," * resulting mappings is the minimium of this map and the supplied map."," *"," * @param aSourceMapConsumer The source map to be applied."," * @param aSourceFile Optional. The filename of the source file."," *        If omitted, SourceMapConsumer's file property will be used."," * @param aSourceMapPath Optional. The dirname of the path to the source map"," *        to be applied. If relative, it is relative to the SourceMapConsumer."," *        This parameter is needed when the two source maps aren't in the same"," *        directory, and the source map to be applied contains relative source"," *        paths. If so, those relative source paths need to be rewritten"," *        relative to the SourceMapGenerator."," */","SourceMapGenerator.prototype.applySourceMap =","  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {","    var sourceFile = aSourceFile;","    // If aSourceFile is omitted, we will use the file property of the SourceMap","    if (aSourceFile == null) {","      if (aSourceMapConsumer.file == null) {","        throw new Error(","          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +","          'or the source map\\'s \"file\" property. Both were omitted.'","        );","      }","      sourceFile = aSourceMapConsumer.file;","    }","    var sourceRoot = this._sourceRoot;","    // Make \"sourceFile\" relative if an absolute Url is passed.","    if (sourceRoot != null) {","      sourceFile = util.relative(sourceRoot, sourceFile);","    }","    // Applying the SourceMap can add and remove items from the sources and","    // the names array.","    var newSources = new ArraySet();","    var newNames = new ArraySet();","","    // Find mappings for the \"sourceFile\"","    this._mappings.unsortedForEach(function (mapping) {","      if (mapping.source === sourceFile && mapping.originalLine != null) {","        // Check if it can be mapped by the source map, then update the mapping.","        var original = aSourceMapConsumer.originalPositionFor({","          line: mapping.originalLine,","          column: mapping.originalColumn","        });","        if (original.source != null) {","          // Copy mapping","          mapping.source = original.source;","          if (aSourceMapPath != null) {","            mapping.source = util.join(aSourceMapPath, mapping.source)","          }","          if (sourceRoot != null) {","            mapping.source = util.relative(sourceRoot, mapping.source);","          }","          mapping.originalLine = original.line;","          mapping.originalColumn = original.column;","          if (original.name != null) {","            mapping.name = original.name;","          }","        }","      }","","      var source = mapping.source;","      if (source != null && !newSources.has(source)) {","        newSources.add(source);","      }","","      var name = mapping.name;","      if (name != null && !newNames.has(name)) {","        newNames.add(name);","      }","","    }, this);","    this._sources = newSources;","    this._names = newNames;","","    // Copy sourcesContents of applied map.","    aSourceMapConsumer.sources.forEach(function (sourceFile) {","      var content = aSourceMapConsumer.sourceContentFor(sourceFile);","      if (content != null) {","        if (aSourceMapPath != null) {","          sourceFile = util.join(aSourceMapPath, sourceFile);","        }","        if (sourceRoot != null) {","          sourceFile = util.relative(sourceRoot, sourceFile);","        }","        this.setSourceContent(sourceFile, content);","      }","    }, this);","  };","","/**"," * A mapping can have one of the three levels of data:"," *"," *   1. Just the generated position."," *   2. The Generated position, original position, and original source."," *   3. Generated and original position, original source, as well as a name"," *      token."," *"," * To maintain consistency, we validate that any new mapping being added falls"," * in to one of these categories."," */","SourceMapGenerator.prototype._validateMapping =","  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,","                                              aName) {","    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated","        && aGenerated.line > 0 && aGenerated.column >= 0","        && !aOriginal && !aSource && !aName) {","      // Case 1.","      return;","    }","    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated","             && aOriginal && 'line' in aOriginal && 'column' in aOriginal","             && aGenerated.line > 0 && aGenerated.column >= 0","             && aOriginal.line > 0 && aOriginal.column >= 0","             && aSource) {","      // Cases 2 and 3.","      return;","    }","    else {","      throw new Error('Invalid mapping: ' + JSON.stringify({","        generated: aGenerated,","        source: aSource,","        original: aOriginal,","        name: aName","      }));","    }","  };","","/**"," * Serialize the accumulated mappings in to the stream of base 64 VLQs"," * specified by the source map format."," */","SourceMapGenerator.prototype._serializeMappings =","  function SourceMapGenerator_serializeMappings() {","    var previousGeneratedColumn = 0;","    var previousGeneratedLine = 1;","    var previousOriginalColumn = 0;","    var previousOriginalLine = 0;","    var previousName = 0;","    var previousSource = 0;","    var result = '';","    var next;","    var mapping;","    var nameIdx;","    var sourceIdx;","","    var mappings = this._mappings.toArray();","    for (var i = 0, len = mappings.length; i < len; i++) {","      mapping = mappings[i];","      next = ''","","      if (mapping.generatedLine !== previousGeneratedLine) {","        previousGeneratedColumn = 0;","        while (mapping.generatedLine !== previousGeneratedLine) {","          next += ';';","          previousGeneratedLine++;","        }","      }","      else {","        if (i > 0) {","          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {","            continue;","          }","          next += ',';","        }","      }","","      next += base64VLQ.encode(mapping.generatedColumn","                                 - previousGeneratedColumn);","      previousGeneratedColumn = mapping.generatedColumn;","","      if (mapping.source != null) {","        sourceIdx = this._sources.indexOf(mapping.source);","        next += base64VLQ.encode(sourceIdx - previousSource);","        previousSource = sourceIdx;","","        // lines are stored 0-based in SourceMap spec version 3","        next += base64VLQ.encode(mapping.originalLine - 1","                                   - previousOriginalLine);","        previousOriginalLine = mapping.originalLine - 1;","","        next += base64VLQ.encode(mapping.originalColumn","                                   - previousOriginalColumn);","        previousOriginalColumn = mapping.originalColumn;","","        if (mapping.name != null) {","          nameIdx = this._names.indexOf(mapping.name);","          next += base64VLQ.encode(nameIdx - previousName);","          previousName = nameIdx;","        }","      }","","      result += next;","    }","","    return result;","  };","","SourceMapGenerator.prototype._generateSourcesContent =","  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {","    return aSources.map(function (source) {","      if (!this._sourcesContents) {","        return null;","      }","      if (aSourceRoot != null) {","        source = util.relative(aSourceRoot, source);","      }","      var key = util.toSetString(source);","      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)","        ? this._sourcesContents[key]","        : null;","    }, this);","  };","","/**"," * Externalize the source map."," */","SourceMapGenerator.prototype.toJSON =","  function SourceMapGenerator_toJSON() {","    var map = {","      version: this._version,","      sources: this._sources.toArray(),","      names: this._names.toArray(),","      mappings: this._serializeMappings()","    };","    if (this._file != null) {","      map.file = this._file;","    }","    if (this._sourceRoot != null) {","      map.sourceRoot = this._sourceRoot;","    }","    if (this._sourcesContents) {","      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);","    }","","    return map;","  };","","/**"," * Render the source map being generated to a string."," */","SourceMapGenerator.prototype.toString =","  function SourceMapGenerator_toString() {","    return JSON.stringify(this.toJSON());","  };","","exports.SourceMapGenerator = SourceMapGenerator;",""],"l":{"8":1,"9":1,"10":1,"11":1,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"34":1,"41":1,"43":0,"44":0,"48":0,"49":0,"56":0,"57":0,"58":0,"59":0,"62":0,"67":0,"68":0,"72":0,"74":0,"75":0,"76":0,"77":0,"80":0,"93":1,"95":0,"96":0,"97":0,"98":0,"100":0,"101":0,"104":0,"105":0,"106":0,"107":0,"111":0,"112":0,"113":0,"114":0,"118":0,"131":1,"133":0,"134":0,"135":0,"138":0,"141":0,"142":0,"144":0,"145":0,"148":0,"149":0,"150":0,"171":1,"173":0,"175":0,"176":0,"177":0,"182":0,"184":0,"186":0,"187":0,"191":0,"192":0,"195":0,"196":0,"198":0,"202":0,"204":0,"205":0,"206":0,"208":0,"209":0,"211":0,"212":0,"213":0,"214":0,"219":0,"220":0,"221":0,"224":0,"225":0,"226":0,"230":0,"231":0,"234":0,"235":0,"236":0,"237":0,"238":0,"240":0,"241":0,"243":0,"259":1,"262":0,"266":0,"268":0,"274":0,"277":0,"290":1,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"304":0,"305":0,"306":0,"307":0,"309":0,"310":0,"311":0,"312":0,"313":0,"317":0,"318":0,"319":0,"321":0,"325":0,"327":0,"329":0,"330":0,"331":0,"332":0,"335":0,"337":0,"339":0,"341":0,"343":0,"344":0,"345":0,"346":0,"350":0,"353":0,"356":1,"358":0,"359":0,"360":0,"362":0,"363":0,"365":0,"366":0,"375":1,"377":0,"383":0,"384":0,"386":0,"387":0,"389":0,"390":0,"393":0,"399":1,"401":0,"404":1}},"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/base64-vlq.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/base64-vlq.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"toVLQSigned","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":29}}},"2":{"name":"fromVLQSigned","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":31}}},"3":{"name":"base64VLQ_encode","line":92,"loc":{"start":{"line":92,"column":17},"end":{"line":92,"column":51}}},"4":{"name":"base64VLQ_decode","line":116,"loc":{"start":{"line":116,"column":17},"end":{"line":116,"column":68}}}},"statementMap":{"1":{"start":{"line":38,"column":0},"end":{"line":38,"column":33}},"2":{"start":{"line":52,"column":0},"end":{"line":52,"column":23}},"3":{"start":{"line":55,"column":0},"end":{"line":55,"column":35}},"4":{"start":{"line":58,"column":0},"end":{"line":58,"column":33}},"5":{"start":{"line":61,"column":0},"end":{"line":61,"column":36}},"6":{"start":{"line":69,"column":0},"end":{"line":73,"column":1}},"7":{"start":{"line":70,"column":2},"end":{"line":72,"column":24}},"8":{"start":{"line":81,"column":0},"end":{"line":87,"column":1}},"9":{"start":{"line":82,"column":2},"end":{"line":82,"column":38}},"10":{"start":{"line":83,"column":2},"end":{"line":83,"column":28}},"11":{"start":{"line":84,"column":2},"end":{"line":86,"column":14}},"12":{"start":{"line":92,"column":0},"end":{"line":110,"column":2}},"13":{"start":{"line":93,"column":2},"end":{"line":93,"column":19}},"14":{"start":{"line":94,"column":2},"end":{"line":94,"column":12}},"15":{"start":{"line":96,"column":2},"end":{"line":96,"column":32}},"16":{"start":{"line":98,"column":2},"end":{"line":107,"column":20}},"17":{"start":{"line":99,"column":4},"end":{"line":99,"column":32}},"18":{"start":{"line":100,"column":4},"end":{"line":100,"column":28}},"19":{"start":{"line":101,"column":4},"end":{"line":105,"column":5}},"20":{"start":{"line":104,"column":6},"end":{"line":104,"column":36}},"21":{"start":{"line":106,"column":4},"end":{"line":106,"column":36}},"22":{"start":{"line":109,"column":2},"end":{"line":109,"column":17}},"23":{"start":{"line":116,"column":0},"end":{"line":140,"column":2}},"24":{"start":{"line":117,"column":2},"end":{"line":117,"column":27}},"25":{"start":{"line":118,"column":2},"end":{"line":118,"column":17}},"26":{"start":{"line":119,"column":2},"end":{"line":119,"column":16}},"27":{"start":{"line":120,"column":2},"end":{"line":120,"column":26}},"28":{"start":{"line":122,"column":2},"end":{"line":136,"column":25}},"29":{"start":{"line":123,"column":4},"end":{"line":125,"column":5}},"30":{"start":{"line":124,"column":6},"end":{"line":124,"column":68}},"31":{"start":{"line":127,"column":4},"end":{"line":127,"column":53}},"32":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"33":{"start":{"line":129,"column":6},"end":{"line":129,"column":74}},"34":{"start":{"line":132,"column":4},"end":{"line":132,"column":52}},"35":{"start":{"line":133,"column":4},"end":{"line":133,"column":27}},"36":{"start":{"line":134,"column":4},"end":{"line":134,"column":39}},"37":{"start":{"line":135,"column":4},"end":{"line":135,"column":28}},"38":{"start":{"line":138,"column":2},"end":{"line":138,"column":42}},"39":{"start":{"line":139,"column":2},"end":{"line":139,"column":26}}},"branchMap":{"1":{"line":70,"type":"cond-expr","locations":[{"start":{"line":71,"column":6},"end":{"line":71,"column":26}},{"start":{"line":72,"column":6},"end":{"line":72,"column":23}}]},"2":{"line":84,"type":"cond-expr","locations":[{"start":{"line":85,"column":6},"end":{"line":85,"column":14}},{"start":{"line":86,"column":6},"end":{"line":86,"column":13}}]},"3":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"4":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"5":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]}},"code":["/* -*- Mode: js; js-indent-level: 2; -*- */","/*"," * Copyright 2011 Mozilla Foundation and contributors"," * Licensed under the New BSD license. See LICENSE or:"," * http://opensource.org/licenses/BSD-3-Clause"," *"," * Based on the Base 64 VLQ implementation in Closure Compiler:"," * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java"," *"," * Copyright 2011 The Closure Compiler Authors. All rights reserved."," * Redistribution and use in source and binary forms, with or without"," * modification, are permitted provided that the following conditions are"," * met:"," *"," *  * Redistributions of source code must retain the above copyright"," *    notice, this list of conditions and the following disclaimer."," *  * Redistributions in binary form must reproduce the above"," *    copyright notice, this list of conditions and the following"," *    disclaimer in the documentation and/or other materials provided"," *    with the distribution."," *  * Neither the name of Google Inc. nor the names of its"," *    contributors may be used to endorse or promote products derived"," *    from this software without specific prior written permission."," *"," * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS"," * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT"," * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR"," * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT"," * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,"," * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT"," * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,"," * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY"," * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT"," * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE"," * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."," */","","var base64 = require('./base64');","","// A single base 64 digit can contain 6 bits of data. For the base 64 variable","// length quantities we use in the source map spec, the first bit is the sign,","// the next four bits are the actual value, and the 6th bit is the","// continuation bit. The continuation bit tells us whether there are more","// digits in this value following this digit.","//","//   Continuation","//   |    Sign","//   |    |","//   V    V","//   101011","","var VLQ_BASE_SHIFT = 5;","","// binary: 100000","var VLQ_BASE = 1 << VLQ_BASE_SHIFT;","","// binary: 011111","var VLQ_BASE_MASK = VLQ_BASE - 1;","","// binary: 100000","var VLQ_CONTINUATION_BIT = VLQ_BASE;","","/**"," * Converts from a two-complement value to a value where the sign bit is"," * placed in the least significant bit.  For example, as decimals:"," *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)"," *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)"," */","function toVLQSigned(aValue) {","  return aValue < 0","    ? ((-aValue) << 1) + 1","    : (aValue << 1) + 0;","}","","/**"," * Converts to a two-complement value from a value where the sign bit is"," * placed in the least significant bit.  For example, as decimals:"," *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1"," *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2"," */","function fromVLQSigned(aValue) {","  var isNegative = (aValue & 1) === 1;","  var shifted = aValue >> 1;","  return isNegative","    ? -shifted","    : shifted;","}","","/**"," * Returns the base 64 VLQ encoded value."," */","exports.encode = function base64VLQ_encode(aValue) {","  var encoded = \"\";","  var digit;","","  var vlq = toVLQSigned(aValue);","","  do {","    digit = vlq & VLQ_BASE_MASK;","    vlq >>>= VLQ_BASE_SHIFT;","    if (vlq > 0) {","      // There are still more digits in this value, so we must make sure the","      // continuation bit is marked.","      digit |= VLQ_CONTINUATION_BIT;","    }","    encoded += base64.encode(digit);","  } while (vlq > 0);","","  return encoded;","};","","/**"," * Decodes the next base 64 VLQ value from the given string and returns the"," * value and the rest of the string via the out parameter."," */","exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {","  var strLen = aStr.length;","  var result = 0;","  var shift = 0;","  var continuation, digit;","","  do {","    if (aIndex >= strLen) {","      throw new Error(\"Expected more digits in base 64 VLQ value.\");","    }","","    digit = base64.decode(aStr.charCodeAt(aIndex++));","    if (digit === -1) {","      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));","    }","","    continuation = !!(digit & VLQ_CONTINUATION_BIT);","    digit &= VLQ_BASE_MASK;","    result = result + (digit << shift);","    shift += VLQ_BASE_SHIFT;","  } while (continuation);","","  aOutParam.value = fromVLQSigned(result);","  aOutParam.rest = aIndex;","};",""],"l":{"38":1,"52":1,"55":1,"58":1,"61":1,"69":1,"70":0,"81":1,"82":0,"83":0,"84":0,"92":1,"93":0,"94":0,"96":0,"98":0,"99":0,"100":0,"101":0,"104":0,"106":0,"109":0,"116":1,"117":0,"118":0,"119":0,"120":0,"122":0,"123":0,"124":0,"127":0,"128":0,"129":0,"132":0,"133":0,"134":0,"135":0,"138":0,"139":0}},"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/base64.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/base64.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":17},"end":{"line":13,"column":35}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":17},"end":{"line":24,"column":37}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":96}},"2":{"start":{"line":13,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":14,"column":2},"end":{"line":16,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":32}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":61}},"6":{"start":{"line":24,"column":0},"end":{"line":67,"column":2}},"7":{"start":{"line":25,"column":2},"end":{"line":25,"column":16}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":16}},"9":{"start":{"line":28,"column":2},"end":{"line":28,"column":19}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":20}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":16}},"12":{"start":{"line":32,"column":2},"end":{"line":32,"column":16}},"13":{"start":{"line":34,"column":2},"end":{"line":34,"column":16}},"14":{"start":{"line":35,"column":2},"end":{"line":35,"column":17}},"15":{"start":{"line":37,"column":2},"end":{"line":37,"column":24}},"16":{"start":{"line":38,"column":2},"end":{"line":38,"column":24}},"17":{"start":{"line":41,"column":2},"end":{"line":43,"column":3}},"18":{"start":{"line":42,"column":4},"end":{"line":42,"column":29}},"19":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"20":{"start":{"line":47,"column":4},"end":{"line":47,"column":47}},"21":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"22":{"start":{"line":52,"column":4},"end":{"line":52,"column":44}},"23":{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},"24":{"start":{"line":57,"column":4},"end":{"line":57,"column":14}},"25":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"26":{"start":{"line":62,"column":4},"end":{"line":62,"column":14}},"27":{"start":{"line":66,"column":2},"end":{"line":66,"column":12}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":17}},{"start":{"line":14,"column":21},"end":{"line":14,"column":49}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":22}},{"start":{"line":41,"column":26},"end":{"line":41,"column":42}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"6":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":25}},{"start":{"line":46,"column":29},"end":{"line":46,"column":48}}]},"7":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"8":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":22}},{"start":{"line":51,"column":26},"end":{"line":51,"column":42}}]},"9":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"10":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]}},"code":["/* -*- Mode: js; js-indent-level: 2; -*- */","/*"," * Copyright 2011 Mozilla Foundation and contributors"," * Licensed under the New BSD license. See LICENSE or:"," * http://opensource.org/licenses/BSD-3-Clause"," */","","var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');","","/**"," * Encode an integer in the range of 0 to 63 to a single base 64 digit."," */","exports.encode = function (number) {","  if (0 <= number && number < intToCharMap.length) {","    return intToCharMap[number];","  }","  throw new TypeError(\"Must be between 0 and 63: \" + number);","};","","/**"," * Decode a single base 64 character code digit to an integer. Returns -1 on"," * failure."," */","exports.decode = function (charCode) {","  var bigA = 65;     // 'A'","  var bigZ = 90;     // 'Z'","","  var littleA = 97;  // 'a'","  var littleZ = 122; // 'z'","","  var zero = 48;     // '0'","  var nine = 57;     // '9'","","  var plus = 43;     // '+'","  var slash = 47;    // '/'","","  var littleOffset = 26;","  var numberOffset = 52;","","  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ","  if (bigA <= charCode && charCode <= bigZ) {","    return (charCode - bigA);","  }","","  // 26 - 51: abcdefghijklmnopqrstuvwxyz","  if (littleA <= charCode && charCode <= littleZ) {","    return (charCode - littleA + littleOffset);","  }","","  // 52 - 61: 0123456789","  if (zero <= charCode && charCode <= nine) {","    return (charCode - zero + numberOffset);","  }","","  // 62: +","  if (charCode == plus) {","    return 62;","  }","","  // 63: /","  if (charCode == slash) {","    return 63;","  }","","  // Invalid base64 digit.","  return -1;","};",""],"l":{"8":1,"13":1,"14":0,"15":0,"17":0,"24":1,"25":0,"26":0,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"41":0,"42":0,"46":0,"47":0,"51":0,"52":0,"56":0,"57":0,"61":0,"62":0,"66":0}},"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/util.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/util.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":1,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":1,"102":1,"103":1,"104":1,"105":0,"106":1,"107":0,"108":0,"109":0,"110":1,"111":1,"112":0,"113":0,"114":0,"115":1,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":1,"146":1,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":1,"164":1,"165":0,"166":0,"167":0,"168":0,"169":0,"170":1,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[1,0],"37":[0,0],"38":[1,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0,0,0,0,0,0,0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"getArg","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":45}}},"2":{"name":"urlParse","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":24}}},"3":{"name":"urlGenerate","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":33}}},"4":{"name":"normalize","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":26}}},"5":{"name":"join","line":141,"loc":{"start":{"line":141,"column":0},"end":{"line":141,"column":28}}},"6":{"name":"(anonymous_6)","line":184,"loc":{"start":{"line":184,"column":21},"end":{"line":184,"column":38}}},"7":{"name":"relative","line":194,"loc":{"start":{"line":194,"column":0},"end":{"line":194,"column":32}}},"8":{"name":"(anonymous_8)","line":228,"loc":{"start":{"line":228,"column":25},"end":{"line":228,"column":37}}},"9":{"name":"identity","line":233,"loc":{"start":{"line":233,"column":0},"end":{"line":233,"column":22}}},"10":{"name":"toSetString","line":246,"loc":{"start":{"line":246,"column":0},"end":{"line":246,"column":27}}},"11":{"name":"fromSetString","line":255,"loc":{"start":{"line":255,"column":0},"end":{"line":255,"column":29}}},"12":{"name":"isProtoString","line":264,"loc":{"start":{"line":264,"column":0},"end":{"line":264,"column":26}}},"13":{"name":"compareByOriginalPositions","line":304,"loc":{"start":{"line":304,"column":0},"end":{"line":304,"column":77}}},"14":{"name":"compareByGeneratedPositionsDeflated","line":343,"loc":{"start":{"line":343,"column":0},"end":{"line":343,"column":87}}},"15":{"name":"strcmp","line":373,"loc":{"start":{"line":373,"column":0},"end":{"line":373,"column":30}}},"16":{"name":"compareByGeneratedPositionsInflated","line":389,"loc":{"start":{"line":389,"column":0},"end":{"line":389,"column":65}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":26,"column":1}},"2":{"start":{"line":19,"column":2},"end":{"line":25,"column":3}},"3":{"start":{"line":20,"column":4},"end":{"line":20,"column":24}},"4":{"start":{"line":21,"column":9},"end":{"line":25,"column":3}},"5":{"start":{"line":22,"column":4},"end":{"line":22,"column":25}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":63}},"7":{"start":{"line":27,"column":0},"end":{"line":27,"column":24}},"8":{"start":{"line":29,"column":0},"end":{"line":29,"column":81}},"9":{"start":{"line":30,"column":0},"end":{"line":30,"column":36}},"10":{"start":{"line":32,"column":0},"end":{"line":44,"column":1}},"11":{"start":{"line":33,"column":2},"end":{"line":33,"column":36}},"12":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"13":{"start":{"line":35,"column":4},"end":{"line":35,"column":16}},"14":{"start":{"line":37,"column":2},"end":{"line":43,"column":4}},"15":{"start":{"line":45,"column":0},"end":{"line":45,"column":28}},"16":{"start":{"line":47,"column":0},"end":{"line":66,"column":1}},"17":{"start":{"line":48,"column":2},"end":{"line":48,"column":15}},"18":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"19":{"start":{"line":50,"column":4},"end":{"line":50,"column":35}},"20":{"start":{"line":52,"column":2},"end":{"line":52,"column":14}},"21":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"22":{"start":{"line":54,"column":4},"end":{"line":54,"column":33}},"23":{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},"24":{"start":{"line":57,"column":4},"end":{"line":57,"column":27}},"25":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"26":{"start":{"line":60,"column":4},"end":{"line":60,"column":32}},"27":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"28":{"start":{"line":63,"column":4},"end":{"line":63,"column":27}},"29":{"start":{"line":65,"column":2},"end":{"line":65,"column":13}},"30":{"start":{"line":67,"column":0},"end":{"line":67,"column":34}},"31":{"start":{"line":80,"column":0},"end":{"line":122,"column":1}},"32":{"start":{"line":81,"column":2},"end":{"line":81,"column":19}},"33":{"start":{"line":82,"column":2},"end":{"line":82,"column":28}},"34":{"start":{"line":83,"column":2},"end":{"line":88,"column":3}},"35":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"36":{"start":{"line":85,"column":6},"end":{"line":85,"column":19}},"37":{"start":{"line":87,"column":4},"end":{"line":87,"column":20}},"38":{"start":{"line":89,"column":2},"end":{"line":89,"column":44}},"39":{"start":{"line":91,"column":2},"end":{"line":91,"column":32}},"40":{"start":{"line":92,"column":2},"end":{"line":110,"column":3}},"41":{"start":{"line":93,"column":4},"end":{"line":93,"column":20}},"42":{"start":{"line":94,"column":4},"end":{"line":109,"column":5}},"43":{"start":{"line":95,"column":6},"end":{"line":95,"column":25}},"44":{"start":{"line":96,"column":11},"end":{"line":109,"column":5}},"45":{"start":{"line":97,"column":6},"end":{"line":97,"column":11}},"46":{"start":{"line":98,"column":11},"end":{"line":109,"column":5}},"47":{"start":{"line":99,"column":6},"end":{"line":108,"column":7}},"48":{"start":{"line":103,"column":8},"end":{"line":103,"column":32}},"49":{"start":{"line":104,"column":8},"end":{"line":104,"column":15}},"50":{"start":{"line":106,"column":8},"end":{"line":106,"column":27}},"51":{"start":{"line":107,"column":8},"end":{"line":107,"column":13}},"52":{"start":{"line":111,"column":2},"end":{"line":111,"column":25}},"53":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"54":{"start":{"line":114,"column":4},"end":{"line":114,"column":34}},"55":{"start":{"line":117,"column":2},"end":{"line":120,"column":3}},"56":{"start":{"line":118,"column":4},"end":{"line":118,"column":20}},"57":{"start":{"line":119,"column":4},"end":{"line":119,"column":28}},"58":{"start":{"line":121,"column":2},"end":{"line":121,"column":14}},"59":{"start":{"line":123,"column":0},"end":{"line":123,"column":30}},"60":{"start":{"line":141,"column":0},"end":{"line":181,"column":1}},"61":{"start":{"line":142,"column":2},"end":{"line":144,"column":3}},"62":{"start":{"line":143,"column":4},"end":{"line":143,"column":16}},"63":{"start":{"line":145,"column":2},"end":{"line":147,"column":3}},"64":{"start":{"line":146,"column":4},"end":{"line":146,"column":16}},"65":{"start":{"line":148,"column":2},"end":{"line":148,"column":33}},"66":{"start":{"line":149,"column":2},"end":{"line":149,"column":33}},"67":{"start":{"line":150,"column":2},"end":{"line":152,"column":3}},"68":{"start":{"line":151,"column":4},"end":{"line":151,"column":33}},"69":{"start":{"line":155,"column":2},"end":{"line":160,"column":3}},"70":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"71":{"start":{"line":157,"column":6},"end":{"line":157,"column":40}},"72":{"start":{"line":159,"column":4},"end":{"line":159,"column":33}},"73":{"start":{"line":162,"column":2},"end":{"line":164,"column":3}},"74":{"start":{"line":163,"column":4},"end":{"line":163,"column":17}},"75":{"start":{"line":167,"column":2},"end":{"line":170,"column":3}},"76":{"start":{"line":168,"column":4},"end":{"line":168,"column":26}},"77":{"start":{"line":169,"column":4},"end":{"line":169,"column":33}},"78":{"start":{"line":172,"column":2},"end":{"line":174,"column":57}},"79":{"start":{"line":176,"column":2},"end":{"line":179,"column":3}},"80":{"start":{"line":177,"column":4},"end":{"line":177,"column":27}},"81":{"start":{"line":178,"column":4},"end":{"line":178,"column":33}},"82":{"start":{"line":180,"column":2},"end":{"line":180,"column":16}},"83":{"start":{"line":182,"column":0},"end":{"line":182,"column":20}},"84":{"start":{"line":184,"column":0},"end":{"line":186,"column":2}},"85":{"start":{"line":185,"column":2},"end":{"line":185,"column":61}},"86":{"start":{"line":194,"column":0},"end":{"line":225,"column":1}},"87":{"start":{"line":195,"column":2},"end":{"line":197,"column":3}},"88":{"start":{"line":196,"column":4},"end":{"line":196,"column":16}},"89":{"start":{"line":199,"column":2},"end":{"line":199,"column":35}},"90":{"start":{"line":205,"column":2},"end":{"line":205,"column":16}},"91":{"start":{"line":206,"column":2},"end":{"line":221,"column":3}},"92":{"start":{"line":207,"column":4},"end":{"line":207,"column":39}},"93":{"start":{"line":208,"column":4},"end":{"line":210,"column":5}},"94":{"start":{"line":209,"column":6},"end":{"line":209,"column":19}},"95":{"start":{"line":215,"column":4},"end":{"line":215,"column":34}},"96":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"97":{"start":{"line":217,"column":6},"end":{"line":217,"column":19}},"98":{"start":{"line":220,"column":4},"end":{"line":220,"column":12}},"99":{"start":{"line":224,"column":2},"end":{"line":224,"column":71}},"100":{"start":{"line":226,"column":0},"end":{"line":226,"column":28}},"101":{"start":{"line":228,"column":0},"end":{"line":231,"column":5}},"102":{"start":{"line":229,"column":2},"end":{"line":229,"column":32}},"103":{"start":{"line":230,"column":2},"end":{"line":230,"column":31}},"104":{"start":{"line":233,"column":0},"end":{"line":235,"column":1}},"105":{"start":{"line":234,"column":2},"end":{"line":234,"column":11}},"106":{"start":{"line":246,"column":0},"end":{"line":252,"column":1}},"107":{"start":{"line":247,"column":2},"end":{"line":249,"column":3}},"108":{"start":{"line":248,"column":4},"end":{"line":248,"column":22}},"109":{"start":{"line":251,"column":2},"end":{"line":251,"column":14}},"110":{"start":{"line":253,"column":0},"end":{"line":253,"column":65}},"111":{"start":{"line":255,"column":0},"end":{"line":261,"column":1}},"112":{"start":{"line":256,"column":2},"end":{"line":258,"column":3}},"113":{"start":{"line":257,"column":4},"end":{"line":257,"column":25}},"114":{"start":{"line":260,"column":2},"end":{"line":260,"column":14}},"115":{"start":{"line":262,"column":0},"end":{"line":262,"column":69}},"116":{"start":{"line":264,"column":0},"end":{"line":294,"column":1}},"117":{"start":{"line":265,"column":2},"end":{"line":267,"column":3}},"118":{"start":{"line":266,"column":4},"end":{"line":266,"column":17}},"119":{"start":{"line":269,"column":2},"end":{"line":269,"column":24}},"120":{"start":{"line":271,"column":2},"end":{"line":273,"column":3}},"121":{"start":{"line":272,"column":4},"end":{"line":272,"column":17}},"122":{"start":{"line":275,"column":2},"end":{"line":285,"column":3}},"123":{"start":{"line":284,"column":4},"end":{"line":284,"column":17}},"124":{"start":{"line":287,"column":2},"end":{"line":291,"column":3}},"125":{"start":{"line":288,"column":4},"end":{"line":290,"column":5}},"126":{"start":{"line":289,"column":6},"end":{"line":289,"column":19}},"127":{"start":{"line":293,"column":2},"end":{"line":293,"column":14}},"128":{"start":{"line":304,"column":0},"end":{"line":331,"column":1}},"129":{"start":{"line":305,"column":2},"end":{"line":305,"column":46}},"130":{"start":{"line":306,"column":2},"end":{"line":308,"column":3}},"131":{"start":{"line":307,"column":4},"end":{"line":307,"column":15}},"132":{"start":{"line":310,"column":2},"end":{"line":310,"column":54}},"133":{"start":{"line":311,"column":2},"end":{"line":313,"column":3}},"134":{"start":{"line":312,"column":4},"end":{"line":312,"column":15}},"135":{"start":{"line":315,"column":2},"end":{"line":315,"column":58}},"136":{"start":{"line":316,"column":2},"end":{"line":318,"column":3}},"137":{"start":{"line":317,"column":4},"end":{"line":317,"column":15}},"138":{"start":{"line":320,"column":2},"end":{"line":320,"column":60}},"139":{"start":{"line":321,"column":2},"end":{"line":323,"column":3}},"140":{"start":{"line":322,"column":4},"end":{"line":322,"column":15}},"141":{"start":{"line":325,"column":2},"end":{"line":325,"column":56}},"142":{"start":{"line":326,"column":2},"end":{"line":328,"column":3}},"143":{"start":{"line":327,"column":4},"end":{"line":327,"column":15}},"144":{"start":{"line":330,"column":2},"end":{"line":330,"column":39}},"145":{"start":{"line":332,"column":0},"end":{"line":332,"column":64}},"146":{"start":{"line":343,"column":0},"end":{"line":370,"column":1}},"147":{"start":{"line":344,"column":2},"end":{"line":344,"column":60}},"148":{"start":{"line":345,"column":2},"end":{"line":347,"column":3}},"149":{"start":{"line":346,"column":4},"end":{"line":346,"column":15}},"150":{"start":{"line":349,"column":2},"end":{"line":349,"column":60}},"151":{"start":{"line":350,"column":2},"end":{"line":352,"column":3}},"152":{"start":{"line":351,"column":4},"end":{"line":351,"column":15}},"153":{"start":{"line":354,"column":2},"end":{"line":354,"column":42}},"154":{"start":{"line":355,"column":2},"end":{"line":357,"column":3}},"155":{"start":{"line":356,"column":4},"end":{"line":356,"column":15}},"156":{"start":{"line":359,"column":2},"end":{"line":359,"column":54}},"157":{"start":{"line":360,"column":2},"end":{"line":362,"column":3}},"158":{"start":{"line":361,"column":4},"end":{"line":361,"column":15}},"159":{"start":{"line":364,"column":2},"end":{"line":364,"column":58}},"160":{"start":{"line":365,"column":2},"end":{"line":367,"column":3}},"161":{"start":{"line":366,"column":4},"end":{"line":366,"column":15}},"162":{"start":{"line":369,"column":2},"end":{"line":369,"column":39}},"163":{"start":{"line":371,"column":0},"end":{"line":371,"column":82}},"164":{"start":{"line":373,"column":0},"end":{"line":383,"column":1}},"165":{"start":{"line":374,"column":2},"end":{"line":376,"column":3}},"166":{"start":{"line":375,"column":4},"end":{"line":375,"column":13}},"167":{"start":{"line":378,"column":2},"end":{"line":380,"column":3}},"168":{"start":{"line":379,"column":4},"end":{"line":379,"column":13}},"169":{"start":{"line":382,"column":2},"end":{"line":382,"column":12}},"170":{"start":{"line":389,"column":0},"end":{"line":416,"column":1}},"171":{"start":{"line":390,"column":2},"end":{"line":390,"column":60}},"172":{"start":{"line":391,"column":2},"end":{"line":393,"column":3}},"173":{"start":{"line":392,"column":4},"end":{"line":392,"column":15}},"174":{"start":{"line":395,"column":2},"end":{"line":395,"column":60}},"175":{"start":{"line":396,"column":2},"end":{"line":398,"column":3}},"176":{"start":{"line":397,"column":4},"end":{"line":397,"column":15}},"177":{"start":{"line":400,"column":2},"end":{"line":400,"column":49}},"178":{"start":{"line":401,"column":2},"end":{"line":403,"column":3}},"179":{"start":{"line":402,"column":4},"end":{"line":402,"column":15}},"180":{"start":{"line":405,"column":2},"end":{"line":405,"column":54}},"181":{"start":{"line":406,"column":2},"end":{"line":408,"column":3}},"182":{"start":{"line":407,"column":4},"end":{"line":407,"column":15}},"183":{"start":{"line":410,"column":2},"end":{"line":410,"column":58}},"184":{"start":{"line":411,"column":2},"end":{"line":413,"column":3}},"185":{"start":{"line":412,"column":4},"end":{"line":412,"column":15}},"186":{"start":{"line":415,"column":2},"end":{"line":415,"column":46}},"187":{"start":{"line":417,"column":0},"end":{"line":417,"column":82}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":9},"end":{"line":21,"column":9}},{"start":{"line":21,"column":9},"end":{"line":21,"column":9}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"6":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"7":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"8":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"9":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"10":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"11":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"12":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":11},"end":{"line":96,"column":11}},{"start":{"line":96,"column":11},"end":{"line":96,"column":11}}]},"13":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":11},"end":{"line":98,"column":11}},{"start":{"line":98,"column":11},"end":{"line":98,"column":11}}]},"14":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":6},"end":{"line":99,"column":6}},{"start":{"line":99,"column":6},"end":{"line":99,"column":6}}]},"15":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"16":{"line":114,"type":"cond-expr","locations":[{"start":{"line":114,"column":24},"end":{"line":114,"column":27}},{"start":{"line":114,"column":30},"end":{"line":114,"column":33}}]},"17":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"18":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"19":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"20":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":2},"end":{"line":150,"column":2}},{"start":{"line":150,"column":2},"end":{"line":150,"column":2}}]},"21":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":12},"end":{"line":151,"column":25}},{"start":{"line":151,"column":29},"end":{"line":151,"column":32}}]},"22":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"23":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":14}},{"start":{"line":155,"column":18},"end":{"line":155,"column":34}}]},"24":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":156,"column":4}},{"start":{"line":156,"column":4},"end":{"line":156,"column":4}}]},"25":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"26":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":14}},{"start":{"line":162,"column":18},"end":{"line":162,"column":44}}]},"27":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"28":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":6},"end":{"line":167,"column":14}},{"start":{"line":167,"column":18},"end":{"line":167,"column":32}},{"start":{"line":167,"column":36},"end":{"line":167,"column":50}}]},"29":{"line":172,"type":"cond-expr","locations":[{"start":{"line":173,"column":6},"end":{"line":173,"column":11}},{"start":{"line":174,"column":6},"end":{"line":174,"column":56}}]},"30":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"31":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":9},"end":{"line":185,"column":32}},{"start":{"line":185,"column":36},"end":{"line":185,"column":60}}]},"32":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"33":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"34":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"35":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":2},"end":{"line":247,"column":2}},{"start":{"line":247,"column":2},"end":{"line":247,"column":2}}]},"36":{"line":253,"type":"cond-expr","locations":[{"start":{"line":253,"column":42},"end":{"line":253,"column":50}},{"start":{"line":253,"column":53},"end":{"line":253,"column":64}}]},"37":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":2},"end":{"line":256,"column":2}},{"start":{"line":256,"column":2},"end":{"line":256,"column":2}}]},"38":{"line":262,"type":"cond-expr","locations":[{"start":{"line":262,"column":44},"end":{"line":262,"column":52}},{"start":{"line":262,"column":55},"end":{"line":262,"column":68}}]},"39":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":2},"end":{"line":265,"column":2}},{"start":{"line":265,"column":2},"end":{"line":265,"column":2}}]},"40":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":2},"end":{"line":271,"column":2}},{"start":{"line":271,"column":2},"end":{"line":271,"column":2}}]},"41":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"42":{"line":275,"type":"binary-expr","locations":[{"start":{"line":275,"column":6},"end":{"line":275,"column":37}},{"start":{"line":276,"column":6},"end":{"line":276,"column":37}},{"start":{"line":277,"column":6},"end":{"line":277,"column":38}},{"start":{"line":278,"column":6},"end":{"line":278,"column":38}},{"start":{"line":279,"column":6},"end":{"line":279,"column":38}},{"start":{"line":280,"column":6},"end":{"line":280,"column":38}},{"start":{"line":281,"column":6},"end":{"line":281,"column":38}},{"start":{"line":282,"column":6},"end":{"line":282,"column":37}},{"start":{"line":283,"column":6},"end":{"line":283,"column":37}}]},"43":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":4},"end":{"line":288,"column":4}},{"start":{"line":288,"column":4},"end":{"line":288,"column":4}}]},"44":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":2},"end":{"line":306,"column":2}},{"start":{"line":306,"column":2},"end":{"line":306,"column":2}}]},"45":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":2},"end":{"line":311,"column":2}},{"start":{"line":311,"column":2},"end":{"line":311,"column":2}}]},"46":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":2},"end":{"line":316,"column":2}},{"start":{"line":316,"column":2},"end":{"line":316,"column":2}}]},"47":{"line":316,"type":"binary-expr","locations":[{"start":{"line":316,"column":6},"end":{"line":316,"column":15}},{"start":{"line":316,"column":19},"end":{"line":316,"column":38}}]},"48":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":2},"end":{"line":321,"column":2}},{"start":{"line":321,"column":2},"end":{"line":321,"column":2}}]},"49":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":2},"end":{"line":326,"column":2}},{"start":{"line":326,"column":2},"end":{"line":326,"column":2}}]},"50":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":2},"end":{"line":345,"column":2}},{"start":{"line":345,"column":2},"end":{"line":345,"column":2}}]},"51":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":2},"end":{"line":350,"column":2}},{"start":{"line":350,"column":2},"end":{"line":350,"column":2}}]},"52":{"line":350,"type":"binary-expr","locations":[{"start":{"line":350,"column":6},"end":{"line":350,"column":15}},{"start":{"line":350,"column":19},"end":{"line":350,"column":39}}]},"53":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":2},"end":{"line":355,"column":2}},{"start":{"line":355,"column":2},"end":{"line":355,"column":2}}]},"54":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":2},"end":{"line":360,"column":2}},{"start":{"line":360,"column":2},"end":{"line":360,"column":2}}]},"55":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":2},"end":{"line":365,"column":2}},{"start":{"line":365,"column":2},"end":{"line":365,"column":2}}]},"56":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":2},"end":{"line":374,"column":2}},{"start":{"line":374,"column":2},"end":{"line":374,"column":2}}]},"57":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":2},"end":{"line":378,"column":2}},{"start":{"line":378,"column":2},"end":{"line":378,"column":2}}]},"58":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":2},"end":{"line":391,"column":2}},{"start":{"line":391,"column":2},"end":{"line":391,"column":2}}]},"59":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":2},"end":{"line":396,"column":2}},{"start":{"line":396,"column":2},"end":{"line":396,"column":2}}]},"60":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":2},"end":{"line":401,"column":2}},{"start":{"line":401,"column":2},"end":{"line":401,"column":2}}]},"61":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":2},"end":{"line":406,"column":2}},{"start":{"line":406,"column":2},"end":{"line":406,"column":2}}]},"62":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":2},"end":{"line":411,"column":2}},{"start":{"line":411,"column":2},"end":{"line":411,"column":2}}]}},"code":["/* -*- Mode: js; js-indent-level: 2; -*- */","/*"," * Copyright 2011 Mozilla Foundation and contributors"," * Licensed under the New BSD license. See LICENSE or:"," * http://opensource.org/licenses/BSD-3-Clause"," */","","/**"," * This is a helper function for getting values from parameter/options"," * objects."," *"," * @param args The object we are extracting values from"," * @param name The name of the property we are getting."," * @param defaultValue An optional value to return if the property is missing"," * from the object. If this is not specified and the property is missing, an"," * error will be thrown."," */","function getArg(aArgs, aName, aDefaultValue) {","  if (aName in aArgs) {","    return aArgs[aName];","  } else if (arguments.length === 3) {","    return aDefaultValue;","  } else {","    throw new Error('\"' + aName + '\" is a required argument.');","  }","}","exports.getArg = getArg;","","var urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;","var dataUrlRegexp = /^data:.+\\,.+$/;","","function urlParse(aUrl) {","  var match = aUrl.match(urlRegexp);","  if (!match) {","    return null;","  }","  return {","    scheme: match[1],","    auth: match[2],","    host: match[3],","    port: match[4],","    path: match[5]","  };","}","exports.urlParse = urlParse;","","function urlGenerate(aParsedUrl) {","  var url = '';","  if (aParsedUrl.scheme) {","    url += aParsedUrl.scheme + ':';","  }","  url += '//';","  if (aParsedUrl.auth) {","    url += aParsedUrl.auth + '@';","  }","  if (aParsedUrl.host) {","    url += aParsedUrl.host;","  }","  if (aParsedUrl.port) {","    url += \":\" + aParsedUrl.port","  }","  if (aParsedUrl.path) {","    url += aParsedUrl.path;","  }","  return url;","}","exports.urlGenerate = urlGenerate;","","/**"," * Normalizes a path, or the path portion of a URL:"," *"," * - Replaces consecutive slashes with one slash."," * - Removes unnecessary '.' parts."," * - Removes unnecessary '<dir>/..' parts."," *"," * Based on code in the Node.js 'path' core module."," *"," * @param aPath The path or url to normalize."," */","function normalize(aPath) {","  var path = aPath;","  var url = urlParse(aPath);","  if (url) {","    if (!url.path) {","      return aPath;","    }","    path = url.path;","  }","  var isAbsolute = exports.isAbsolute(path);","","  var parts = path.split(/\\/+/);","  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {","    part = parts[i];","    if (part === '.') {","      parts.splice(i, 1);","    } else if (part === '..') {","      up++;","    } else if (up > 0) {","      if (part === '') {","        // The first part is blank if the path is absolute. Trying to go","        // above the root is a no-op. Therefore we can remove all '..' parts","        // directly after the root.","        parts.splice(i + 1, up);","        up = 0;","      } else {","        parts.splice(i, 2);","        up--;","      }","    }","  }","  path = parts.join('/');","","  if (path === '') {","    path = isAbsolute ? '/' : '.';","  }","","  if (url) {","    url.path = path;","    return urlGenerate(url);","  }","  return path;","}","exports.normalize = normalize;","","/**"," * Joins two paths/URLs."," *"," * @param aRoot The root path or URL."," * @param aPath The path or URL to be joined with the root."," *"," * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a"," *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended"," *   first."," * - Otherwise aPath is a path. If aRoot is a URL, then its path portion"," *   is updated with the result and aRoot is returned. Otherwise the result"," *   is returned."," *   - If aPath is absolute, the result is aPath."," *   - Otherwise the two paths are joined with a slash."," * - Joining for example 'http://' and 'www.example.com' is also supported."," */","function join(aRoot, aPath) {","  if (aRoot === \"\") {","    aRoot = \".\";","  }","  if (aPath === \"\") {","    aPath = \".\";","  }","  var aPathUrl = urlParse(aPath);","  var aRootUrl = urlParse(aRoot);","  if (aRootUrl) {","    aRoot = aRootUrl.path || '/';","  }","","  // `join(foo, '//www.example.org')`","  if (aPathUrl && !aPathUrl.scheme) {","    if (aRootUrl) {","      aPathUrl.scheme = aRootUrl.scheme;","    }","    return urlGenerate(aPathUrl);","  }","","  if (aPathUrl || aPath.match(dataUrlRegexp)) {","    return aPath;","  }","","  // `join('http://', 'www.example.com')`","  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {","    aRootUrl.host = aPath;","    return urlGenerate(aRootUrl);","  }","","  var joined = aPath.charAt(0) === '/'","    ? aPath","    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);","","  if (aRootUrl) {","    aRootUrl.path = joined;","    return urlGenerate(aRootUrl);","  }","  return joined;","}","exports.join = join;","","exports.isAbsolute = function (aPath) {","  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);","};","","/**"," * Make a path relative to a URL or another path."," *"," * @param aRoot The root path or URL."," * @param aPath The path or URL to be made relative to aRoot."," */","function relative(aRoot, aPath) {","  if (aRoot === \"\") {","    aRoot = \".\";","  }","","  aRoot = aRoot.replace(/\\/$/, '');","","  // It is possible for the path to be above the root. In this case, simply","  // checking whether the root is a prefix of the path won't work. Instead, we","  // need to remove components from the root one by one, until either we find","  // a prefix that fits, or we run out of components to remove.","  var level = 0;","  while (aPath.indexOf(aRoot + '/') !== 0) {","    var index = aRoot.lastIndexOf(\"/\");","    if (index < 0) {","      return aPath;","    }","","    // If the only part of the root that is left is the scheme (i.e. http://,","    // file:///, etc.), one or more slashes (/), or simply nothing at all, we","    // have exhausted all components, so the path is not relative to the root.","    aRoot = aRoot.slice(0, index);","    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {","      return aPath;","    }","","    ++level;","  }","","  // Make sure we add a \"../\" for each component we removed from the root.","  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);","}","exports.relative = relative;","","var supportsNullProto = (function () {","  var obj = Object.create(null);","  return !('__proto__' in obj);","}());","","function identity (s) {","  return s;","}","","/**"," * Because behavior goes wacky when you set `__proto__` on objects, we"," * have to prefix all the strings in our set with an arbitrary character."," *"," * See https://github.com/mozilla/source-map/pull/31 and"," * https://github.com/mozilla/source-map/issues/30"," *"," * @param String aStr"," */","function toSetString(aStr) {","  if (isProtoString(aStr)) {","    return '$' + aStr;","  }","","  return aStr;","}","exports.toSetString = supportsNullProto ? identity : toSetString;","","function fromSetString(aStr) {","  if (isProtoString(aStr)) {","    return aStr.slice(1);","  }","","  return aStr;","}","exports.fromSetString = supportsNullProto ? identity : fromSetString;","","function isProtoString(s) {","  if (!s) {","    return false;","  }","","  var length = s.length;","","  if (length < 9 /* \"__proto__\".length */) {","    return false;","  }","","  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||","      s.charCodeAt(length - 2) !== 95  /* '_' */ ||","      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||","      s.charCodeAt(length - 4) !== 116 /* 't' */ ||","      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||","      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||","      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||","      s.charCodeAt(length - 8) !== 95  /* '_' */ ||","      s.charCodeAt(length - 9) !== 95  /* '_' */) {","    return false;","  }","","  for (var i = length - 10; i >= 0; i--) {","    if (s.charCodeAt(i) !== 36 /* '$' */) {","      return false;","    }","  }","","  return true;","}","","/**"," * Comparator between two mappings where the original positions are compared."," *"," * Optionally pass in `true` as `onlyCompareGenerated` to consider two"," * mappings with the same original source/line/column, but different generated"," * line and column the same. Useful when searching for a mapping with a"," * stubbed out mapping."," */","function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {","  var cmp = mappingA.source - mappingB.source;","  if (cmp !== 0) {","    return cmp;","  }","","  cmp = mappingA.originalLine - mappingB.originalLine;","  if (cmp !== 0) {","    return cmp;","  }","","  cmp = mappingA.originalColumn - mappingB.originalColumn;","  if (cmp !== 0 || onlyCompareOriginal) {","    return cmp;","  }","","  cmp = mappingA.generatedColumn - mappingB.generatedColumn;","  if (cmp !== 0) {","    return cmp;","  }","","  cmp = mappingA.generatedLine - mappingB.generatedLine;","  if (cmp !== 0) {","    return cmp;","  }","","  return mappingA.name - mappingB.name;","}","exports.compareByOriginalPositions = compareByOriginalPositions;","","/**"," * Comparator between two mappings with deflated source and name indices where"," * the generated positions are compared."," *"," * Optionally pass in `true` as `onlyCompareGenerated` to consider two"," * mappings with the same generated line and column, but different"," * source/name/original line and column the same. Useful when searching for a"," * mapping with a stubbed out mapping."," */","function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {","  var cmp = mappingA.generatedLine - mappingB.generatedLine;","  if (cmp !== 0) {","    return cmp;","  }","","  cmp = mappingA.generatedColumn - mappingB.generatedColumn;","  if (cmp !== 0 || onlyCompareGenerated) {","    return cmp;","  }","","  cmp = mappingA.source - mappingB.source;","  if (cmp !== 0) {","    return cmp;","  }","","  cmp = mappingA.originalLine - mappingB.originalLine;","  if (cmp !== 0) {","    return cmp;","  }","","  cmp = mappingA.originalColumn - mappingB.originalColumn;","  if (cmp !== 0) {","    return cmp;","  }","","  return mappingA.name - mappingB.name;","}","exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;","","function strcmp(aStr1, aStr2) {","  if (aStr1 === aStr2) {","    return 0;","  }","","  if (aStr1 > aStr2) {","    return 1;","  }","","  return -1;","}","","/**"," * Comparator between two mappings with inflated source and name strings where"," * the generated positions are compared."," */","function compareByGeneratedPositionsInflated(mappingA, mappingB) {","  var cmp = mappingA.generatedLine - mappingB.generatedLine;","  if (cmp !== 0) {","    return cmp;","  }","","  cmp = mappingA.generatedColumn - mappingB.generatedColumn;","  if (cmp !== 0) {","    return cmp;","  }","","  cmp = strcmp(mappingA.source, mappingB.source);","  if (cmp !== 0) {","    return cmp;","  }","","  cmp = mappingA.originalLine - mappingB.originalLine;","  if (cmp !== 0) {","    return cmp;","  }","","  cmp = mappingA.originalColumn - mappingB.originalColumn;","  if (cmp !== 0) {","    return cmp;","  }","","  return strcmp(mappingA.name, mappingB.name);","}","exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;",""],"l":{"18":1,"19":0,"20":0,"21":0,"22":0,"24":0,"27":1,"29":1,"30":1,"32":1,"33":0,"34":0,"35":0,"37":0,"45":1,"47":1,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"56":0,"57":0,"59":0,"60":0,"62":0,"63":0,"65":0,"67":1,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"87":0,"89":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"103":0,"104":0,"106":0,"107":0,"111":0,"113":0,"114":0,"117":0,"118":0,"119":0,"121":0,"123":1,"141":1,"142":0,"143":0,"145":0,"146":0,"148":0,"149":0,"150":0,"151":0,"155":0,"156":0,"157":0,"159":0,"162":0,"163":0,"167":0,"168":0,"169":0,"172":0,"176":0,"177":0,"178":0,"180":0,"182":1,"184":1,"185":0,"194":1,"195":0,"196":0,"199":0,"205":0,"206":0,"207":0,"208":0,"209":0,"215":0,"216":0,"217":0,"220":0,"224":0,"226":1,"228":1,"229":1,"230":1,"233":1,"234":0,"246":1,"247":0,"248":0,"251":0,"253":1,"255":1,"256":0,"257":0,"260":0,"262":1,"264":1,"265":0,"266":0,"269":0,"271":0,"272":0,"275":0,"284":0,"287":0,"288":0,"289":0,"293":0,"304":1,"305":0,"306":0,"307":0,"310":0,"311":0,"312":0,"315":0,"316":0,"317":0,"320":0,"321":0,"322":0,"325":0,"326":0,"327":0,"330":0,"332":1,"343":1,"344":0,"345":0,"346":0,"349":0,"350":0,"351":0,"354":0,"355":0,"356":0,"359":0,"360":0,"361":0,"364":0,"365":0,"366":0,"369":0,"371":1,"373":1,"374":0,"375":0,"378":0,"379":0,"382":0,"389":1,"390":0,"391":0,"392":0,"395":0,"396":0,"397":0,"400":0,"401":0,"402":0,"405":0,"406":0,"407":0,"410":0,"411":0,"412":0,"415":0,"417":1}},"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/array-set.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/array-set.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"ArraySet","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":20}}},"2":{"name":"ArraySet_fromArray","line":25,"loc":{"start":{"line":25,"column":21},"end":{"line":25,"column":75}}},"3":{"name":"ArraySet_size","line":39,"loc":{"start":{"line":39,"column":26},"end":{"line":39,"column":51}}},"4":{"name":"ArraySet_add","line":48,"loc":{"start":{"line":48,"column":25},"end":{"line":48,"column":71}}},"5":{"name":"ArraySet_has","line":65,"loc":{"start":{"line":65,"column":25},"end":{"line":65,"column":53}}},"6":{"name":"ArraySet_indexOf","line":75,"loc":{"start":{"line":75,"column":29},"end":{"line":75,"column":61}}},"7":{"name":"ArraySet_at","line":88,"loc":{"start":{"line":88,"column":24},"end":{"line":88,"column":51}}},"8":{"name":"ArraySet_toArray","line":100,"loc":{"start":{"line":100,"column":29},"end":{"line":100,"column":57}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":42}},"3":{"start":{"line":17,"column":0},"end":{"line":20,"column":1}},"4":{"start":{"line":18,"column":2},"end":{"line":18,"column":19}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":34}},"6":{"start":{"line":25,"column":0},"end":{"line":31,"column":2}},"7":{"start":{"line":26,"column":2},"end":{"line":26,"column":27}},"8":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"9":{"start":{"line":28,"column":4},"end":{"line":28,"column":41}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":13}},"11":{"start":{"line":39,"column":0},"end":{"line":41,"column":2}},"12":{"start":{"line":40,"column":2},"end":{"line":40,"column":54}},"13":{"start":{"line":48,"column":0},"end":{"line":58,"column":2}},"14":{"start":{"line":49,"column":2},"end":{"line":49,"column":36}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":46}},"16":{"start":{"line":51,"column":2},"end":{"line":51,"column":31}},"17":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"18":{"start":{"line":53,"column":4},"end":{"line":53,"column":27}},"19":{"start":{"line":55,"column":2},"end":{"line":57,"column":3}},"20":{"start":{"line":56,"column":4},"end":{"line":56,"column":26}},"21":{"start":{"line":65,"column":0},"end":{"line":68,"column":2}},"22":{"start":{"line":66,"column":2},"end":{"line":66,"column":36}},"23":{"start":{"line":67,"column":2},"end":{"line":67,"column":35}},"24":{"start":{"line":75,"column":0},"end":{"line":81,"column":2}},"25":{"start":{"line":76,"column":2},"end":{"line":76,"column":36}},"26":{"start":{"line":77,"column":2},"end":{"line":79,"column":3}},"27":{"start":{"line":78,"column":4},"end":{"line":78,"column":27}},"28":{"start":{"line":80,"column":2},"end":{"line":80,"column":55}},"29":{"start":{"line":88,"column":0},"end":{"line":93,"column":2}},"30":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"31":{"start":{"line":90,"column":4},"end":{"line":90,"column":29}},"32":{"start":{"line":92,"column":2},"end":{"line":92,"column":51}},"33":{"start":{"line":100,"column":0},"end":{"line":102,"column":2}},"34":{"start":{"line":101,"column":2},"end":{"line":101,"column":29}},"35":{"start":{"line":104,"column":0},"end":{"line":104,"column":28}}},"branchMap":{"1":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"2":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":6},"end":{"line":52,"column":18}},{"start":{"line":52,"column":22},"end":{"line":52,"column":38}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"4":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":2},"end":{"line":77,"column":2}},{"start":{"line":77,"column":2},"end":{"line":77,"column":2}}]},"5":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"6":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":15}},{"start":{"line":89,"column":19},"end":{"line":89,"column":44}}]}},"code":["/* -*- Mode: js; js-indent-level: 2; -*- */","/*"," * Copyright 2011 Mozilla Foundation and contributors"," * Licensed under the New BSD license. See LICENSE or:"," * http://opensource.org/licenses/BSD-3-Clause"," */","","var util = require('./util');","var has = Object.prototype.hasOwnProperty;","","/**"," * A data structure which is a combination of an array and a set. Adding a new"," * member is O(1), testing for membership is O(1), and finding the index of an"," * element is O(1). Removing elements from the set is not supported. Only"," * strings are supported for membership."," */","function ArraySet() {","  this._array = [];","  this._set = Object.create(null);","}","","/**"," * Static method for creating ArraySet instances from an existing array."," */","ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {","  var set = new ArraySet();","  for (var i = 0, len = aArray.length; i < len; i++) {","    set.add(aArray[i], aAllowDuplicates);","  }","  return set;","};","","/**"," * Return how many unique items are in this ArraySet. If duplicates have been"," * added, than those do not count towards the size."," *"," * @returns Number"," */","ArraySet.prototype.size = function ArraySet_size() {","  return Object.getOwnPropertyNames(this._set).length;","};","","/**"," * Add the given string to this set."," *"," * @param String aStr"," */","ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {","  var sStr = util.toSetString(aStr);","  var isDuplicate = has.call(this._set, sStr);","  var idx = this._array.length;","  if (!isDuplicate || aAllowDuplicates) {","    this._array.push(aStr);","  }","  if (!isDuplicate) {","    this._set[sStr] = idx;","  }","};","","/**"," * Is the given string a member of this set?"," *"," * @param String aStr"," */","ArraySet.prototype.has = function ArraySet_has(aStr) {","  var sStr = util.toSetString(aStr);","  return has.call(this._set, sStr);","};","","/**"," * What is the index of the given string in the array?"," *"," * @param String aStr"," */","ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {","  var sStr = util.toSetString(aStr);","  if (has.call(this._set, sStr)) {","    return this._set[sStr];","  }","  throw new Error('\"' + aStr + '\" is not in the set.');","};","","/**"," * What is the element at the given index?"," *"," * @param Number aIdx"," */","ArraySet.prototype.at = function ArraySet_at(aIdx) {","  if (aIdx >= 0 && aIdx < this._array.length) {","    return this._array[aIdx];","  }","  throw new Error('No element indexed by ' + aIdx);","};","","/**"," * Returns the array representation of this set (which has the proper indices"," * indicated by indexOf). Note that this is a copy of the internal array used"," * for storing the members so that no one can mess with internal state."," */","ArraySet.prototype.toArray = function ArraySet_toArray() {","  return this._array.slice();","};","","exports.ArraySet = ArraySet;",""],"l":{"8":1,"9":1,"17":1,"18":0,"19":0,"25":1,"26":0,"27":0,"28":0,"30":0,"39":1,"40":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"65":1,"66":0,"67":0,"75":1,"76":0,"77":0,"78":0,"80":0,"88":1,"89":0,"90":0,"92":0,"100":1,"101":0,"104":1}},"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/mapping-list.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/mapping-list.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,0,0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"generatedPositionAfter","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":52}}},"2":{"name":"MappingList","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":23}}},"3":{"name":"MappingList_forEach","line":43,"loc":{"start":{"line":43,"column":2},"end":{"line":43,"column":52}}},"4":{"name":"MappingList_add","line":52,"loc":{"start":{"line":52,"column":28},"end":{"line":52,"column":63}}},"5":{"name":"MappingList_toArray","line":71,"loc":{"start":{"line":71,"column":32},"end":{"line":71,"column":63}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"2":{"start":{"line":14,"column":0},"end":{"line":22,"column":1}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":37}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":37}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":41}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":41}},"7":{"start":{"line":20,"column":2},"end":{"line":21,"column":75}},"8":{"start":{"line":29,"column":0},"end":{"line":34,"column":1}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":19}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":22}},"11":{"start":{"line":33,"column":2},"end":{"line":33,"column":55}},"12":{"start":{"line":42,"column":0},"end":{"line":45,"column":4}},"13":{"start":{"line":44,"column":4},"end":{"line":44,"column":45}},"14":{"start":{"line":52,"column":0},"end":{"line":60,"column":2}},"15":{"start":{"line":53,"column":2},"end":{"line":59,"column":3}},"16":{"start":{"line":54,"column":4},"end":{"line":54,"column":26}},"17":{"start":{"line":55,"column":4},"end":{"line":55,"column":31}},"18":{"start":{"line":57,"column":4},"end":{"line":57,"column":25}},"19":{"start":{"line":58,"column":4},"end":{"line":58,"column":31}},"20":{"start":{"line":71,"column":0},"end":{"line":77,"column":2}},"21":{"start":{"line":72,"column":2},"end":{"line":75,"column":3}},"22":{"start":{"line":73,"column":4},"end":{"line":73,"column":63}},"23":{"start":{"line":74,"column":4},"end":{"line":74,"column":24}},"24":{"start":{"line":76,"column":2},"end":{"line":76,"column":21}},"25":{"start":{"line":79,"column":0},"end":{"line":79,"column":34}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":9},"end":{"line":20,"column":22}},{"start":{"line":20,"column":26},"end":{"line":20,"column":40}},{"start":{"line":20,"column":44},"end":{"line":20,"column":62}},{"start":{"line":21,"column":9},"end":{"line":21,"column":74}}]},"2":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"3":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]}},"code":["/* -*- Mode: js; js-indent-level: 2; -*- */","/*"," * Copyright 2014 Mozilla Foundation and contributors"," * Licensed under the New BSD license. See LICENSE or:"," * http://opensource.org/licenses/BSD-3-Clause"," */","","var util = require('./util');","","/**"," * Determine whether mappingB is after mappingA with respect to generated"," * position."," */","function generatedPositionAfter(mappingA, mappingB) {","  // Optimized for most common case","  var lineA = mappingA.generatedLine;","  var lineB = mappingB.generatedLine;","  var columnA = mappingA.generatedColumn;","  var columnB = mappingB.generatedColumn;","  return lineB > lineA || lineB == lineA && columnB >= columnA ||","         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;","}","","/**"," * A data structure to provide a sorted view of accumulated mappings in a"," * performance conscious manner. It trades a neglibable overhead in general"," * case for a large speedup in case of mappings being added in order."," */","function MappingList() {","  this._array = [];","  this._sorted = true;","  // Serves as infimum","  this._last = {generatedLine: -1, generatedColumn: 0};","}","","/**"," * Iterate through internal items. This method takes the same arguments that"," * `Array.prototype.forEach` takes."," *"," * NOTE: The order of the mappings is NOT guaranteed."," */","MappingList.prototype.unsortedForEach =","  function MappingList_forEach(aCallback, aThisArg) {","    this._array.forEach(aCallback, aThisArg);","  };","","/**"," * Add the given source mapping."," *"," * @param Object aMapping"," */","MappingList.prototype.add = function MappingList_add(aMapping) {","  if (generatedPositionAfter(this._last, aMapping)) {","    this._last = aMapping;","    this._array.push(aMapping);","  } else {","    this._sorted = false;","    this._array.push(aMapping);","  }","};","","/**"," * Returns the flat, sorted array of mappings. The mappings are sorted by"," * generated position."," *"," * WARNING: This method returns internal data without copying, for"," * performance. The return value must NOT be mutated, and should be treated as"," * an immutable borrow. If you want to take ownership, you must make your own"," * copy."," */","MappingList.prototype.toArray = function MappingList_toArray() {","  if (!this._sorted) {","    this._array.sort(util.compareByGeneratedPositionsInflated);","    this._sorted = true;","  }","  return this._array;","};","","exports.MappingList = MappingList;",""],"l":{"8":1,"14":1,"16":0,"17":0,"18":0,"19":0,"20":0,"29":1,"30":0,"31":0,"33":0,"42":1,"44":0,"52":1,"53":0,"54":0,"55":0,"57":0,"58":0,"71":1,"72":0,"73":0,"74":0,"76":0,"79":1}},"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/source-map-consumer.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/source-map-consumer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":1,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":1,"28":0,"29":1,"30":1,"31":1,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":1,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":1,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":0,"198":1,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":1,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":1,"224":0,"225":0,"226":0,"227":0,"228":1,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":1,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":1,"260":1,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":1,"282":1,"283":1,"284":1,"285":0,"286":0,"287":0,"288":0,"289":0,"290":1,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":1,"302":0,"303":0,"304":1,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":1,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":1,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"fnMap":{"1":{"name":"SourceMapConsumer","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":39}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":34},"end":{"line":25,"column":55}}},"3":{"name":"(anonymous_3)","line":66,"loc":{"start":{"line":66,"column":7},"end":{"line":66,"column":19}}},"4":{"name":"(anonymous_4)","line":77,"loc":{"start":{"line":77,"column":7},"end":{"line":77,"column":19}}},"5":{"name":"SourceMapConsumer_charIsMappingSeparator","line":87,"loc":{"start":{"line":87,"column":2},"end":{"line":87,"column":65}}},"6":{"name":"SourceMapConsumer_parseMappings","line":98,"loc":{"start":{"line":98,"column":2},"end":{"line":98,"column":62}}},"7":{"name":"SourceMapConsumer_eachMapping","line":125,"loc":{"start":{"line":125,"column":2},"end":{"line":125,"column":70}}},"8":{"name":"(anonymous_8)","line":142,"loc":{"start":{"line":142,"column":17},"end":{"line":142,"column":36}}},"9":{"name":"SourceMapConsumer_allGeneratedPositionsFor","line":178,"loc":{"start":{"line":178,"column":2},"end":{"line":178,"column":61}}},"10":{"name":"BasicSourceMapConsumer","line":282,"loc":{"start":{"line":282,"column":0},"end":{"line":282,"column":44}}},"11":{"name":"(anonymous_11)","line":314,"loc":{"start":{"line":314,"column":9},"end":{"line":314,"column":27}}},"12":{"name":"SourceMapConsumer_fromSourceMap","line":344,"loc":{"start":{"line":344,"column":2},"end":{"line":344,"column":55}}},"13":{"name":"(anonymous_13)","line":398,"loc":{"start":{"line":398,"column":7},"end":{"line":398,"column":19}}},"14":{"name":"(anonymous_14)","line":399,"loc":{"start":{"line":399,"column":39},"end":{"line":399,"column":52}}},"15":{"name":"Mapping","line":408,"loc":{"start":{"line":408,"column":0},"end":{"line":408,"column":19}}},"16":{"name":"SourceMapConsumer_parseMappings","line":423,"loc":{"start":{"line":423,"column":2},"end":{"line":423,"column":62}}},"17":{"name":"SourceMapConsumer_findMapping","line":531,"loc":{"start":{"line":531,"column":2},"end":{"line":532,"column":74}}},"18":{"name":"SourceMapConsumer_computeColumnSpans","line":555,"loc":{"start":{"line":555,"column":2},"end":{"line":555,"column":50}}},"19":{"name":"SourceMapConsumer_originalPositionFor","line":598,"loc":{"start":{"line":598,"column":2},"end":{"line":598,"column":56}}},"20":{"name":"BasicSourceMapConsumer_hasContentsOfAllSources","line":650,"loc":{"start":{"line":650,"column":2},"end":{"line":650,"column":60}}},"21":{"name":"(anonymous_21)","line":655,"loc":{"start":{"line":655,"column":32},"end":{"line":655,"column":46}}},"22":{"name":"SourceMapConsumer_sourceContentFor","line":664,"loc":{"start":{"line":664,"column":2},"end":{"line":664,"column":70}}},"23":{"name":"SourceMapConsumer_generatedPositionFor","line":728,"loc":{"start":{"line":728,"column":2},"end":{"line":728,"column":57}}},"24":{"name":"IndexedSourceMapConsumer","line":823,"loc":{"start":{"line":823,"column":0},"end":{"line":823,"column":46}}},"25":{"name":"(anonymous_25)","line":843,"loc":{"start":{"line":843,"column":32},"end":{"line":843,"column":45}}},"26":{"name":"(anonymous_26)","line":883,"loc":{"start":{"line":883,"column":7},"end":{"line":883,"column":19}}},"27":{"name":"IndexedSourceMapConsumer_originalPositionFor","line":910,"loc":{"start":{"line":910,"column":2},"end":{"line":910,"column":63}}},"28":{"name":"(anonymous_28)","line":919,"loc":{"start":{"line":919,"column":6},"end":{"line":919,"column":32}}},"29":{"name":"IndexedSourceMapConsumer_hasContentsOfAllSources","line":955,"loc":{"start":{"line":955,"column":2},"end":{"line":955,"column":62}}},"30":{"name":"(anonymous_30)","line":956,"loc":{"start":{"line":956,"column":32},"end":{"line":956,"column":45}}},"31":{"name":"IndexedSourceMapConsumer_sourceContentFor","line":967,"loc":{"start":{"line":967,"column":2},"end":{"line":967,"column":77}}},"32":{"name":"IndexedSourceMapConsumer_generatedPositionFor","line":999,"loc":{"start":{"line":999,"column":2},"end":{"line":999,"column":64}}},"33":{"name":"IndexedSourceMapConsumer_parseMappings","line":1034,"loc":{"start":{"line":1034,"column":2},"end":{"line":1034,"column":69}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":46}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":50}},"6":{"start":{"line":14,"column":0},"end":{"line":23,"column":1}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":29}},"8":{"start":{"line":16,"column":2},"end":{"line":18,"column":3}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":63}},"10":{"start":{"line":20,"column":2},"end":{"line":22,"column":44}},"11":{"start":{"line":25,"column":0},"end":{"line":27,"column":1}},"12":{"start":{"line":26,"column":2},"end":{"line":26,"column":58}},"13":{"start":{"line":32,"column":0},"end":{"line":32,"column":41}},"14":{"start":{"line":64,"column":0},"end":{"line":64,"column":55}},"15":{"start":{"line":65,"column":0},"end":{"line":73,"column":3}},"16":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"17":{"start":{"line":68,"column":6},"end":{"line":68,"column":59}},"18":{"start":{"line":71,"column":4},"end":{"line":71,"column":36}},"19":{"start":{"line":75,"column":0},"end":{"line":75,"column":54}},"20":{"start":{"line":76,"column":0},"end":{"line":84,"column":3}},"21":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"22":{"start":{"line":79,"column":6},"end":{"line":79,"column":59}},"23":{"start":{"line":82,"column":4},"end":{"line":82,"column":35}},"24":{"start":{"line":86,"column":0},"end":{"line":90,"column":4}},"25":{"start":{"line":88,"column":4},"end":{"line":88,"column":31}},"26":{"start":{"line":89,"column":4},"end":{"line":89,"column":34}},"27":{"start":{"line":97,"column":0},"end":{"line":100,"column":4}},"28":{"start":{"line":99,"column":4},"end":{"line":99,"column":64}},"29":{"start":{"line":102,"column":0},"end":{"line":102,"column":38}},"30":{"start":{"line":103,"column":0},"end":{"line":103,"column":37}},"31":{"start":{"line":105,"column":0},"end":{"line":105,"column":43}},"32":{"start":{"line":106,"column":0},"end":{"line":106,"column":40}},"33":{"start":{"line":124,"column":0},"end":{"line":156,"column":4}},"34":{"start":{"line":126,"column":4},"end":{"line":126,"column":35}},"35":{"start":{"line":127,"column":4},"end":{"line":127,"column":60}},"36":{"start":{"line":129,"column":4},"end":{"line":129,"column":17}},"37":{"start":{"line":130,"column":4},"end":{"line":139,"column":5}},"38":{"start":{"line":132,"column":6},"end":{"line":132,"column":41}},"39":{"start":{"line":133,"column":6},"end":{"line":133,"column":12}},"40":{"start":{"line":135,"column":6},"end":{"line":135,"column":40}},"41":{"start":{"line":136,"column":6},"end":{"line":136,"column":12}},"42":{"start":{"line":138,"column":6},"end":{"line":138,"column":53}},"43":{"start":{"line":141,"column":4},"end":{"line":141,"column":37}},"44":{"start":{"line":142,"column":4},"end":{"line":155,"column":41}},"45":{"start":{"line":143,"column":6},"end":{"line":143,"column":85}},"46":{"start":{"line":144,"column":6},"end":{"line":146,"column":7}},"47":{"start":{"line":145,"column":8},"end":{"line":145,"column":47}},"48":{"start":{"line":147,"column":6},"end":{"line":154,"column":8}},"49":{"start":{"line":177,"column":0},"end":{"line":248,"column":4}},"50":{"start":{"line":179,"column":4},"end":{"line":179,"column":42}},"51":{"start":{"line":185,"column":4},"end":{"line":189,"column":6}},"52":{"start":{"line":191,"column":4},"end":{"line":193,"column":5}},"53":{"start":{"line":192,"column":6},"end":{"line":192,"column":68}},"54":{"start":{"line":194,"column":4},"end":{"line":196,"column":5}},"55":{"start":{"line":195,"column":6},"end":{"line":195,"column":16}},"56":{"start":{"line":197,"column":4},"end":{"line":197,"column":57}},"57":{"start":{"line":199,"column":4},"end":{"line":199,"column":22}},"58":{"start":{"line":201,"column":4},"end":{"line":206,"column":66}},"59":{"start":{"line":207,"column":4},"end":{"line":245,"column":5}},"60":{"start":{"line":208,"column":6},"end":{"line":208,"column":50}},"61":{"start":{"line":210,"column":6},"end":{"line":244,"column":7}},"62":{"start":{"line":211,"column":8},"end":{"line":211,"column":48}},"63":{"start":{"line":217,"column":8},"end":{"line":225,"column":9}},"64":{"start":{"line":218,"column":10},"end":{"line":222,"column":13}},"65":{"start":{"line":224,"column":10},"end":{"line":224,"column":52}},"66":{"start":{"line":227,"column":8},"end":{"line":227,"column":52}},"67":{"start":{"line":233,"column":8},"end":{"line":243,"column":9}},"68":{"start":{"line":236,"column":10},"end":{"line":240,"column":13}},"69":{"start":{"line":242,"column":10},"end":{"line":242,"column":52}},"70":{"start":{"line":247,"column":4},"end":{"line":247,"column":20}},"71":{"start":{"line":250,"column":0},"end":{"line":250,"column":46}},"72":{"start":{"line":282,"column":0},"end":{"line":331,"column":1}},"73":{"start":{"line":283,"column":2},"end":{"line":283,"column":29}},"74":{"start":{"line":284,"column":2},"end":{"line":286,"column":3}},"75":{"start":{"line":285,"column":4},"end":{"line":285,"column":63}},"76":{"start":{"line":288,"column":2},"end":{"line":288,"column":50}},"77":{"start":{"line":289,"column":2},"end":{"line":289,"column":50}},"78":{"start":{"line":292,"column":2},"end":{"line":292,"column":50}},"79":{"start":{"line":293,"column":2},"end":{"line":293,"column":62}},"80":{"start":{"line":294,"column":2},"end":{"line":294,"column":70}},"81":{"start":{"line":295,"column":2},"end":{"line":295,"column":52}},"82":{"start":{"line":296,"column":2},"end":{"line":296,"column":50}},"83":{"start":{"line":300,"column":2},"end":{"line":302,"column":3}},"84":{"start":{"line":301,"column":4},"end":{"line":301,"column":55}},"85":{"start":{"line":304,"column":2},"end":{"line":318,"column":7}},"86":{"start":{"line":315,"column":6},"end":{"line":317,"column":17}},"87":{"start":{"line":324,"column":2},"end":{"line":324,"column":60}},"88":{"start":{"line":325,"column":2},"end":{"line":325,"column":52}},"89":{"start":{"line":327,"column":2},"end":{"line":327,"column":31}},"90":{"start":{"line":328,"column":2},"end":{"line":328,"column":39}},"91":{"start":{"line":329,"column":2},"end":{"line":329,"column":28}},"92":{"start":{"line":330,"column":2},"end":{"line":330,"column":19}},"93":{"start":{"line":333,"column":0},"end":{"line":333,"column":78}},"94":{"start":{"line":334,"column":0},"end":{"line":334,"column":62}},"95":{"start":{"line":343,"column":0},"end":{"line":387,"column":4}},"96":{"start":{"line":345,"column":4},"end":{"line":345,"column":62}},"97":{"start":{"line":347,"column":4},"end":{"line":347,"column":83}},"98":{"start":{"line":348,"column":4},"end":{"line":348,"column":89}},"99":{"start":{"line":349,"column":4},"end":{"line":349,"column":44}},"100":{"start":{"line":350,"column":4},"end":{"line":351,"column":76}},"101":{"start":{"line":352,"column":4},"end":{"line":352,"column":32}},"102":{"start":{"line":359,"column":4},"end":{"line":359,"column":67}},"103":{"start":{"line":360,"column":4},"end":{"line":360,"column":61}},"104":{"start":{"line":361,"column":4},"end":{"line":361,"column":59}},"105":{"start":{"line":363,"column":4},"end":{"line":382,"column":5}},"106":{"start":{"line":364,"column":6},"end":{"line":364,"column":44}},"107":{"start":{"line":365,"column":6},"end":{"line":365,"column":36}},"108":{"start":{"line":366,"column":6},"end":{"line":366,"column":59}},"109":{"start":{"line":367,"column":6},"end":{"line":367,"column":63}},"110":{"start":{"line":369,"column":6},"end":{"line":379,"column":7}},"111":{"start":{"line":370,"column":8},"end":{"line":370,"column":64}},"112":{"start":{"line":371,"column":8},"end":{"line":371,"column":59}},"113":{"start":{"line":372,"column":8},"end":{"line":372,"column":63}},"114":{"start":{"line":374,"column":8},"end":{"line":376,"column":9}},"115":{"start":{"line":375,"column":10},"end":{"line":375,"column":60}},"116":{"start":{"line":378,"column":8},"end":{"line":378,"column":47}},"117":{"start":{"line":381,"column":6},"end":{"line":381,"column":46}},"118":{"start":{"line":384,"column":4},"end":{"line":384,"column":71}},"119":{"start":{"line":386,"column":4},"end":{"line":386,"column":15}},"120":{"start":{"line":392,"column":0},"end":{"line":392,"column":46}},"121":{"start":{"line":397,"column":0},"end":{"line":403,"column":3}},"122":{"start":{"line":399,"column":4},"end":{"line":401,"column":13}},"123":{"start":{"line":400,"column":6},"end":{"line":400,"column":73}},"124":{"start":{"line":408,"column":0},"end":{"line":415,"column":1}},"125":{"start":{"line":409,"column":2},"end":{"line":409,"column":25}},"126":{"start":{"line":410,"column":2},"end":{"line":410,"column":27}},"127":{"start":{"line":411,"column":2},"end":{"line":411,"column":21}},"128":{"start":{"line":412,"column":2},"end":{"line":412,"column":27}},"129":{"start":{"line":413,"column":2},"end":{"line":413,"column":29}},"130":{"start":{"line":414,"column":2},"end":{"line":414,"column":19}},"131":{"start":{"line":422,"column":0},"end":{"line":524,"column":4}},"132":{"start":{"line":424,"column":4},"end":{"line":424,"column":26}},"133":{"start":{"line":425,"column":4},"end":{"line":425,"column":36}},"134":{"start":{"line":426,"column":4},"end":{"line":426,"column":33}},"135":{"start":{"line":427,"column":4},"end":{"line":427,"column":35}},"136":{"start":{"line":428,"column":4},"end":{"line":428,"column":27}},"137":{"start":{"line":429,"column":4},"end":{"line":429,"column":25}},"138":{"start":{"line":430,"column":4},"end":{"line":430,"column":29}},"139":{"start":{"line":431,"column":4},"end":{"line":431,"column":18}},"140":{"start":{"line":432,"column":4},"end":{"line":432,"column":28}},"141":{"start":{"line":433,"column":4},"end":{"line":433,"column":18}},"142":{"start":{"line":434,"column":4},"end":{"line":434,"column":30}},"143":{"start":{"line":435,"column":4},"end":{"line":435,"column":31}},"144":{"start":{"line":436,"column":4},"end":{"line":436,"column":42}},"145":{"start":{"line":438,"column":4},"end":{"line":517,"column":5}},"146":{"start":{"line":439,"column":6},"end":{"line":516,"column":7}},"147":{"start":{"line":440,"column":8},"end":{"line":440,"column":24}},"148":{"start":{"line":441,"column":8},"end":{"line":441,"column":16}},"149":{"start":{"line":442,"column":8},"end":{"line":442,"column":36}},"150":{"start":{"line":444,"column":11},"end":{"line":516,"column":7}},"151":{"start":{"line":445,"column":8},"end":{"line":445,"column":16}},"152":{"start":{"line":448,"column":8},"end":{"line":448,"column":32}},"153":{"start":{"line":449,"column":8},"end":{"line":449,"column":46}},"154":{"start":{"line":456,"column":8},"end":{"line":460,"column":9}},"155":{"start":{"line":457,"column":10},"end":{"line":459,"column":11}},"156":{"start":{"line":458,"column":12},"end":{"line":458,"column":18}},"157":{"start":{"line":461,"column":8},"end":{"line":461,"column":37}},"158":{"start":{"line":463,"column":8},"end":{"line":463,"column":38}},"159":{"start":{"line":464,"column":8},"end":{"line":484,"column":9}},"160":{"start":{"line":465,"column":10},"end":{"line":465,"column":30}},"161":{"start":{"line":467,"column":10},"end":{"line":467,"column":23}},"162":{"start":{"line":468,"column":10},"end":{"line":473,"column":11}},"163":{"start":{"line":469,"column":12},"end":{"line":469,"column":48}},"164":{"start":{"line":470,"column":12},"end":{"line":470,"column":31}},"165":{"start":{"line":471,"column":12},"end":{"line":471,"column":30}},"166":{"start":{"line":472,"column":12},"end":{"line":472,"column":32}},"167":{"start":{"line":475,"column":10},"end":{"line":477,"column":11}},"168":{"start":{"line":476,"column":12},"end":{"line":476,"column":70}},"169":{"start":{"line":479,"column":10},"end":{"line":481,"column":11}},"170":{"start":{"line":480,"column":12},"end":{"line":480,"column":70}},"171":{"start":{"line":483,"column":10},"end":{"line":483,"column":40}},"172":{"start":{"line":487,"column":8},"end":{"line":487,"column":71}},"173":{"start":{"line":488,"column":8},"end":{"line":488,"column":58}},"174":{"start":{"line":490,"column":8},"end":{"line":510,"column":9}},"175":{"start":{"line":492,"column":10},"end":{"line":492,"column":55}},"176":{"start":{"line":493,"column":10},"end":{"line":493,"column":39}},"177":{"start":{"line":496,"column":10},"end":{"line":496,"column":67}},"178":{"start":{"line":497,"column":10},"end":{"line":497,"column":54}},"179":{"start":{"line":499,"column":10},"end":{"line":499,"column":36}},"180":{"start":{"line":502,"column":10},"end":{"line":502,"column":71}},"181":{"start":{"line":503,"column":10},"end":{"line":503,"column":58}},"182":{"start":{"line":505,"column":10},"end":{"line":509,"column":11}},"183":{"start":{"line":507,"column":12},"end":{"line":507,"column":53}},"184":{"start":{"line":508,"column":12},"end":{"line":508,"column":39}},"185":{"start":{"line":512,"column":8},"end":{"line":512,"column":40}},"186":{"start":{"line":513,"column":8},"end":{"line":515,"column":9}},"187":{"start":{"line":514,"column":10},"end":{"line":514,"column":41}},"188":{"start":{"line":519,"column":4},"end":{"line":519,"column":75}},"189":{"start":{"line":520,"column":4},"end":{"line":520,"column":49}},"190":{"start":{"line":522,"column":4},"end":{"line":522,"column":65}},"191":{"start":{"line":523,"column":4},"end":{"line":523,"column":47}},"192":{"start":{"line":530,"column":0},"end":{"line":548,"column":4}},"193":{"start":{"line":538,"column":4},"end":{"line":541,"column":5}},"194":{"start":{"line":539,"column":6},"end":{"line":540,"column":48}},"195":{"start":{"line":542,"column":4},"end":{"line":545,"column":5}},"196":{"start":{"line":543,"column":6},"end":{"line":544,"column":50}},"197":{"start":{"line":547,"column":4},"end":{"line":547,"column":71}},"198":{"start":{"line":554,"column":0},"end":{"line":575,"column":4}},"199":{"start":{"line":556,"column":4},"end":{"line":574,"column":5}},"200":{"start":{"line":557,"column":6},"end":{"line":557,"column":51}},"201":{"start":{"line":563,"column":6},"end":{"line":570,"column":7}},"202":{"start":{"line":564,"column":8},"end":{"line":564,"column":61}},"203":{"start":{"line":566,"column":8},"end":{"line":569,"column":9}},"204":{"start":{"line":567,"column":10},"end":{"line":567,"column":72}},"205":{"start":{"line":568,"column":10},"end":{"line":568,"column":19}},"206":{"start":{"line":573,"column":6},"end":{"line":573,"column":45}},"207":{"start":{"line":597,"column":0},"end":{"line":643,"column":4}},"208":{"start":{"line":599,"column":4},"end":{"line":602,"column":6}},"209":{"start":{"line":604,"column":4},"end":{"line":611,"column":6}},"210":{"start":{"line":613,"column":4},"end":{"line":635,"column":5}},"211":{"start":{"line":614,"column":6},"end":{"line":614,"column":51}},"212":{"start":{"line":616,"column":6},"end":{"line":634,"column":7}},"213":{"start":{"line":617,"column":8},"end":{"line":617,"column":58}},"214":{"start":{"line":618,"column":8},"end":{"line":623,"column":9}},"215":{"start":{"line":619,"column":10},"end":{"line":619,"column":44}},"216":{"start":{"line":620,"column":10},"end":{"line":622,"column":11}},"217":{"start":{"line":621,"column":12},"end":{"line":621,"column":56}},"218":{"start":{"line":624,"column":8},"end":{"line":624,"column":54}},"219":{"start":{"line":625,"column":8},"end":{"line":627,"column":9}},"220":{"start":{"line":626,"column":10},"end":{"line":626,"column":38}},"221":{"start":{"line":628,"column":8},"end":{"line":633,"column":10}},"222":{"start":{"line":637,"column":4},"end":{"line":642,"column":6}},"223":{"start":{"line":649,"column":0},"end":{"line":656,"column":4}},"224":{"start":{"line":651,"column":4},"end":{"line":653,"column":5}},"225":{"start":{"line":652,"column":6},"end":{"line":652,"column":19}},"226":{"start":{"line":654,"column":4},"end":{"line":655,"column":70}},"227":{"start":{"line":655,"column":48},"end":{"line":655,"column":66}},"228":{"start":{"line":663,"column":0},"end":{"line":706,"column":4}},"229":{"start":{"line":665,"column":4},"end":{"line":667,"column":5}},"230":{"start":{"line":666,"column":6},"end":{"line":666,"column":18}},"231":{"start":{"line":669,"column":4},"end":{"line":671,"column":5}},"232":{"start":{"line":670,"column":6},"end":{"line":670,"column":56}},"233":{"start":{"line":673,"column":4},"end":{"line":675,"column":5}},"234":{"start":{"line":674,"column":6},"end":{"line":674,"column":65}},"235":{"start":{"line":677,"column":4},"end":{"line":677,"column":12}},"236":{"start":{"line":678,"column":4},"end":{"line":694,"column":5}},"237":{"start":{"line":684,"column":6},"end":{"line":684,"column":61}},"238":{"start":{"line":685,"column":6},"end":{"line":688,"column":7}},"239":{"start":{"line":687,"column":8},"end":{"line":687,"column":73}},"240":{"start":{"line":690,"column":6},"end":{"line":693,"column":7}},"241":{"start":{"line":692,"column":8},"end":{"line":692,"column":73}},"242":{"start":{"line":700,"column":4},"end":{"line":705,"column":5}},"243":{"start":{"line":701,"column":6},"end":{"line":701,"column":18}},"244":{"start":{"line":704,"column":6},"end":{"line":704,"column":68}},"245":{"start":{"line":727,"column":0},"end":{"line":774,"column":4}},"246":{"start":{"line":729,"column":4},"end":{"line":729,"column":46}},"247":{"start":{"line":730,"column":4},"end":{"line":732,"column":5}},"248":{"start":{"line":731,"column":6},"end":{"line":731,"column":54}},"249":{"start":{"line":733,"column":4},"end":{"line":739,"column":5}},"250":{"start":{"line":734,"column":6},"end":{"line":738,"column":8}},"251":{"start":{"line":740,"column":4},"end":{"line":740,"column":43}},"252":{"start":{"line":742,"column":4},"end":{"line":746,"column":6}},"253":{"start":{"line":748,"column":4},"end":{"line":755,"column":6}},"254":{"start":{"line":757,"column":4},"end":{"line":767,"column":5}},"255":{"start":{"line":758,"column":6},"end":{"line":758,"column":50}},"256":{"start":{"line":760,"column":6},"end":{"line":766,"column":7}},"257":{"start":{"line":761,"column":8},"end":{"line":765,"column":10}},"258":{"start":{"line":769,"column":4},"end":{"line":773,"column":6}},"259":{"start":{"line":776,"column":0},"end":{"line":776,"column":56}},"260":{"start":{"line":823,"column":0},"end":{"line":869,"column":1}},"261":{"start":{"line":824,"column":2},"end":{"line":824,"column":29}},"262":{"start":{"line":825,"column":2},"end":{"line":827,"column":3}},"263":{"start":{"line":826,"column":4},"end":{"line":826,"column":63}},"264":{"start":{"line":829,"column":2},"end":{"line":829,"column":50}},"265":{"start":{"line":830,"column":2},"end":{"line":830,"column":52}},"266":{"start":{"line":832,"column":2},"end":{"line":834,"column":3}},"267":{"start":{"line":833,"column":4},"end":{"line":833,"column":55}},"268":{"start":{"line":836,"column":2},"end":{"line":836,"column":33}},"269":{"start":{"line":837,"column":2},"end":{"line":837,"column":31}},"270":{"start":{"line":839,"column":2},"end":{"line":842,"column":4}},"271":{"start":{"line":843,"column":2},"end":{"line":868,"column":5}},"272":{"start":{"line":844,"column":4},"end":{"line":848,"column":5}},"273":{"start":{"line":847,"column":6},"end":{"line":847,"column":76}},"274":{"start":{"line":849,"column":4},"end":{"line":849,"column":42}},"275":{"start":{"line":850,"column":4},"end":{"line":850,"column":49}},"276":{"start":{"line":851,"column":4},"end":{"line":851,"column":53}},"277":{"start":{"line":853,"column":4},"end":{"line":856,"column":5}},"278":{"start":{"line":855,"column":6},"end":{"line":855,"column":78}},"279":{"start":{"line":857,"column":4},"end":{"line":857,"column":24}},"280":{"start":{"line":859,"column":4},"end":{"line":867,"column":5}},"281":{"start":{"line":871,"column":0},"end":{"line":871,"column":80}},"282":{"start":{"line":872,"column":0},"end":{"line":872,"column":67}},"283":{"start":{"line":877,"column":0},"end":{"line":877,"column":48}},"284":{"start":{"line":882,"column":0},"end":{"line":892,"column":3}},"285":{"start":{"line":884,"column":4},"end":{"line":884,"column":21}},"286":{"start":{"line":885,"column":4},"end":{"line":889,"column":5}},"287":{"start":{"line":886,"column":6},"end":{"line":888,"column":7}},"288":{"start":{"line":887,"column":8},"end":{"line":887,"column":60}},"289":{"start":{"line":890,"column":4},"end":{"line":890,"column":19}},"290":{"start":{"line":909,"column":0},"end":{"line":948,"column":4}},"291":{"start":{"line":911,"column":4},"end":{"line":914,"column":6}},"292":{"start":{"line":918,"column":4},"end":{"line":927,"column":9}},"293":{"start":{"line":920,"column":8},"end":{"line":920,"column":79}},"294":{"start":{"line":921,"column":8},"end":{"line":923,"column":9}},"295":{"start":{"line":922,"column":10},"end":{"line":922,"column":21}},"296":{"start":{"line":925,"column":8},"end":{"line":926,"column":57}},"297":{"start":{"line":928,"column":4},"end":{"line":928,"column":47}},"298":{"start":{"line":930,"column":4},"end":{"line":937,"column":5}},"299":{"start":{"line":931,"column":6},"end":{"line":936,"column":8}},"300":{"start":{"line":939,"column":4},"end":{"line":947,"column":7}},"301":{"start":{"line":954,"column":0},"end":{"line":959,"column":4}},"302":{"start":{"line":956,"column":4},"end":{"line":958,"column":7}},"303":{"start":{"line":957,"column":6},"end":{"line":957,"column":50}},"304":{"start":{"line":966,"column":0},"end":{"line":982,"column":4}},"305":{"start":{"line":968,"column":4},"end":{"line":975,"column":5}},"306":{"start":{"line":969,"column":6},"end":{"line":969,"column":38}},"307":{"start":{"line":971,"column":6},"end":{"line":971,"column":69}},"308":{"start":{"line":972,"column":6},"end":{"line":974,"column":7}},"309":{"start":{"line":973,"column":8},"end":{"line":973,"column":23}},"310":{"start":{"line":976,"column":4},"end":{"line":981,"column":5}},"311":{"start":{"line":977,"column":6},"end":{"line":977,"column":18}},"312":{"start":{"line":980,"column":6},"end":{"line":980,"column":68}},"313":{"start":{"line":998,"column":0},"end":{"line":1026,"column":4}},"314":{"start":{"line":1000,"column":4},"end":{"line":1020,"column":5}},"315":{"start":{"line":1001,"column":6},"end":{"line":1001,"column":38}},"316":{"start":{"line":1005,"column":6},"end":{"line":1007,"column":7}},"317":{"start":{"line":1006,"column":8},"end":{"line":1006,"column":17}},"318":{"start":{"line":1008,"column":6},"end":{"line":1008,"column":75}},"319":{"start":{"line":1009,"column":6},"end":{"line":1019,"column":7}},"320":{"start":{"line":1010,"column":8},"end":{"line":1017,"column":10}},"321":{"start":{"line":1018,"column":8},"end":{"line":1018,"column":19}},"322":{"start":{"line":1022,"column":4},"end":{"line":1025,"column":6}},"323":{"start":{"line":1033,"column":0},"end":{"line":1080,"column":4}},"324":{"start":{"line":1035,"column":4},"end":{"line":1035,"column":34}},"325":{"start":{"line":1036,"column":4},"end":{"line":1036,"column":33}},"326":{"start":{"line":1037,"column":4},"end":{"line":1076,"column":5}},"327":{"start":{"line":1038,"column":6},"end":{"line":1038,"column":38}},"328":{"start":{"line":1039,"column":6},"end":{"line":1039,"column":64}},"329":{"start":{"line":1040,"column":6},"end":{"line":1075,"column":7}},"330":{"start":{"line":1041,"column":8},"end":{"line":1041,"column":41}},"331":{"start":{"line":1043,"column":8},"end":{"line":1043,"column":66}},"332":{"start":{"line":1044,"column":8},"end":{"line":1046,"column":9}},"333":{"start":{"line":1045,"column":10},"end":{"line":1045,"column":66}},"334":{"start":{"line":1047,"column":8},"end":{"line":1047,"column":34}},"335":{"start":{"line":1048,"column":8},"end":{"line":1048,"column":47}},"336":{"start":{"line":1050,"column":8},"end":{"line":1050,"column":60}},"337":{"start":{"line":1051,"column":8},"end":{"line":1051,"column":30}},"338":{"start":{"line":1052,"column":8},"end":{"line":1052,"column":41}},"339":{"start":{"line":1058,"column":8},"end":{"line":1069,"column":10}},"340":{"start":{"line":1071,"column":8},"end":{"line":1071,"column":55}},"341":{"start":{"line":1072,"column":8},"end":{"line":1074,"column":9}},"342":{"start":{"line":1073,"column":10},"end":{"line":1073,"column":56}},"343":{"start":{"line":1078,"column":4},"end":{"line":1078,"column":82}},"344":{"start":{"line":1079,"column":4},"end":{"line":1079,"column":72}},"345":{"start":{"line":1082,"column":0},"end":{"line":1082,"column":60}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":2}},{"start":{"line":16,"column":2},"end":{"line":16,"column":2}}]},"2":{"line":20,"type":"cond-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":45}},{"start":{"line":22,"column":6},"end":{"line":22,"column":43}}]},"3":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"4":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"5":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":11},"end":{"line":89,"column":20}},{"start":{"line":89,"column":24},"end":{"line":89,"column":33}}]},"6":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":18},"end":{"line":126,"column":26}},{"start":{"line":126,"column":30},"end":{"line":126,"column":34}}]},"7":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":16},"end":{"line":127,"column":22}},{"start":{"line":127,"column":26},"end":{"line":127,"column":59}}]},"8":{"line":130,"type":"switch","locations":[{"start":{"line":131,"column":4},"end":{"line":133,"column":12}},{"start":{"line":134,"column":4},"end":{"line":136,"column":12}},{"start":{"line":137,"column":4},"end":{"line":138,"column":53}}]},"9":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":45},"end":{"line":143,"column":49}},{"start":{"line":143,"column":52},"end":{"line":143,"column":84}}]},"10":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":6},"end":{"line":144,"column":6}},{"start":{"line":144,"column":6},"end":{"line":144,"column":6}}]},"11":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":10},"end":{"line":144,"column":24}},{"start":{"line":144,"column":28},"end":{"line":144,"column":46}}]},"12":{"line":153,"type":"cond-expr","locations":[{"start":{"line":153,"column":38},"end":{"line":153,"column":42}},{"start":{"line":153,"column":45},"end":{"line":153,"column":73}}]},"13":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":191,"column":4}},{"start":{"line":191,"column":4},"end":{"line":191,"column":4}}]},"14":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":194,"column":4}},{"start":{"line":194,"column":4},"end":{"line":194,"column":4}}]},"15":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"16":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":6},"end":{"line":210,"column":6}},{"start":{"line":210,"column":6},"end":{"line":210,"column":6}}]},"17":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":15},"end":{"line":217,"column":22}},{"start":{"line":217,"column":26},"end":{"line":217,"column":63}}]},"18":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":15},"end":{"line":233,"column":22}},{"start":{"line":234,"column":15},"end":{"line":234,"column":44}},{"start":{"line":235,"column":15},"end":{"line":235,"column":55}}]},"19":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":2},"end":{"line":284,"column":2}},{"start":{"line":284,"column":2},"end":{"line":284,"column":2}}]},"20":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":2},"end":{"line":300,"column":2}},{"start":{"line":300,"column":2},"end":{"line":300,"column":2}}]},"21":{"line":315,"type":"cond-expr","locations":[{"start":{"line":316,"column":10},"end":{"line":316,"column":43}},{"start":{"line":317,"column":10},"end":{"line":317,"column":16}}]},"22":{"line":315,"type":"binary-expr","locations":[{"start":{"line":315,"column":13},"end":{"line":315,"column":23}},{"start":{"line":315,"column":27},"end":{"line":315,"column":54}},{"start":{"line":315,"column":58},"end":{"line":315,"column":81}}]},"23":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":6},"end":{"line":369,"column":6}},{"start":{"line":369,"column":6},"end":{"line":369,"column":6}}]},"24":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":8},"end":{"line":374,"column":8}},{"start":{"line":374,"column":8},"end":{"line":374,"column":8}}]},"25":{"line":400,"type":"cond-expr","locations":[{"start":{"line":400,"column":39},"end":{"line":400,"column":68}},{"start":{"line":400,"column":71},"end":{"line":400,"column":72}}]},"26":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":6},"end":{"line":439,"column":6}},{"start":{"line":439,"column":6},"end":{"line":439,"column":6}}]},"27":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":11},"end":{"line":444,"column":11}},{"start":{"line":444,"column":11},"end":{"line":444,"column":11}}]},"28":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":10},"end":{"line":457,"column":10}},{"start":{"line":457,"column":10},"end":{"line":457,"column":10}}]},"29":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":8},"end":{"line":464,"column":8}},{"start":{"line":464,"column":8},"end":{"line":464,"column":8}}]},"30":{"line":475,"type":"if","locations":[{"start":{"line":475,"column":10},"end":{"line":475,"column":10}},{"start":{"line":475,"column":10},"end":{"line":475,"column":10}}]},"31":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":10},"end":{"line":479,"column":10}},{"start":{"line":479,"column":10},"end":{"line":479,"column":10}}]},"32":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":8},"end":{"line":490,"column":8}},{"start":{"line":490,"column":8},"end":{"line":490,"column":8}}]},"33":{"line":505,"type":"if","locations":[{"start":{"line":505,"column":10},"end":{"line":505,"column":10}},{"start":{"line":505,"column":10},"end":{"line":505,"column":10}}]},"34":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":8},"end":{"line":513,"column":8}},{"start":{"line":513,"column":8},"end":{"line":513,"column":8}}]},"35":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":4},"end":{"line":538,"column":4}},{"start":{"line":538,"column":4},"end":{"line":538,"column":4}}]},"36":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":4},"end":{"line":542,"column":4}},{"start":{"line":542,"column":4},"end":{"line":542,"column":4}}]},"37":{"line":563,"type":"if","locations":[{"start":{"line":563,"column":6},"end":{"line":563,"column":6}},{"start":{"line":563,"column":6},"end":{"line":563,"column":6}}]},"38":{"line":566,"type":"if","locations":[{"start":{"line":566,"column":8},"end":{"line":566,"column":8}},{"start":{"line":566,"column":8},"end":{"line":566,"column":8}}]},"39":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":4},"end":{"line":613,"column":4}},{"start":{"line":613,"column":4},"end":{"line":613,"column":4}}]},"40":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":6},"end":{"line":616,"column":6}},{"start":{"line":616,"column":6},"end":{"line":616,"column":6}}]},"41":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":8},"end":{"line":618,"column":8}},{"start":{"line":618,"column":8},"end":{"line":618,"column":8}}]},"42":{"line":620,"type":"if","locations":[{"start":{"line":620,"column":10},"end":{"line":620,"column":10}},{"start":{"line":620,"column":10},"end":{"line":620,"column":10}}]},"43":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":8},"end":{"line":625,"column":8}},{"start":{"line":625,"column":8},"end":{"line":625,"column":8}}]},"44":{"line":651,"type":"if","locations":[{"start":{"line":651,"column":4},"end":{"line":651,"column":4}},{"start":{"line":651,"column":4},"end":{"line":651,"column":4}}]},"45":{"line":654,"type":"binary-expr","locations":[{"start":{"line":654,"column":11},"end":{"line":654,"column":61}},{"start":{"line":655,"column":6},"end":{"line":655,"column":69}}]},"46":{"line":665,"type":"if","locations":[{"start":{"line":665,"column":4},"end":{"line":665,"column":4}},{"start":{"line":665,"column":4},"end":{"line":665,"column":4}}]},"47":{"line":669,"type":"if","locations":[{"start":{"line":669,"column":4},"end":{"line":669,"column":4}},{"start":{"line":669,"column":4},"end":{"line":669,"column":4}}]},"48":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":4},"end":{"line":673,"column":4}},{"start":{"line":673,"column":4},"end":{"line":673,"column":4}}]},"49":{"line":678,"type":"if","locations":[{"start":{"line":678,"column":4},"end":{"line":678,"column":4}},{"start":{"line":678,"column":4},"end":{"line":678,"column":4}}]},"50":{"line":678,"type":"binary-expr","locations":[{"start":{"line":678,"column":8},"end":{"line":678,"column":31}},{"start":{"line":679,"column":12},"end":{"line":679,"column":48}}]},"51":{"line":685,"type":"if","locations":[{"start":{"line":685,"column":6},"end":{"line":685,"column":6}},{"start":{"line":685,"column":6},"end":{"line":685,"column":6}}]},"52":{"line":685,"type":"binary-expr","locations":[{"start":{"line":685,"column":10},"end":{"line":685,"column":30}},{"start":{"line":686,"column":13},"end":{"line":686,"column":46}}]},"53":{"line":690,"type":"if","locations":[{"start":{"line":690,"column":6},"end":{"line":690,"column":6}},{"start":{"line":690,"column":6},"end":{"line":690,"column":6}}]},"54":{"line":690,"type":"binary-expr","locations":[{"start":{"line":690,"column":11},"end":{"line":690,"column":20}},{"start":{"line":690,"column":24},"end":{"line":690,"column":39}},{"start":{"line":691,"column":13},"end":{"line":691,"column":45}}]},"55":{"line":700,"type":"if","locations":[{"start":{"line":700,"column":4},"end":{"line":700,"column":4}},{"start":{"line":700,"column":4},"end":{"line":700,"column":4}}]},"56":{"line":730,"type":"if","locations":[{"start":{"line":730,"column":4},"end":{"line":730,"column":4}},{"start":{"line":730,"column":4},"end":{"line":730,"column":4}}]},"57":{"line":733,"type":"if","locations":[{"start":{"line":733,"column":4},"end":{"line":733,"column":4}},{"start":{"line":733,"column":4},"end":{"line":733,"column":4}}]},"58":{"line":757,"type":"if","locations":[{"start":{"line":757,"column":4},"end":{"line":757,"column":4}},{"start":{"line":757,"column":4},"end":{"line":757,"column":4}}]},"59":{"line":760,"type":"if","locations":[{"start":{"line":760,"column":6},"end":{"line":760,"column":6}},{"start":{"line":760,"column":6},"end":{"line":760,"column":6}}]},"60":{"line":825,"type":"if","locations":[{"start":{"line":825,"column":2},"end":{"line":825,"column":2}},{"start":{"line":825,"column":2},"end":{"line":825,"column":2}}]},"61":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":2},"end":{"line":832,"column":2}},{"start":{"line":832,"column":2},"end":{"line":832,"column":2}}]},"62":{"line":844,"type":"if","locations":[{"start":{"line":844,"column":4},"end":{"line":844,"column":4}},{"start":{"line":844,"column":4},"end":{"line":844,"column":4}}]},"63":{"line":853,"type":"if","locations":[{"start":{"line":853,"column":4},"end":{"line":853,"column":4}},{"start":{"line":853,"column":4},"end":{"line":853,"column":4}}]},"64":{"line":853,"type":"binary-expr","locations":[{"start":{"line":853,"column":8},"end":{"line":853,"column":36}},{"start":{"line":854,"column":9},"end":{"line":854,"column":39}},{"start":{"line":854,"column":43},"end":{"line":854,"column":75}}]},"65":{"line":921,"type":"if","locations":[{"start":{"line":921,"column":8},"end":{"line":921,"column":8}},{"start":{"line":921,"column":8},"end":{"line":921,"column":8}}]},"66":{"line":930,"type":"if","locations":[{"start":{"line":930,"column":4},"end":{"line":930,"column":4}},{"start":{"line":930,"column":4},"end":{"line":930,"column":4}}]},"67":{"line":943,"type":"cond-expr","locations":[{"start":{"line":944,"column":11},"end":{"line":944,"column":54}},{"start":{"line":945,"column":11},"end":{"line":945,"column":12}}]},"68":{"line":972,"type":"if","locations":[{"start":{"line":972,"column":6},"end":{"line":972,"column":6}},{"start":{"line":972,"column":6},"end":{"line":972,"column":6}}]},"69":{"line":976,"type":"if","locations":[{"start":{"line":976,"column":4},"end":{"line":976,"column":4}},{"start":{"line":976,"column":4},"end":{"line":976,"column":4}}]},"70":{"line":1005,"type":"if","locations":[{"start":{"line":1005,"column":6},"end":{"line":1005,"column":6}},{"start":{"line":1005,"column":6},"end":{"line":1005,"column":6}}]},"71":{"line":1009,"type":"if","locations":[{"start":{"line":1009,"column":6},"end":{"line":1009,"column":6}},{"start":{"line":1009,"column":6},"end":{"line":1009,"column":6}}]},"72":{"line":1014,"type":"cond-expr","locations":[{"start":{"line":1015,"column":15},"end":{"line":1015,"column":58}},{"start":{"line":1016,"column":15},"end":{"line":1016,"column":16}}]},"73":{"line":1044,"type":"if","locations":[{"start":{"line":1044,"column":8},"end":{"line":1044,"column":8}},{"start":{"line":1044,"column":8},"end":{"line":1044,"column":8}}]},"74":{"line":1063,"type":"cond-expr","locations":[{"start":{"line":1064,"column":14},"end":{"line":1064,"column":57}},{"start":{"line":1065,"column":14},"end":{"line":1065,"column":15}}]},"75":{"line":1072,"type":"if","locations":[{"start":{"line":1072,"column":8},"end":{"line":1072,"column":8}},{"start":{"line":1072,"column":8},"end":{"line":1072,"column":8}}]}},"code":["/* -*- Mode: js; js-indent-level: 2; -*- */","/*"," * Copyright 2011 Mozilla Foundation and contributors"," * Licensed under the New BSD license. See LICENSE or:"," * http://opensource.org/licenses/BSD-3-Clause"," */","","var util = require('./util');","var binarySearch = require('./binary-search');","var ArraySet = require('./array-set').ArraySet;","var base64VLQ = require('./base64-vlq');","var quickSort = require('./quick-sort').quickSort;","","function SourceMapConsumer(aSourceMap) {","  var sourceMap = aSourceMap;","  if (typeof aSourceMap === 'string') {","    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));","  }","","  return sourceMap.sections != null","    ? new IndexedSourceMapConsumer(sourceMap)","    : new BasicSourceMapConsumer(sourceMap);","}","","SourceMapConsumer.fromSourceMap = function(aSourceMap) {","  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);","}","","/**"," * The version of the source mapping spec that we are consuming."," */","SourceMapConsumer.prototype._version = 3;","","// `__generatedMappings` and `__originalMappings` are arrays that hold the","// parsed mapping coordinates from the source map's \"mappings\" attribute. They","// are lazily instantiated, accessed via the `_generatedMappings` and","// `_originalMappings` getters respectively, and we only parse the mappings","// and create these arrays once queried for a source location. We jump through","// these hoops because there can be many thousands of mappings, and parsing","// them is expensive, so we only want to do it if we must.","//","// Each object in the arrays is of the form:","//","//     {","//       generatedLine: The line number in the generated code,","//       generatedColumn: The column number in the generated code,","//       source: The path to the original source file that generated this","//               chunk of code,","//       originalLine: The line number in the original source that","//                     corresponds to this chunk of generated code,","//       originalColumn: The column number in the original source that","//                       corresponds to this chunk of generated code,","//       name: The name of the original symbol which generated this chunk of","//             code.","//     }","//","// All properties except for `generatedLine` and `generatedColumn` can be","// `null`.","//","// `_generatedMappings` is ordered by the generated positions.","//","// `_originalMappings` is ordered by the original positions.","","SourceMapConsumer.prototype.__generatedMappings = null;","Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {","  get: function () {","    if (!this.__generatedMappings) {","      this._parseMappings(this._mappings, this.sourceRoot);","    }","","    return this.__generatedMappings;","  }","});","","SourceMapConsumer.prototype.__originalMappings = null;","Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {","  get: function () {","    if (!this.__originalMappings) {","      this._parseMappings(this._mappings, this.sourceRoot);","    }","","    return this.__originalMappings;","  }","});","","SourceMapConsumer.prototype._charIsMappingSeparator =","  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {","    var c = aStr.charAt(index);","    return c === \";\" || c === \",\";","  };","","/**"," * Parse the mappings in a string in to a data structure which we can easily"," * query (the ordered arrays in the `this.__generatedMappings` and"," * `this.__originalMappings` properties)."," */","SourceMapConsumer.prototype._parseMappings =","  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {","    throw new Error(\"Subclasses must implement _parseMappings\");","  };","","SourceMapConsumer.GENERATED_ORDER = 1;","SourceMapConsumer.ORIGINAL_ORDER = 2;","","SourceMapConsumer.GREATEST_LOWER_BOUND = 1;","SourceMapConsumer.LEAST_UPPER_BOUND = 2;","","/**"," * Iterate over each mapping between an original source/line/column and a"," * generated line/column in this source map."," *"," * @param Function aCallback"," *        The function that is called with each mapping."," * @param Object aContext"," *        Optional. If specified, this object will be the value of `this` every"," *        time that `aCallback` is called."," * @param aOrder"," *        Either `SourceMapConsumer.GENERATED_ORDER` or"," *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to"," *        iterate over the mappings sorted by the generated file's line/column"," *        order or the original's source/line/column order, respectively. Defaults to"," *        `SourceMapConsumer.GENERATED_ORDER`."," */","SourceMapConsumer.prototype.eachMapping =","  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {","    var context = aContext || null;","    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;","","    var mappings;","    switch (order) {","    case SourceMapConsumer.GENERATED_ORDER:","      mappings = this._generatedMappings;","      break;","    case SourceMapConsumer.ORIGINAL_ORDER:","      mappings = this._originalMappings;","      break;","    default:","      throw new Error(\"Unknown order of iteration.\");","    }","","    var sourceRoot = this.sourceRoot;","    mappings.map(function (mapping) {","      var source = mapping.source === null ? null : this._sources.at(mapping.source);","      if (source != null && sourceRoot != null) {","        source = util.join(sourceRoot, source);","      }","      return {","        source: source,","        generatedLine: mapping.generatedLine,","        generatedColumn: mapping.generatedColumn,","        originalLine: mapping.originalLine,","        originalColumn: mapping.originalColumn,","        name: mapping.name === null ? null : this._names.at(mapping.name)","      };","    }, this).forEach(aCallback, context);","  };","","/**"," * Returns all generated line and column information for the original source,"," * line, and column provided. If no column is provided, returns all mappings"," * corresponding to a either the line we are searching for or the next"," * closest line that has any mappings. Otherwise, returns all mappings"," * corresponding to the given line and either the column we are searching for"," * or the next closest column that has any offsets."," *"," * The only argument is an object with the following properties:"," *"," *   - source: The filename of the original source."," *   - line: The line number in the original source."," *   - column: Optional. the column number in the original source."," *"," * and an array of objects is returned, each with the following properties:"," *"," *   - line: The line number in the generated source, or null."," *   - column: The column number in the generated source, or null."," */","SourceMapConsumer.prototype.allGeneratedPositionsFor =","  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {","    var line = util.getArg(aArgs, 'line');","","    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping","    // returns the index of the closest mapping less than the needle. By","    // setting needle.originalColumn to 0, we thus find the last mapping for","    // the given line, provided such a mapping exists.","    var needle = {","      source: util.getArg(aArgs, 'source'),","      originalLine: line,","      originalColumn: util.getArg(aArgs, 'column', 0)","    };","","    if (this.sourceRoot != null) {","      needle.source = util.relative(this.sourceRoot, needle.source);","    }","    if (!this._sources.has(needle.source)) {","      return [];","    }","    needle.source = this._sources.indexOf(needle.source);","","    var mappings = [];","","    var index = this._findMapping(needle,","                                  this._originalMappings,","                                  \"originalLine\",","                                  \"originalColumn\",","                                  util.compareByOriginalPositions,","                                  binarySearch.LEAST_UPPER_BOUND);","    if (index >= 0) {","      var mapping = this._originalMappings[index];","","      if (aArgs.column === undefined) {","        var originalLine = mapping.originalLine;","","        // Iterate until either we run out of mappings, or we run into","        // a mapping for a different line than the one we found. Since","        // mappings are sorted, this is guaranteed to find all mappings for","        // the line we found.","        while (mapping && mapping.originalLine === originalLine) {","          mappings.push({","            line: util.getArg(mapping, 'generatedLine', null),","            column: util.getArg(mapping, 'generatedColumn', null),","            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)","          });","","          mapping = this._originalMappings[++index];","        }","      } else {","        var originalColumn = mapping.originalColumn;","","        // Iterate until either we run out of mappings, or we run into","        // a mapping for a different line than the one we were searching for.","        // Since mappings are sorted, this is guaranteed to find all mappings for","        // the line we are searching for.","        while (mapping &&","               mapping.originalLine === line &&","               mapping.originalColumn == originalColumn) {","          mappings.push({","            line: util.getArg(mapping, 'generatedLine', null),","            column: util.getArg(mapping, 'generatedColumn', null),","            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)","          });","","          mapping = this._originalMappings[++index];","        }","      }","    }","","    return mappings;","  };","","exports.SourceMapConsumer = SourceMapConsumer;","","/**"," * A BasicSourceMapConsumer instance represents a parsed source map which we can"," * query for information about the original file positions by giving it a file"," * position in the generated source."," *"," * The only parameter is the raw source map (either as a JSON string, or"," * already parsed to an object). According to the spec, source maps have the"," * following attributes:"," *"," *   - version: Which version of the source map spec this map is following."," *   - sources: An array of URLs to the original source files."," *   - names: An array of identifiers which can be referrenced by individual mappings."," *   - sourceRoot: Optional. The URL root from which all sources are relative."," *   - sourcesContent: Optional. An array of contents of the original source files."," *   - mappings: A string of base64 VLQs which contain the actual mappings."," *   - file: Optional. The generated file this source map is associated with."," *"," * Here is an example source map, taken from the source map spec[0]:"," *"," *     {"," *       version : 3,"," *       file: \"out.js\","," *       sourceRoot : \"\","," *       sources: [\"foo.js\", \"bar.js\"],"," *       names: [\"src\", \"maps\", \"are\", \"fun\"],"," *       mappings: \"AA,AB;;ABCDE;\""," *     }"," *"," * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#"," */","function BasicSourceMapConsumer(aSourceMap) {","  var sourceMap = aSourceMap;","  if (typeof aSourceMap === 'string') {","    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));","  }","","  var version = util.getArg(sourceMap, 'version');","  var sources = util.getArg(sourceMap, 'sources');","  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which","  // requires the array) to play nice here.","  var names = util.getArg(sourceMap, 'names', []);","  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);","  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);","  var mappings = util.getArg(sourceMap, 'mappings');","  var file = util.getArg(sourceMap, 'file', null);","","  // Once again, Sass deviates from the spec and supplies the version as a","  // string rather than a number, so we use loose equality checking here.","  if (version != this._version) {","    throw new Error('Unsupported version: ' + version);","  }","","  sources = sources","    .map(String)","    // Some source maps produce relative source paths like \"./foo.js\" instead of","    // \"foo.js\".  Normalize these first so that future comparisons will succeed.","    // See bugzil.la/1090768.","    .map(util.normalize)","    // Always ensure that absolute sources are internally stored relative to","    // the source root, if the source root is absolute. Not doing this would","    // be particularly problematic when the source root is a prefix of the","    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.","    .map(function (source) {","      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)","        ? util.relative(sourceRoot, source)","        : source;","    });","","  // Pass `true` below to allow duplicate names and sources. While source maps","  // are intended to be compressed and deduplicated, the TypeScript compiler","  // sometimes generates source maps with duplicates in them. See Github issue","  // #72 and bugzil.la/889492.","  this._names = ArraySet.fromArray(names.map(String), true);","  this._sources = ArraySet.fromArray(sources, true);","","  this.sourceRoot = sourceRoot;","  this.sourcesContent = sourcesContent;","  this._mappings = mappings;","  this.file = file;","}","","BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);","BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;","","/**"," * Create a BasicSourceMapConsumer from a SourceMapGenerator."," *"," * @param SourceMapGenerator aSourceMap"," *        The source map that will be consumed."," * @returns BasicSourceMapConsumer"," */","BasicSourceMapConsumer.fromSourceMap =","  function SourceMapConsumer_fromSourceMap(aSourceMap) {","    var smc = Object.create(BasicSourceMapConsumer.prototype);","","    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);","    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);","    smc.sourceRoot = aSourceMap._sourceRoot;","    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),","                                                            smc.sourceRoot);","    smc.file = aSourceMap._file;","","    // Because we are modifying the entries (by converting string sources and","    // names to indices into the sources and names ArraySets), we have to make","    // a copy of the entry or else bad things happen. Shared mutable state","    // strikes again! See github issue #191.","","    var generatedMappings = aSourceMap._mappings.toArray().slice();","    var destGeneratedMappings = smc.__generatedMappings = [];","    var destOriginalMappings = smc.__originalMappings = [];","","    for (var i = 0, length = generatedMappings.length; i < length; i++) {","      var srcMapping = generatedMappings[i];","      var destMapping = new Mapping;","      destMapping.generatedLine = srcMapping.generatedLine;","      destMapping.generatedColumn = srcMapping.generatedColumn;","","      if (srcMapping.source) {","        destMapping.source = sources.indexOf(srcMapping.source);","        destMapping.originalLine = srcMapping.originalLine;","        destMapping.originalColumn = srcMapping.originalColumn;","","        if (srcMapping.name) {","          destMapping.name = names.indexOf(srcMapping.name);","        }","","        destOriginalMappings.push(destMapping);","      }","","      destGeneratedMappings.push(destMapping);","    }","","    quickSort(smc.__originalMappings, util.compareByOriginalPositions);","","    return smc;","  };","","/**"," * The version of the source mapping spec that we are consuming."," */","BasicSourceMapConsumer.prototype._version = 3;","","/**"," * The list of original sources."," */","Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {","  get: function () {","    return this._sources.toArray().map(function (s) {","      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;","    }, this);","  }","});","","/**"," * Provide the JIT with a nice shape / hidden class."," */","function Mapping() {","  this.generatedLine = 0;","  this.generatedColumn = 0;","  this.source = null;","  this.originalLine = null;","  this.originalColumn = null;","  this.name = null;","}","","/**"," * Parse the mappings in a string in to a data structure which we can easily"," * query (the ordered arrays in the `this.__generatedMappings` and"," * `this.__originalMappings` properties)."," */","BasicSourceMapConsumer.prototype._parseMappings =","  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {","    var generatedLine = 1;","    var previousGeneratedColumn = 0;","    var previousOriginalLine = 0;","    var previousOriginalColumn = 0;","    var previousSource = 0;","    var previousName = 0;","    var length = aStr.length;","    var index = 0;","    var cachedSegments = {};","    var temp = {};","    var originalMappings = [];","    var generatedMappings = [];","    var mapping, str, segment, end, value;","","    while (index < length) {","      if (aStr.charAt(index) === ';') {","        generatedLine++;","        index++;","        previousGeneratedColumn = 0;","      }","      else if (aStr.charAt(index) === ',') {","        index++;","      }","      else {","        mapping = new Mapping();","        mapping.generatedLine = generatedLine;","","        // Because each offset is encoded relative to the previous one,","        // many segments often have the same encoding. We can exploit this","        // fact by caching the parsed variable length fields of each segment,","        // allowing us to avoid a second parse if we encounter the same","        // segment again.","        for (end = index; end < length; end++) {","          if (this._charIsMappingSeparator(aStr, end)) {","            break;","          }","        }","        str = aStr.slice(index, end);","","        segment = cachedSegments[str];","        if (segment) {","          index += str.length;","        } else {","          segment = [];","          while (index < end) {","            base64VLQ.decode(aStr, index, temp);","            value = temp.value;","            index = temp.rest;","            segment.push(value);","          }","","          if (segment.length === 2) {","            throw new Error('Found a source, but no line and column');","          }","","          if (segment.length === 3) {","            throw new Error('Found a source and line, but no column');","          }","","          cachedSegments[str] = segment;","        }","","        // Generated column.","        mapping.generatedColumn = previousGeneratedColumn + segment[0];","        previousGeneratedColumn = mapping.generatedColumn;","","        if (segment.length > 1) {","          // Original source.","          mapping.source = previousSource + segment[1];","          previousSource += segment[1];","","          // Original line.","          mapping.originalLine = previousOriginalLine + segment[2];","          previousOriginalLine = mapping.originalLine;","          // Lines are stored 0-based","          mapping.originalLine += 1;","","          // Original column.","          mapping.originalColumn = previousOriginalColumn + segment[3];","          previousOriginalColumn = mapping.originalColumn;","","          if (segment.length > 4) {","            // Original name.","            mapping.name = previousName + segment[4];","            previousName += segment[4];","          }","        }","","        generatedMappings.push(mapping);","        if (typeof mapping.originalLine === 'number') {","          originalMappings.push(mapping);","        }","      }","    }","","    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);","    this.__generatedMappings = generatedMappings;","","    quickSort(originalMappings, util.compareByOriginalPositions);","    this.__originalMappings = originalMappings;","  };","","/**"," * Find the mapping that best matches the hypothetical \"needle\" mapping that"," * we are searching for in the given \"haystack\" of mappings."," */","BasicSourceMapConsumer.prototype._findMapping =","  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,","                                         aColumnName, aComparator, aBias) {","    // To return the position we are searching for, we must first find the","    // mapping for the given position and then return the opposite position it","    // points to. Because the mappings are sorted, we can use binary search to","    // find the best mapping.","","    if (aNeedle[aLineName] <= 0) {","      throw new TypeError('Line must be greater than or equal to 1, got '","                          + aNeedle[aLineName]);","    }","    if (aNeedle[aColumnName] < 0) {","      throw new TypeError('Column must be greater than or equal to 0, got '","                          + aNeedle[aColumnName]);","    }","","    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);","  };","","/**"," * Compute the last column for each generated mapping. The last column is"," * inclusive."," */","BasicSourceMapConsumer.prototype.computeColumnSpans =","  function SourceMapConsumer_computeColumnSpans() {","    for (var index = 0; index < this._generatedMappings.length; ++index) {","      var mapping = this._generatedMappings[index];","","      // Mappings do not contain a field for the last generated columnt. We","      // can come up with an optimistic estimate, however, by assuming that","      // mappings are contiguous (i.e. given two consecutive mappings, the","      // first mapping ends where the second one starts).","      if (index + 1 < this._generatedMappings.length) {","        var nextMapping = this._generatedMappings[index + 1];","","        if (mapping.generatedLine === nextMapping.generatedLine) {","          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;","          continue;","        }","      }","","      // The last mapping for each line spans the entire line.","      mapping.lastGeneratedColumn = Infinity;","    }","  };","","/**"," * Returns the original source, line, and column information for the generated"," * source's line and column positions provided. The only argument is an object"," * with the following properties:"," *"," *   - line: The line number in the generated source."," *   - column: The column number in the generated source."," *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or"," *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the"," *     closest element that is smaller than or greater than the one we are"," *     searching for, respectively, if the exact element cannot be found."," *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'."," *"," * and an object is returned with the following properties:"," *"," *   - source: The original source file, or null."," *   - line: The line number in the original source, or null."," *   - column: The column number in the original source, or null."," *   - name: The original identifier, or null."," */","BasicSourceMapConsumer.prototype.originalPositionFor =","  function SourceMapConsumer_originalPositionFor(aArgs) {","    var needle = {","      generatedLine: util.getArg(aArgs, 'line'),","      generatedColumn: util.getArg(aArgs, 'column')","    };","","    var index = this._findMapping(","      needle,","      this._generatedMappings,","      \"generatedLine\",","      \"generatedColumn\",","      util.compareByGeneratedPositionsDeflated,","      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)","    );","","    if (index >= 0) {","      var mapping = this._generatedMappings[index];","","      if (mapping.generatedLine === needle.generatedLine) {","        var source = util.getArg(mapping, 'source', null);","        if (source !== null) {","          source = this._sources.at(source);","          if (this.sourceRoot != null) {","            source = util.join(this.sourceRoot, source);","          }","        }","        var name = util.getArg(mapping, 'name', null);","        if (name !== null) {","          name = this._names.at(name);","        }","        return {","          source: source,","          line: util.getArg(mapping, 'originalLine', null),","          column: util.getArg(mapping, 'originalColumn', null),","          name: name","        };","      }","    }","","    return {","      source: null,","      line: null,","      column: null,","      name: null","    };","  };","","/**"," * Return true if we have the source content for every source in the source"," * map, false otherwise."," */","BasicSourceMapConsumer.prototype.hasContentsOfAllSources =","  function BasicSourceMapConsumer_hasContentsOfAllSources() {","    if (!this.sourcesContent) {","      return false;","    }","    return this.sourcesContent.length >= this._sources.size() &&","      !this.sourcesContent.some(function (sc) { return sc == null; });","  };","","/**"," * Returns the original source content. The only argument is the url of the"," * original source file. Returns null if no original source content is"," * available."," */","BasicSourceMapConsumer.prototype.sourceContentFor =","  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {","    if (!this.sourcesContent) {","      return null;","    }","","    if (this.sourceRoot != null) {","      aSource = util.relative(this.sourceRoot, aSource);","    }","","    if (this._sources.has(aSource)) {","      return this.sourcesContent[this._sources.indexOf(aSource)];","    }","","    var url;","    if (this.sourceRoot != null","        && (url = util.urlParse(this.sourceRoot))) {","      // XXX: file:// URIs and absolute paths lead to unexpected behavior for","      // many users. We can help them out when they expect file:// URIs to","      // behave like it would if they were running a local HTTP server. See","      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.","      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");","      if (url.scheme == \"file\"","          && this._sources.has(fileUriAbsPath)) {","        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]","      }","","      if ((!url.path || url.path == \"/\")","          && this._sources.has(\"/\" + aSource)) {","        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];","      }","    }","","    // This function is used recursively from","    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we","    // don't want to throw if we can't find the source - we just want to","    // return null, so we provide a flag to exit gracefully.","    if (nullOnMissing) {","      return null;","    }","    else {","      throw new Error('\"' + aSource + '\" is not in the SourceMap.');","    }","  };","","/**"," * Returns the generated line and column information for the original source,"," * line, and column positions provided. The only argument is an object with"," * the following properties:"," *"," *   - source: The filename of the original source."," *   - line: The line number in the original source."," *   - column: The column number in the original source."," *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or"," *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the"," *     closest element that is smaller than or greater than the one we are"," *     searching for, respectively, if the exact element cannot be found."," *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'."," *"," * and an object is returned with the following properties:"," *"," *   - line: The line number in the generated source, or null."," *   - column: The column number in the generated source, or null."," */","BasicSourceMapConsumer.prototype.generatedPositionFor =","  function SourceMapConsumer_generatedPositionFor(aArgs) {","    var source = util.getArg(aArgs, 'source');","    if (this.sourceRoot != null) {","      source = util.relative(this.sourceRoot, source);","    }","    if (!this._sources.has(source)) {","      return {","        line: null,","        column: null,","        lastColumn: null","      };","    }","    source = this._sources.indexOf(source);","","    var needle = {","      source: source,","      originalLine: util.getArg(aArgs, 'line'),","      originalColumn: util.getArg(aArgs, 'column')","    };","","    var index = this._findMapping(","      needle,","      this._originalMappings,","      \"originalLine\",","      \"originalColumn\",","      util.compareByOriginalPositions,","      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)","    );","","    if (index >= 0) {","      var mapping = this._originalMappings[index];","","      if (mapping.source === needle.source) {","        return {","          line: util.getArg(mapping, 'generatedLine', null),","          column: util.getArg(mapping, 'generatedColumn', null),","          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)","        };","      }","    }","","    return {","      line: null,","      column: null,","      lastColumn: null","    };","  };","","exports.BasicSourceMapConsumer = BasicSourceMapConsumer;","","/**"," * An IndexedSourceMapConsumer instance represents a parsed source map which"," * we can query for information. It differs from BasicSourceMapConsumer in"," * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as"," * input."," *"," * The only parameter is a raw source map (either as a JSON string, or already"," * parsed to an object). According to the spec for indexed source maps, they"," * have the following attributes:"," *"," *   - version: Which version of the source map spec this map is following."," *   - file: Optional. The generated file this source map is associated with."," *   - sections: A list of section definitions."," *"," * Each value under the \"sections\" field has two fields:"," *   - offset: The offset into the original specified at which this section"," *       begins to apply, defined as an object with a \"line\" and \"column\""," *       field."," *   - map: A source map definition. This source map could also be indexed,"," *       but doesn't have to be."," *"," * Instead of the \"map\" field, it's also possible to have a \"url\" field"," * specifying a URL to retrieve a source map from, but that's currently"," * unsupported."," *"," * Here's an example source map, taken from the source map spec[0], but"," * modified to omit a section which uses the \"url\" field."," *"," *  {"," *    version : 3,"," *    file: \"app.js\","," *    sections: [{"," *      offset: {line:100, column:10},"," *      map: {"," *        version : 3,"," *        file: \"section.js\","," *        sources: [\"foo.js\", \"bar.js\"],"," *        names: [\"src\", \"maps\", \"are\", \"fun\"],"," *        mappings: \"AAAA,E;;ABCDE;\""," *      }"," *    }],"," *  }"," *"," * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt"," */","function IndexedSourceMapConsumer(aSourceMap) {","  var sourceMap = aSourceMap;","  if (typeof aSourceMap === 'string') {","    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));","  }","","  var version = util.getArg(sourceMap, 'version');","  var sections = util.getArg(sourceMap, 'sections');","","  if (version != this._version) {","    throw new Error('Unsupported version: ' + version);","  }","","  this._sources = new ArraySet();","  this._names = new ArraySet();","","  var lastOffset = {","    line: -1,","    column: 0","  };","  this._sections = sections.map(function (s) {","    if (s.url) {","      // The url field will require support for asynchronicity.","      // See https://github.com/mozilla/source-map/issues/16","      throw new Error('Support for url field in sections not implemented.');","    }","    var offset = util.getArg(s, 'offset');","    var offsetLine = util.getArg(offset, 'line');","    var offsetColumn = util.getArg(offset, 'column');","","    if (offsetLine < lastOffset.line ||","        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {","      throw new Error('Section offsets must be ordered and non-overlapping.');","    }","    lastOffset = offset;","","    return {","      generatedOffset: {","        // The offset fields are 0-based, but we use 1-based indices when","        // encoding/decoding from VLQ.","        generatedLine: offsetLine + 1,","        generatedColumn: offsetColumn + 1","      },","      consumer: new SourceMapConsumer(util.getArg(s, 'map'))","    }","  });","}","","IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);","IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;","","/**"," * The version of the source mapping spec that we are consuming."," */","IndexedSourceMapConsumer.prototype._version = 3;","","/**"," * The list of original sources."," */","Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {","  get: function () {","    var sources = [];","    for (var i = 0; i < this._sections.length; i++) {","      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {","        sources.push(this._sections[i].consumer.sources[j]);","      }","    }","    return sources;","  }","});","","/**"," * Returns the original source, line, and column information for the generated"," * source's line and column positions provided. The only argument is an object"," * with the following properties:"," *"," *   - line: The line number in the generated source."," *   - column: The column number in the generated source."," *"," * and an object is returned with the following properties:"," *"," *   - source: The original source file, or null."," *   - line: The line number in the original source, or null."," *   - column: The column number in the original source, or null."," *   - name: The original identifier, or null."," */","IndexedSourceMapConsumer.prototype.originalPositionFor =","  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {","    var needle = {","      generatedLine: util.getArg(aArgs, 'line'),","      generatedColumn: util.getArg(aArgs, 'column')","    };","","    // Find the section containing the generated position we're trying to map","    // to an original position.","    var sectionIndex = binarySearch.search(needle, this._sections,","      function(needle, section) {","        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;","        if (cmp) {","          return cmp;","        }","","        return (needle.generatedColumn -","                section.generatedOffset.generatedColumn);","      });","    var section = this._sections[sectionIndex];","","    if (!section) {","      return {","        source: null,","        line: null,","        column: null,","        name: null","      };","    }","","    return section.consumer.originalPositionFor({","      line: needle.generatedLine -","        (section.generatedOffset.generatedLine - 1),","      column: needle.generatedColumn -","        (section.generatedOffset.generatedLine === needle.generatedLine","         ? section.generatedOffset.generatedColumn - 1","         : 0),","      bias: aArgs.bias","    });","  };","","/**"," * Return true if we have the source content for every source in the source"," * map, false otherwise."," */","IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =","  function IndexedSourceMapConsumer_hasContentsOfAllSources() {","    return this._sections.every(function (s) {","      return s.consumer.hasContentsOfAllSources();","    });","  };","","/**"," * Returns the original source content. The only argument is the url of the"," * original source file. Returns null if no original source content is"," * available."," */","IndexedSourceMapConsumer.prototype.sourceContentFor =","  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {","    for (var i = 0; i < this._sections.length; i++) {","      var section = this._sections[i];","","      var content = section.consumer.sourceContentFor(aSource, true);","      if (content) {","        return content;","      }","    }","    if (nullOnMissing) {","      return null;","    }","    else {","      throw new Error('\"' + aSource + '\" is not in the SourceMap.');","    }","  };","","/**"," * Returns the generated line and column information for the original source,"," * line, and column positions provided. The only argument is an object with"," * the following properties:"," *"," *   - source: The filename of the original source."," *   - line: The line number in the original source."," *   - column: The column number in the original source."," *"," * and an object is returned with the following properties:"," *"," *   - line: The line number in the generated source, or null."," *   - column: The column number in the generated source, or null."," */","IndexedSourceMapConsumer.prototype.generatedPositionFor =","  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {","    for (var i = 0; i < this._sections.length; i++) {","      var section = this._sections[i];","","      // Only consider this section if the requested source is in the list of","      // sources of the consumer.","      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {","        continue;","      }","      var generatedPosition = section.consumer.generatedPositionFor(aArgs);","      if (generatedPosition) {","        var ret = {","          line: generatedPosition.line +","            (section.generatedOffset.generatedLine - 1),","          column: generatedPosition.column +","            (section.generatedOffset.generatedLine === generatedPosition.line","             ? section.generatedOffset.generatedColumn - 1","             : 0)","        };","        return ret;","      }","    }","","    return {","      line: null,","      column: null","    };","  };","","/**"," * Parse the mappings in a string in to a data structure which we can easily"," * query (the ordered arrays in the `this.__generatedMappings` and"," * `this.__originalMappings` properties)."," */","IndexedSourceMapConsumer.prototype._parseMappings =","  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {","    this.__generatedMappings = [];","    this.__originalMappings = [];","    for (var i = 0; i < this._sections.length; i++) {","      var section = this._sections[i];","      var sectionMappings = section.consumer._generatedMappings;","      for (var j = 0; j < sectionMappings.length; j++) {","        var mapping = sectionMappings[j];","","        var source = section.consumer._sources.at(mapping.source);","        if (section.consumer.sourceRoot !== null) {","          source = util.join(section.consumer.sourceRoot, source);","        }","        this._sources.add(source);","        source = this._sources.indexOf(source);","","        var name = section.consumer._names.at(mapping.name);","        this._names.add(name);","        name = this._names.indexOf(name);","","        // The mappings coming from the consumer for the section have","        // generated positions relative to the start of the section, so we","        // need to offset them to be relative to the start of the concatenated","        // generated file.","        var adjustedMapping = {","          source: source,","          generatedLine: mapping.generatedLine +","            (section.generatedOffset.generatedLine - 1),","          generatedColumn: mapping.generatedColumn +","            (section.generatedOffset.generatedLine === mapping.generatedLine","            ? section.generatedOffset.generatedColumn - 1","            : 0),","          originalLine: mapping.originalLine,","          originalColumn: mapping.originalColumn,","          name: name","        };","","        this.__generatedMappings.push(adjustedMapping);","        if (typeof adjustedMapping.originalLine === 'number') {","          this.__originalMappings.push(adjustedMapping);","        }","      }","    }","","    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);","    quickSort(this.__originalMappings, util.compareByOriginalPositions);","  };","","exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;",""],"l":{"8":1,"9":1,"10":1,"11":1,"12":1,"14":1,"15":0,"16":0,"17":0,"20":0,"25":1,"26":0,"32":1,"64":1,"65":1,"67":0,"68":0,"71":0,"75":1,"76":1,"78":0,"79":0,"82":0,"86":1,"88":0,"89":0,"97":1,"99":0,"102":1,"103":1,"105":1,"106":1,"124":1,"126":0,"127":0,"129":0,"130":0,"132":0,"133":0,"135":0,"136":0,"138":0,"141":0,"142":0,"143":0,"144":0,"145":0,"147":0,"177":1,"179":0,"185":0,"191":0,"192":0,"194":0,"195":0,"197":0,"199":0,"201":0,"207":0,"208":0,"210":0,"211":0,"217":0,"218":0,"224":0,"227":0,"233":0,"236":0,"242":0,"247":0,"250":1,"282":1,"283":0,"284":0,"285":0,"288":0,"289":0,"292":0,"293":0,"294":0,"295":0,"296":0,"300":0,"301":0,"304":0,"315":0,"324":0,"325":0,"327":0,"328":0,"329":0,"330":0,"333":1,"334":1,"343":1,"345":0,"347":0,"348":0,"349":0,"350":0,"352":0,"359":0,"360":0,"361":0,"363":0,"364":0,"365":0,"366":0,"367":0,"369":0,"370":0,"371":0,"372":0,"374":0,"375":0,"378":0,"381":0,"384":0,"386":0,"392":1,"397":1,"399":0,"400":0,"408":1,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"422":1,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"438":0,"439":0,"440":0,"441":0,"442":0,"444":0,"445":0,"448":0,"449":0,"456":0,"457":0,"458":0,"461":0,"463":0,"464":0,"465":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"475":0,"476":0,"479":0,"480":0,"483":0,"487":0,"488":0,"490":0,"492":0,"493":0,"496":0,"497":0,"499":0,"502":0,"503":0,"505":0,"507":0,"508":0,"512":0,"513":0,"514":0,"519":0,"520":0,"522":0,"523":0,"530":1,"538":0,"539":0,"542":0,"543":0,"547":0,"554":1,"556":0,"557":0,"563":0,"564":0,"566":0,"567":0,"568":0,"573":0,"597":1,"599":0,"604":0,"613":0,"614":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"624":0,"625":0,"626":0,"628":0,"637":0,"649":1,"651":0,"652":0,"654":0,"655":0,"663":1,"665":0,"666":0,"669":0,"670":0,"673":0,"674":0,"677":0,"678":0,"684":0,"685":0,"687":0,"690":0,"692":0,"700":0,"701":0,"704":0,"727":1,"729":0,"730":0,"731":0,"733":0,"734":0,"740":0,"742":0,"748":0,"757":0,"758":0,"760":0,"761":0,"769":0,"776":1,"823":1,"824":0,"825":0,"826":0,"829":0,"830":0,"832":0,"833":0,"836":0,"837":0,"839":0,"843":0,"844":0,"847":0,"849":0,"850":0,"851":0,"853":0,"855":0,"857":0,"859":0,"871":1,"872":1,"877":1,"882":1,"884":0,"885":0,"886":0,"887":0,"890":0,"909":1,"911":0,"918":0,"920":0,"921":0,"922":0,"925":0,"928":0,"930":0,"931":0,"939":0,"954":1,"956":0,"957":0,"966":1,"968":0,"969":0,"971":0,"972":0,"973":0,"976":0,"977":0,"980":0,"998":1,"1000":0,"1001":0,"1005":0,"1006":0,"1008":0,"1009":0,"1010":0,"1018":0,"1022":0,"1033":1,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1043":0,"1044":0,"1045":0,"1047":0,"1048":0,"1050":0,"1051":0,"1052":0,"1058":0,"1071":0,"1072":0,"1073":0,"1078":0,"1079":0,"1082":1}},"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/binary-search.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/binary-search.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"recursiveSearch","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":75}}},"2":{"name":"search","line":89,"loc":{"start":{"line":89,"column":17},"end":{"line":89,"column":70}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"3":{"start":{"line":24,"column":0},"end":{"line":69,"column":1}},"4":{"start":{"line":34,"column":2},"end":{"line":34,"column":50}},"5":{"start":{"line":35,"column":2},"end":{"line":35,"column":52}},"6":{"start":{"line":36,"column":2},"end":{"line":68,"column":3}},"7":{"start":{"line":38,"column":4},"end":{"line":38,"column":15}},"8":{"start":{"line":40,"column":7},"end":{"line":68,"column":3}},"9":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"10":{"start":{"line":44,"column":6},"end":{"line":44,"column":78}},"11":{"start":{"line":49,"column":4},"end":{"line":53,"column":5}},"12":{"start":{"line":50,"column":6},"end":{"line":50,"column":51}},"13":{"start":{"line":52,"column":6},"end":{"line":52,"column":17}},"14":{"start":{"line":57,"column":4},"end":{"line":60,"column":5}},"15":{"start":{"line":59,"column":6},"end":{"line":59,"column":77}},"16":{"start":{"line":63,"column":4},"end":{"line":67,"column":5}},"17":{"start":{"line":64,"column":6},"end":{"line":64,"column":17}},"18":{"start":{"line":66,"column":6},"end":{"line":66,"column":34}},"19":{"start":{"line":89,"column":0},"end":{"line":111,"column":2}},"20":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"21":{"start":{"line":91,"column":4},"end":{"line":91,"column":14}},"22":{"start":{"line":94,"column":2},"end":{"line":95,"column":79}},"23":{"start":{"line":96,"column":2},"end":{"line":98,"column":3}},"24":{"start":{"line":97,"column":4},"end":{"line":97,"column":14}},"25":{"start":{"line":103,"column":2},"end":{"line":108,"column":3}},"26":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"27":{"start":{"line":105,"column":6},"end":{"line":105,"column":12}},"28":{"start":{"line":107,"column":4},"end":{"line":107,"column":12}},"29":{"start":{"line":110,"column":2},"end":{"line":110,"column":15}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":7},"end":{"line":40,"column":7}},{"start":{"line":40,"column":7},"end":{"line":40,"column":7}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"4":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"5":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":40},"end":{"line":50,"column":45}},{"start":{"line":50,"column":48},"end":{"line":50,"column":50}}]},"6":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"7":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"8":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":24},"end":{"line":66,"column":26}},{"start":{"line":66,"column":29},"end":{"line":66,"column":33}}]},"9":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"10":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":40},"end":{"line":95,"column":45}},{"start":{"line":95,"column":49},"end":{"line":95,"column":77}}]},"11":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"12":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]}},"code":["/* -*- Mode: js; js-indent-level: 2; -*- */","/*"," * Copyright 2011 Mozilla Foundation and contributors"," * Licensed under the New BSD license. See LICENSE or:"," * http://opensource.org/licenses/BSD-3-Clause"," */","","exports.GREATEST_LOWER_BOUND = 1;","exports.LEAST_UPPER_BOUND = 2;","","/**"," * Recursive implementation of binary search."," *"," * @param aLow Indices here and lower do not contain the needle."," * @param aHigh Indices here and higher do not contain the needle."," * @param aNeedle The element being searched for."," * @param aHaystack The non-empty array being searched."," * @param aCompare Function which takes two elements and returns -1, 0, or 1."," * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or"," *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the"," *     closest element that is smaller than or greater than the one we are"," *     searching for, respectively, if the exact element cannot be found."," */","function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {","  // This function terminates when one of the following is true:","  //","  //   1. We find the exact element we are looking for.","  //","  //   2. We did not find the exact element, but we can return the index of","  //      the next-closest element.","  //","  //   3. We did not find the exact element, and there is no next-closest","  //      element than the one we are searching for, so we return -1.","  var mid = Math.floor((aHigh - aLow) / 2) + aLow;","  var cmp = aCompare(aNeedle, aHaystack[mid], true);","  if (cmp === 0) {","    // Found the element we are looking for.","    return mid;","  }","  else if (cmp > 0) {","    // Our needle is greater than aHaystack[mid].","    if (aHigh - mid > 1) {","      // The element is in the upper half.","      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);","    }","","    // The exact needle element was not found in this haystack. Determine if","    // we are in termination case (3) or (2) and return the appropriate thing.","    if (aBias == exports.LEAST_UPPER_BOUND) {","      return aHigh < aHaystack.length ? aHigh : -1;","    } else {","      return mid;","    }","  }","  else {","    // Our needle is less than aHaystack[mid].","    if (mid - aLow > 1) {","      // The element is in the lower half.","      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);","    }","","    // we are in termination case (3) or (2) and return the appropriate thing.","    if (aBias == exports.LEAST_UPPER_BOUND) {","      return mid;","    } else {","      return aLow < 0 ? -1 : aLow;","    }","  }","}","","/**"," * This is an implementation of binary search which will always try and return"," * the index of the closest element if there is no exact hit. This is because"," * mappings between original and generated line/col pairs are single points,"," * and there is an implicit region between each of them, so a miss just means"," * that you aren't on the very start of a region."," *"," * @param aNeedle The element you are looking for."," * @param aHaystack The array that is being searched."," * @param aCompare A function which takes the needle and an element in the"," *     array and returns -1, 0, or 1 depending on whether the needle is less"," *     than, equal to, or greater than the element, respectively."," * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or"," *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the"," *     closest element that is smaller than or greater than the one we are"," *     searching for, respectively, if the exact element cannot be found."," *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'."," */","exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {","  if (aHaystack.length === 0) {","    return -1;","  }","","  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,","                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);","  if (index < 0) {","    return -1;","  }","","  // We have found either the exact element, or the next-closest element than","  // the one we are searching for. However, there may be more than one such","  // element. Make sure we always return the smallest of these.","  while (index - 1 >= 0) {","    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {","      break;","    }","    --index;","  }","","  return index;","};",""],"l":{"8":1,"9":1,"24":1,"34":0,"35":0,"36":0,"38":0,"40":0,"42":0,"44":0,"49":0,"50":0,"52":0,"57":0,"59":0,"63":0,"64":0,"66":0,"89":1,"90":0,"91":0,"94":0,"96":0,"97":0,"103":0,"104":0,"105":0,"107":0,"110":0}},"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/quick-sort.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/quick-sort.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"swap","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":25}}},"2":{"name":"randomIntInRange","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":37}}},"3":{"name":"doQuickSort","line":58,"loc":{"start":{"line":58,"column":0},"end":{"line":58,"column":44}}},"4":{"name":"(anonymous_4)","line":112,"loc":{"start":{"line":112,"column":20},"end":{"line":112,"column":47}}}},"statementMap":{"1":{"start":{"line":28,"column":0},"end":{"line":32,"column":1}},"2":{"start":{"line":29,"column":2},"end":{"line":29,"column":20}},"3":{"start":{"line":30,"column":2},"end":{"line":30,"column":18}},"4":{"start":{"line":31,"column":2},"end":{"line":31,"column":16}},"5":{"start":{"line":42,"column":0},"end":{"line":44,"column":1}},"6":{"start":{"line":43,"column":2},"end":{"line":43,"column":58}},"7":{"start":{"line":58,"column":0},"end":{"line":102,"column":1}},"8":{"start":{"line":63,"column":2},"end":{"line":101,"column":3}},"9":{"start":{"line":75,"column":4},"end":{"line":75,"column":44}},"10":{"start":{"line":76,"column":4},"end":{"line":76,"column":18}},"11":{"start":{"line":78,"column":4},"end":{"line":78,"column":29}},"12":{"start":{"line":79,"column":4},"end":{"line":79,"column":23}},"13":{"start":{"line":87,"column":4},"end":{"line":92,"column":5}},"14":{"start":{"line":88,"column":6},"end":{"line":91,"column":7}},"15":{"start":{"line":89,"column":8},"end":{"line":89,"column":15}},"16":{"start":{"line":90,"column":8},"end":{"line":90,"column":24}},"17":{"start":{"line":94,"column":4},"end":{"line":94,"column":24}},"18":{"start":{"line":95,"column":4},"end":{"line":95,"column":18}},"19":{"start":{"line":99,"column":4},"end":{"line":99,"column":43}},"20":{"start":{"line":100,"column":4},"end":{"line":100,"column":43}},"21":{"start":{"line":112,"column":0},"end":{"line":114,"column":2}},"22":{"start":{"line":113,"column":2},"end":{"line":113,"column":50}}},"branchMap":{"1":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"2":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":6},"end":{"line":88,"column":6}},{"start":{"line":88,"column":6},"end":{"line":88,"column":6}}]}},"code":["/* -*- Mode: js; js-indent-level: 2; -*- */","/*"," * Copyright 2011 Mozilla Foundation and contributors"," * Licensed under the New BSD license. See LICENSE or:"," * http://opensource.org/licenses/BSD-3-Clause"," */","","// It turns out that some (most?) JavaScript engines don't self-host","// `Array.prototype.sort`. This makes sense because C++ will likely remain","// faster than JS when doing raw CPU-intensive sorting. However, when using a","// custom comparator function, calling back and forth between the VM's C++ and","// JIT'd JS is rather slow *and* loses JIT type information, resulting in","// worse generated code for the comparator function than would be optimal. In","// fact, when sorting with a comparator, these costs outweigh the benefits of","// sorting in C++. By using our own JS-implemented Quick Sort (below), we get","// a ~3500ms mean speed-up in `bench/bench.html`.","","/**"," * Swap the elements indexed by `x` and `y` in the array `ary`."," *"," * @param {Array} ary"," *        The array."," * @param {Number} x"," *        The index of the first item."," * @param {Number} y"," *        The index of the second item."," */","function swap(ary, x, y) {","  var temp = ary[x];","  ary[x] = ary[y];","  ary[y] = temp;","}","","/**"," * Returns a random integer within the range `low .. high` inclusive."," *"," * @param {Number} low"," *        The lower bound on the range."," * @param {Number} high"," *        The upper bound on the range."," */","function randomIntInRange(low, high) {","  return Math.round(low + (Math.random() * (high - low)));","}","","/**"," * The Quick Sort algorithm."," *"," * @param {Array} ary"," *        An array to sort."," * @param {function} comparator"," *        Function to use to compare two items."," * @param {Number} p"," *        Start index of the array"," * @param {Number} r"," *        End index of the array"," */","function doQuickSort(ary, comparator, p, r) {","  // If our lower bound is less than our upper bound, we (1) partition the","  // array into two pieces and (2) recurse on each half. If it is not, this is","  // the empty array and our base case.","","  if (p < r) {","    // (1) Partitioning.","    //","    // The partitioning chooses a pivot between `p` and `r` and moves all","    // elements that are less than or equal to the pivot to the before it, and","    // all the elements that are greater than it after it. The effect is that","    // once partition is done, the pivot is in the exact place it will be when","    // the array is put in sorted order, and it will not need to be moved","    // again. This runs in O(n) time.","","    // Always choose a random pivot so that an input array which is reverse","    // sorted does not cause O(n^2) running time.","    var pivotIndex = randomIntInRange(p, r);","    var i = p - 1;","","    swap(ary, pivotIndex, r);","    var pivot = ary[r];","","    // Immediately after `j` is incremented in this loop, the following hold","    // true:","    //","    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.","    //","    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.","    for (var j = p; j < r; j++) {","      if (comparator(ary[j], pivot) <= 0) {","        i += 1;","        swap(ary, i, j);","      }","    }","","    swap(ary, i + 1, j);","    var q = i + 1;","","    // (2) Recurse on each half.","","    doQuickSort(ary, comparator, p, q - 1);","    doQuickSort(ary, comparator, q + 1, r);","  }","}","","/**"," * Sort the given array in-place with the given comparator function."," *"," * @param {Array} ary"," *        An array to sort."," * @param {function} comparator"," *        Function to use to compare two items."," */","exports.quickSort = function (ary, comparator) {","  doQuickSort(ary, comparator, 0, ary.length - 1);","};",""],"l":{"28":1,"29":0,"30":0,"31":0,"42":1,"43":0,"58":1,"63":0,"75":0,"76":0,"78":0,"79":0,"87":0,"88":0,"89":0,"90":0,"94":0,"95":0,"99":0,"100":0,"112":1,"113":0}},"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/source-node.js":{"path":"/home/travis/build/npmtest/node-npmtest-source-map/node_modules/source-map/lib/source-node.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"SourceNode","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":61}}},"2":{"name":"SourceNode_fromStringWithSourceMap","line":55,"loc":{"start":{"line":55,"column":2},"end":{"line":55,"column":97}}},"3":{"name":"(anonymous_3)","line":65,"loc":{"start":{"line":65,"column":24},"end":{"line":65,"column":35}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":35},"end":{"line":80,"column":54}}},"5":{"name":"(anonymous_5)","line":132,"loc":{"start":{"line":132,"column":39},"end":{"line":132,"column":61}}},"6":{"name":"addMappingWithCode","line":144,"loc":{"start":{"line":144,"column":4},"end":{"line":144,"column":47}}},"7":{"name":"SourceNode_add","line":166,"loc":{"start":{"line":166,"column":27},"end":{"line":166,"column":59}}},"8":{"name":"(anonymous_8)","line":168,"loc":{"start":{"line":168,"column":19},"end":{"line":168,"column":36}}},"9":{"name":"SourceNode_prepend","line":191,"loc":{"start":{"line":191,"column":31},"end":{"line":191,"column":67}}},"10":{"name":"SourceNode_walk","line":215,"loc":{"start":{"line":215,"column":28},"end":{"line":215,"column":58}}},"11":{"name":"SourceNode_join","line":239,"loc":{"start":{"line":239,"column":28},"end":{"line":239,"column":59}}},"12":{"name":"SourceNode_replaceRight","line":262,"loc":{"start":{"line":262,"column":36},"end":{"line":262,"column":93}}},"13":{"name":"SourceNode_setSourceContent","line":284,"loc":{"start":{"line":284,"column":2},"end":{"line":284,"column":68}}},"14":{"name":"SourceNode_walkSourceContents","line":295,"loc":{"start":{"line":295,"column":2},"end":{"line":295,"column":46}}},"15":{"name":"SourceNode_toString","line":312,"loc":{"start":{"line":312,"column":32},"end":{"line":312,"column":63}}},"16":{"name":"(anonymous_16)","line":314,"loc":{"start":{"line":314,"column":12},"end":{"line":314,"column":29}}},"17":{"name":"SourceNode_toStringWithSourceMap","line":324,"loc":{"start":{"line":324,"column":45},"end":{"line":324,"column":94}}},"18":{"name":"(anonymous_18)","line":336,"loc":{"start":{"line":336,"column":12},"end":{"line":336,"column":39}}},"19":{"name":"(anonymous_19)","line":400,"loc":{"start":{"line":400,"column":26},"end":{"line":400,"column":63}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":78}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":30}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":22}},"5":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}},"6":{"start":{"line":35,"column":0},"end":{"line":44,"column":1}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":21}},"8":{"start":{"line":37,"column":2},"end":{"line":37,"column":27}},"9":{"start":{"line":38,"column":2},"end":{"line":38,"column":43}},"10":{"start":{"line":39,"column":2},"end":{"line":39,"column":49}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":49}},"12":{"start":{"line":41,"column":2},"end":{"line":41,"column":43}},"13":{"start":{"line":42,"column":2},"end":{"line":42,"column":28}},"14":{"start":{"line":43,"column":2},"end":{"line":43,"column":41}},"15":{"start":{"line":43,"column":23},"end":{"line":43,"column":41}},"16":{"start":{"line":54,"column":0},"end":{"line":158,"column":4}},"17":{"start":{"line":58,"column":4},"end":{"line":58,"column":32}},"18":{"start":{"line":64,"column":4},"end":{"line":64,"column":61}},"19":{"start":{"line":65,"column":4},"end":{"line":70,"column":6}},"20":{"start":{"line":66,"column":6},"end":{"line":66,"column":48}},"21":{"start":{"line":68,"column":6},"end":{"line":68,"column":49}},"22":{"start":{"line":69,"column":6},"end":{"line":69,"column":36}},"23":{"start":{"line":73,"column":4},"end":{"line":73,"column":55}},"24":{"start":{"line":78,"column":4},"end":{"line":78,"column":27}},"25":{"start":{"line":80,"column":4},"end":{"line":120,"column":13}},"26":{"start":{"line":81,"column":6},"end":{"line":105,"column":7}},"27":{"start":{"line":84,"column":8},"end":{"line":104,"column":9}},"28":{"start":{"line":86,"column":10},"end":{"line":86,"column":59}},"29":{"start":{"line":87,"column":10},"end":{"line":87,"column":30}},"30":{"start":{"line":88,"column":10},"end":{"line":88,"column":34}},"31":{"start":{"line":94,"column":10},"end":{"line":94,"column":43}},"32":{"start":{"line":95,"column":10},"end":{"line":96,"column":61}},"33":{"start":{"line":97,"column":10},"end":{"line":98,"column":67}},"34":{"start":{"line":99,"column":10},"end":{"line":99,"column":56}},"35":{"start":{"line":100,"column":10},"end":{"line":100,"column":48}},"36":{"start":{"line":102,"column":10},"end":{"line":102,"column":32}},"37":{"start":{"line":103,"column":10},"end":{"line":103,"column":17}},"38":{"start":{"line":109,"column":6},"end":{"line":112,"column":7}},"39":{"start":{"line":110,"column":8},"end":{"line":110,"column":34}},"40":{"start":{"line":111,"column":8},"end":{"line":111,"column":28}},"41":{"start":{"line":113,"column":6},"end":{"line":118,"column":7}},"42":{"start":{"line":114,"column":8},"end":{"line":114,"column":41}},"43":{"start":{"line":115,"column":8},"end":{"line":115,"column":62}},"44":{"start":{"line":116,"column":8},"end":{"line":116,"column":69}},"45":{"start":{"line":117,"column":8},"end":{"line":117,"column":54}},"46":{"start":{"line":119,"column":6},"end":{"line":119,"column":28}},"47":{"start":{"line":122,"column":4},"end":{"line":129,"column":5}},"48":{"start":{"line":123,"column":6},"end":{"line":126,"column":7}},"49":{"start":{"line":125,"column":8},"end":{"line":125,"column":57}},"50":{"start":{"line":128,"column":6},"end":{"line":128,"column":40}},"51":{"start":{"line":132,"column":4},"end":{"line":140,"column":7}},"52":{"start":{"line":133,"column":6},"end":{"line":133,"column":68}},"53":{"start":{"line":134,"column":6},"end":{"line":139,"column":7}},"54":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"55":{"start":{"line":136,"column":10},"end":{"line":136,"column":60}},"56":{"start":{"line":138,"column":8},"end":{"line":138,"column":51}},"57":{"start":{"line":142,"column":4},"end":{"line":142,"column":16}},"58":{"start":{"line":144,"column":4},"end":{"line":157,"column":5}},"59":{"start":{"line":145,"column":6},"end":{"line":156,"column":7}},"60":{"start":{"line":146,"column":8},"end":{"line":146,"column":23}},"61":{"start":{"line":148,"column":8},"end":{"line":150,"column":27}},"62":{"start":{"line":151,"column":8},"end":{"line":155,"column":47}},"63":{"start":{"line":166,"column":0},"end":{"line":183,"column":2}},"64":{"start":{"line":167,"column":2},"end":{"line":181,"column":3}},"65":{"start":{"line":168,"column":4},"end":{"line":170,"column":13}},"66":{"start":{"line":169,"column":6},"end":{"line":169,"column":22}},"67":{"start":{"line":172,"column":7},"end":{"line":181,"column":3}},"68":{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},"69":{"start":{"line":174,"column":6},"end":{"line":174,"column":33}},"70":{"start":{"line":178,"column":4},"end":{"line":180,"column":6}},"71":{"start":{"line":182,"column":2},"end":{"line":182,"column":14}},"72":{"start":{"line":191,"column":0},"end":{"line":206,"column":2}},"73":{"start":{"line":192,"column":2},"end":{"line":204,"column":3}},"74":{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},"75":{"start":{"line":194,"column":6},"end":{"line":194,"column":30}},"76":{"start":{"line":197,"column":7},"end":{"line":204,"column":3}},"77":{"start":{"line":198,"column":4},"end":{"line":198,"column":34}},"78":{"start":{"line":201,"column":4},"end":{"line":203,"column":6}},"79":{"start":{"line":205,"column":2},"end":{"line":205,"column":14}},"80":{"start":{"line":215,"column":0},"end":{"line":231,"column":2}},"81":{"start":{"line":216,"column":2},"end":{"line":216,"column":12}},"82":{"start":{"line":217,"column":2},"end":{"line":230,"column":3}},"83":{"start":{"line":218,"column":4},"end":{"line":218,"column":29}},"84":{"start":{"line":219,"column":4},"end":{"line":229,"column":5}},"85":{"start":{"line":220,"column":6},"end":{"line":220,"column":22}},"86":{"start":{"line":223,"column":6},"end":{"line":228,"column":7}},"87":{"start":{"line":224,"column":8},"end":{"line":227,"column":40}},"88":{"start":{"line":239,"column":0},"end":{"line":253,"column":2}},"89":{"start":{"line":240,"column":2},"end":{"line":240,"column":18}},"90":{"start":{"line":241,"column":2},"end":{"line":241,"column":8}},"91":{"start":{"line":242,"column":2},"end":{"line":242,"column":33}},"92":{"start":{"line":243,"column":2},"end":{"line":251,"column":3}},"93":{"start":{"line":244,"column":4},"end":{"line":244,"column":21}},"94":{"start":{"line":245,"column":4},"end":{"line":248,"column":5}},"95":{"start":{"line":246,"column":6},"end":{"line":246,"column":41}},"96":{"start":{"line":247,"column":6},"end":{"line":247,"column":29}},"97":{"start":{"line":249,"column":4},"end":{"line":249,"column":39}},"98":{"start":{"line":250,"column":4},"end":{"line":250,"column":32}},"99":{"start":{"line":252,"column":2},"end":{"line":252,"column":14}},"100":{"start":{"line":262,"column":0},"end":{"line":274,"column":2}},"101":{"start":{"line":263,"column":2},"end":{"line":263,"column":58}},"102":{"start":{"line":264,"column":2},"end":{"line":272,"column":3}},"103":{"start":{"line":265,"column":4},"end":{"line":265,"column":51}},"104":{"start":{"line":267,"column":7},"end":{"line":272,"column":3}},"105":{"start":{"line":268,"column":4},"end":{"line":268,"column":88}},"106":{"start":{"line":271,"column":4},"end":{"line":271,"column":59}},"107":{"start":{"line":273,"column":2},"end":{"line":273,"column":14}},"108":{"start":{"line":283,"column":0},"end":{"line":286,"column":4}},"109":{"start":{"line":285,"column":4},"end":{"line":285,"column":72}},"110":{"start":{"line":294,"column":0},"end":{"line":306,"column":4}},"111":{"start":{"line":296,"column":4},"end":{"line":300,"column":5}},"112":{"start":{"line":297,"column":6},"end":{"line":299,"column":7}},"113":{"start":{"line":298,"column":8},"end":{"line":298,"column":49}},"114":{"start":{"line":302,"column":4},"end":{"line":302,"column":51}},"115":{"start":{"line":303,"column":4},"end":{"line":305,"column":5}},"116":{"start":{"line":304,"column":6},"end":{"line":304,"column":75}},"117":{"start":{"line":312,"column":0},"end":{"line":318,"column":2}},"118":{"start":{"line":313,"column":2},"end":{"line":313,"column":15}},"119":{"start":{"line":314,"column":2},"end":{"line":316,"column":5}},"120":{"start":{"line":315,"column":4},"end":{"line":315,"column":17}},"121":{"start":{"line":317,"column":2},"end":{"line":317,"column":13}},"122":{"start":{"line":324,"column":0},"end":{"line":405,"column":2}},"123":{"start":{"line":325,"column":2},"end":{"line":329,"column":4}},"124":{"start":{"line":330,"column":2},"end":{"line":330,"column":42}},"125":{"start":{"line":331,"column":2},"end":{"line":331,"column":34}},"126":{"start":{"line":332,"column":2},"end":{"line":332,"column":32}},"127":{"start":{"line":333,"column":2},"end":{"line":333,"column":30}},"128":{"start":{"line":334,"column":2},"end":{"line":334,"column":32}},"129":{"start":{"line":335,"column":2},"end":{"line":335,"column":30}},"130":{"start":{"line":336,"column":2},"end":{"line":399,"column":5}},"131":{"start":{"line":337,"column":4},"end":{"line":337,"column":28}},"132":{"start":{"line":338,"column":4},"end":{"line":372,"column":5}},"133":{"start":{"line":341,"column":6},"end":{"line":357,"column":7}},"134":{"start":{"line":345,"column":8},"end":{"line":356,"column":11}},"135":{"start":{"line":358,"column":6},"end":{"line":358,"column":43}},"136":{"start":{"line":359,"column":6},"end":{"line":359,"column":39}},"137":{"start":{"line":360,"column":6},"end":{"line":360,"column":43}},"138":{"start":{"line":361,"column":6},"end":{"line":361,"column":39}},"139":{"start":{"line":362,"column":6},"end":{"line":362,"column":33}},"140":{"start":{"line":363,"column":11},"end":{"line":372,"column":5}},"141":{"start":{"line":364,"column":6},"end":{"line":369,"column":9}},"142":{"start":{"line":370,"column":6},"end":{"line":370,"column":32}},"143":{"start":{"line":371,"column":6},"end":{"line":371,"column":34}},"144":{"start":{"line":373,"column":4},"end":{"line":398,"column":5}},"145":{"start":{"line":374,"column":6},"end":{"line":397,"column":7}},"146":{"start":{"line":375,"column":8},"end":{"line":375,"column":25}},"147":{"start":{"line":376,"column":8},"end":{"line":376,"column":29}},"148":{"start":{"line":378,"column":8},"end":{"line":394,"column":9}},"149":{"start":{"line":379,"column":10},"end":{"line":379,"column":36}},"150":{"start":{"line":380,"column":10},"end":{"line":380,"column":38}},"151":{"start":{"line":381,"column":15},"end":{"line":394,"column":9}},"152":{"start":{"line":382,"column":10},"end":{"line":393,"column":13}},"153":{"start":{"line":396,"column":8},"end":{"line":396,"column":27}},"154":{"start":{"line":400,"column":2},"end":{"line":402,"column":5}},"155":{"start":{"line":401,"column":4},"end":{"line":401,"column":52}},"156":{"start":{"line":404,"column":2},"end":{"line":404,"column":44}},"157":{"start":{"line":407,"column":0},"end":{"line":407,"column":32}}},"branchMap":{"1":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":30},"end":{"line":38,"column":34}},{"start":{"line":38,"column":37},"end":{"line":38,"column":42}}]},"2":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":34},"end":{"line":39,"column":38}},{"start":{"line":39,"column":41},"end":{"line":39,"column":48}}]},"3":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":34},"end":{"line":40,"column":38}},{"start":{"line":40,"column":41},"end":{"line":40,"column":48}}]},"4":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":30},"end":{"line":41,"column":34}},{"start":{"line":41,"column":37},"end":{"line":41,"column":42}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"6":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":20},"end":{"line":68,"column":42}},{"start":{"line":68,"column":46},"end":{"line":68,"column":48}}]},"7":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":6}},{"start":{"line":81,"column":6},"end":{"line":81,"column":6}}]},"8":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":8}},{"start":{"line":84,"column":8},"end":{"line":84,"column":8}}]},"9":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":6},"end":{"line":113,"column":6}},{"start":{"line":113,"column":6},"end":{"line":113,"column":6}}]},"10":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"11":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":6},"end":{"line":123,"column":6}},{"start":{"line":123,"column":6},"end":{"line":123,"column":6}}]},"12":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":6},"end":{"line":134,"column":6}},{"start":{"line":134,"column":6},"end":{"line":134,"column":6}}]},"13":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"14":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":6}},{"start":{"line":145,"column":6},"end":{"line":145,"column":6}}]},"15":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":10},"end":{"line":145,"column":26}},{"start":{"line":145,"column":30},"end":{"line":145,"column":58}}]},"16":{"line":148,"type":"cond-expr","locations":[{"start":{"line":149,"column":12},"end":{"line":149,"column":52}},{"start":{"line":150,"column":12},"end":{"line":150,"column":26}}]},"17":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":2},"end":{"line":167,"column":2}},{"start":{"line":167,"column":2},"end":{"line":167,"column":2}}]},"18":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":7},"end":{"line":172,"column":7}},{"start":{"line":172,"column":7},"end":{"line":172,"column":7}}]},"19":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":11},"end":{"line":172,"column":31}},{"start":{"line":172,"column":35},"end":{"line":172,"column":61}}]},"20":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"21":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"22":{"line":197,"type":"if","locations":[{"start":{"line":197,"column":7},"end":{"line":197,"column":7}},{"start":{"line":197,"column":7},"end":{"line":197,"column":7}}]},"23":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":11},"end":{"line":197,"column":31}},{"start":{"line":197,"column":35},"end":{"line":197,"column":61}}]},"24":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":4},"end":{"line":219,"column":4}},{"start":{"line":219,"column":4},"end":{"line":219,"column":4}}]},"25":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":6},"end":{"line":223,"column":6}},{"start":{"line":223,"column":6},"end":{"line":223,"column":6}}]},"26":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":2},"end":{"line":243,"column":2}},{"start":{"line":243,"column":2},"end":{"line":243,"column":2}}]},"27":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":2},"end":{"line":264,"column":2}},{"start":{"line":264,"column":2},"end":{"line":264,"column":2}}]},"28":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":7},"end":{"line":267,"column":7}},{"start":{"line":267,"column":7},"end":{"line":267,"column":7}}]},"29":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":6},"end":{"line":297,"column":6}},{"start":{"line":297,"column":6},"end":{"line":297,"column":6}}]},"30":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":4},"end":{"line":338,"column":4}},{"start":{"line":338,"column":4},"end":{"line":338,"column":4}}]},"31":{"line":338,"type":"binary-expr","locations":[{"start":{"line":338,"column":8},"end":{"line":338,"column":32}},{"start":{"line":339,"column":11},"end":{"line":339,"column":33}},{"start":{"line":340,"column":11},"end":{"line":340,"column":35}}]},"32":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":6},"end":{"line":341,"column":6}},{"start":{"line":341,"column":6},"end":{"line":341,"column":6}}]},"33":{"line":341,"type":"binary-expr","locations":[{"start":{"line":341,"column":9},"end":{"line":341,"column":47}},{"start":{"line":342,"column":12},"end":{"line":342,"column":46}},{"start":{"line":343,"column":12},"end":{"line":343,"column":50}},{"start":{"line":344,"column":12},"end":{"line":344,"column":46}}]},"34":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":11},"end":{"line":363,"column":11}},{"start":{"line":363,"column":11},"end":{"line":363,"column":11}}]},"35":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":6},"end":{"line":374,"column":6}},{"start":{"line":374,"column":6},"end":{"line":374,"column":6}}]},"36":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":8},"end":{"line":378,"column":8}},{"start":{"line":378,"column":8},"end":{"line":378,"column":8}}]},"37":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":15},"end":{"line":381,"column":15}},{"start":{"line":381,"column":15},"end":{"line":381,"column":15}}]}},"code":["/* -*- Mode: js; js-indent-level: 2; -*- */","/*"," * Copyright 2011 Mozilla Foundation and contributors"," * Licensed under the New BSD license. See LICENSE or:"," * http://opensource.org/licenses/BSD-3-Clause"," */","","var SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;","var util = require('./util');","","// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other","// operating systems these days (capturing the result).","var REGEX_NEWLINE = /(\\r?\\n)/;","","// Newline character code for charCodeAt() comparisons","var NEWLINE_CODE = 10;","","// Private symbol for identifying `SourceNode`s when multiple versions of","// the source-map library are loaded. This MUST NOT CHANGE across","// versions!","var isSourceNode = \"$$$isSourceNode$$$\";","","/**"," * SourceNodes provide a way to abstract over interpolating/concatenating"," * snippets of generated JavaScript source code while maintaining the line and"," * column information associated with the original source code."," *"," * @param aLine The original line number."," * @param aColumn The original column number."," * @param aSource The original source's filename."," * @param aChunks Optional. An array of strings which are snippets of"," *        generated JS, or other SourceNodes."," * @param aName The original identifier."," */","function SourceNode(aLine, aColumn, aSource, aChunks, aName) {","  this.children = [];","  this.sourceContents = {};","  this.line = aLine == null ? null : aLine;","  this.column = aColumn == null ? null : aColumn;","  this.source = aSource == null ? null : aSource;","  this.name = aName == null ? null : aName;","  this[isSourceNode] = true;","  if (aChunks != null) this.add(aChunks);","}","","/**"," * Creates a SourceNode from generated code and a SourceMapConsumer."," *"," * @param aGeneratedCode The generated code"," * @param aSourceMapConsumer The SourceMap for the generated code"," * @param aRelativePath Optional. The path that relative sources in the"," *        SourceMapConsumer should be relative to."," */","SourceNode.fromStringWithSourceMap =","  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {","    // The SourceNode we want to fill with the generated code","    // and the SourceMap","    var node = new SourceNode();","","    // All even indices of this array are one line of the generated code,","    // while all odd indices are the newlines between two adjacent lines","    // (since `REGEX_NEWLINE` captures its match).","    // Processed fragments are removed from this array, by calling `shiftNextLine`.","    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);","    var shiftNextLine = function() {","      var lineContents = remainingLines.shift();","      // The last line of a file might not have a newline.","      var newLine = remainingLines.shift() || \"\";","      return lineContents + newLine;","    };","","    // We need to remember the position of \"remainingLines\"","    var lastGeneratedLine = 1, lastGeneratedColumn = 0;","","    // The generate SourceNodes we need a code range.","    // To extract it current and last mapping is used.","    // Here we store the last mapping.","    var lastMapping = null;","","    aSourceMapConsumer.eachMapping(function (mapping) {","      if (lastMapping !== null) {","        // We add the code from \"lastMapping\" to \"mapping\":","        // First check if there is a new line in between.","        if (lastGeneratedLine < mapping.generatedLine) {","          // Associate first line with \"lastMapping\"","          addMappingWithCode(lastMapping, shiftNextLine());","          lastGeneratedLine++;","          lastGeneratedColumn = 0;","          // The remaining code is added without mapping","        } else {","          // There is no new line in between.","          // Associate the code between \"lastGeneratedColumn\" and","          // \"mapping.generatedColumn\" with \"lastMapping\"","          var nextLine = remainingLines[0];","          var code = nextLine.substr(0, mapping.generatedColumn -","                                        lastGeneratedColumn);","          remainingLines[0] = nextLine.substr(mapping.generatedColumn -","                                              lastGeneratedColumn);","          lastGeneratedColumn = mapping.generatedColumn;","          addMappingWithCode(lastMapping, code);","          // No more remaining code, continue","          lastMapping = mapping;","          return;","        }","      }","      // We add the generated code until the first mapping","      // to the SourceNode without any mapping.","      // Each line is added as separate string.","      while (lastGeneratedLine < mapping.generatedLine) {","        node.add(shiftNextLine());","        lastGeneratedLine++;","      }","      if (lastGeneratedColumn < mapping.generatedColumn) {","        var nextLine = remainingLines[0];","        node.add(nextLine.substr(0, mapping.generatedColumn));","        remainingLines[0] = nextLine.substr(mapping.generatedColumn);","        lastGeneratedColumn = mapping.generatedColumn;","      }","      lastMapping = mapping;","    }, this);","    // We have processed all mappings.","    if (remainingLines.length > 0) {","      if (lastMapping) {","        // Associate the remaining code in the current line with \"lastMapping\"","        addMappingWithCode(lastMapping, shiftNextLine());","      }","      // and add the remaining lines without any mapping","      node.add(remainingLines.join(\"\"));","    }","","    // Copy sourcesContent into SourceNode","    aSourceMapConsumer.sources.forEach(function (sourceFile) {","      var content = aSourceMapConsumer.sourceContentFor(sourceFile);","      if (content != null) {","        if (aRelativePath != null) {","          sourceFile = util.join(aRelativePath, sourceFile);","        }","        node.setSourceContent(sourceFile, content);","      }","    });","","    return node;","","    function addMappingWithCode(mapping, code) {","      if (mapping === null || mapping.source === undefined) {","        node.add(code);","      } else {","        var source = aRelativePath","          ? util.join(aRelativePath, mapping.source)","          : mapping.source;","        node.add(new SourceNode(mapping.originalLine,","                                mapping.originalColumn,","                                source,","                                code,","                                mapping.name));","      }","    }","  };","","/**"," * Add a chunk of generated JS to this source node."," *"," * @param aChunk A string snippet of generated JS code, another instance of"," *        SourceNode, or an array where each member is one of those things."," */","SourceNode.prototype.add = function SourceNode_add(aChunk) {","  if (Array.isArray(aChunk)) {","    aChunk.forEach(function (chunk) {","      this.add(chunk);","    }, this);","  }","  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {","    if (aChunk) {","      this.children.push(aChunk);","    }","  }","  else {","    throw new TypeError(","      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk","    );","  }","  return this;","};","","/**"," * Add a chunk of generated JS to the beginning of this source node."," *"," * @param aChunk A string snippet of generated JS code, another instance of"," *        SourceNode, or an array where each member is one of those things."," */","SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {","  if (Array.isArray(aChunk)) {","    for (var i = aChunk.length-1; i >= 0; i--) {","      this.prepend(aChunk[i]);","    }","  }","  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {","    this.children.unshift(aChunk);","  }","  else {","    throw new TypeError(","      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk","    );","  }","  return this;","};","","/**"," * Walk over the tree of JS snippets in this node and its children. The"," * walking function is called once for each snippet of JS and is passed that"," * snippet and the its original associated source's line/column location."," *"," * @param aFn The traversal function."," */","SourceNode.prototype.walk = function SourceNode_walk(aFn) {","  var chunk;","  for (var i = 0, len = this.children.length; i < len; i++) {","    chunk = this.children[i];","    if (chunk[isSourceNode]) {","      chunk.walk(aFn);","    }","    else {","      if (chunk !== '') {","        aFn(chunk, { source: this.source,","                     line: this.line,","                     column: this.column,","                     name: this.name });","      }","    }","  }","};","","/**"," * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between"," * each of `this.children`."," *"," * @param aSep The separator."," */","SourceNode.prototype.join = function SourceNode_join(aSep) {","  var newChildren;","  var i;","  var len = this.children.length;","  if (len > 0) {","    newChildren = [];","    for (i = 0; i < len-1; i++) {","      newChildren.push(this.children[i]);","      newChildren.push(aSep);","    }","    newChildren.push(this.children[i]);","    this.children = newChildren;","  }","  return this;","};","","/**"," * Call String.prototype.replace on the very right-most source snippet. Useful"," * for trimming whitespace from the end of a source node, etc."," *"," * @param aPattern The pattern to replace."," * @param aReplacement The thing to replace the pattern with."," */","SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {","  var lastChild = this.children[this.children.length - 1];","  if (lastChild[isSourceNode]) {","    lastChild.replaceRight(aPattern, aReplacement);","  }","  else if (typeof lastChild === 'string') {","    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);","  }","  else {","    this.children.push(''.replace(aPattern, aReplacement));","  }","  return this;","};","","/**"," * Set the source content for a source file. This will be added to the SourceMapGenerator"," * in the sourcesContent field."," *"," * @param aSourceFile The filename of the source file"," * @param aSourceContent The content of the source file"," */","SourceNode.prototype.setSourceContent =","  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {","    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;","  };","","/**"," * Walk over the tree of SourceNodes. The walking function is called for each"," * source file content and is passed the filename and source content."," *"," * @param aFn The traversal function."," */","SourceNode.prototype.walkSourceContents =","  function SourceNode_walkSourceContents(aFn) {","    for (var i = 0, len = this.children.length; i < len; i++) {","      if (this.children[i][isSourceNode]) {","        this.children[i].walkSourceContents(aFn);","      }","    }","","    var sources = Object.keys(this.sourceContents);","    for (var i = 0, len = sources.length; i < len; i++) {","      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);","    }","  };","","/**"," * Return the string representation of this source node. Walks over the tree"," * and concatenates all the various snippets together to one string."," */","SourceNode.prototype.toString = function SourceNode_toString() {","  var str = \"\";","  this.walk(function (chunk) {","    str += chunk;","  });","  return str;","};","","/**"," * Returns the string representation of this source node along with a source"," * map."," */","SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {","  var generated = {","    code: \"\",","    line: 1,","    column: 0","  };","  var map = new SourceMapGenerator(aArgs);","  var sourceMappingActive = false;","  var lastOriginalSource = null;","  var lastOriginalLine = null;","  var lastOriginalColumn = null;","  var lastOriginalName = null;","  this.walk(function (chunk, original) {","    generated.code += chunk;","    if (original.source !== null","        && original.line !== null","        && original.column !== null) {","      if(lastOriginalSource !== original.source","         || lastOriginalLine !== original.line","         || lastOriginalColumn !== original.column","         || lastOriginalName !== original.name) {","        map.addMapping({","          source: original.source,","          original: {","            line: original.line,","            column: original.column","          },","          generated: {","            line: generated.line,","            column: generated.column","          },","          name: original.name","        });","      }","      lastOriginalSource = original.source;","      lastOriginalLine = original.line;","      lastOriginalColumn = original.column;","      lastOriginalName = original.name;","      sourceMappingActive = true;","    } else if (sourceMappingActive) {","      map.addMapping({","        generated: {","          line: generated.line,","          column: generated.column","        }","      });","      lastOriginalSource = null;","      sourceMappingActive = false;","    }","    for (var idx = 0, length = chunk.length; idx < length; idx++) {","      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {","        generated.line++;","        generated.column = 0;","        // Mappings end at eol","        if (idx + 1 === length) {","          lastOriginalSource = null;","          sourceMappingActive = false;","        } else if (sourceMappingActive) {","          map.addMapping({","            source: original.source,","            original: {","              line: original.line,","              column: original.column","            },","            generated: {","              line: generated.line,","              column: generated.column","            },","            name: original.name","          });","        }","      } else {","        generated.column++;","      }","    }","  });","  this.walkSourceContents(function (sourceFile, sourceContent) {","    map.setSourceContent(sourceFile, sourceContent);","  });","","  return { code: generated.code, map: map };","};","","exports.SourceNode = SourceNode;",""],"l":{"8":1,"9":1,"13":1,"16":1,"21":1,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"54":1,"58":0,"64":0,"65":0,"66":0,"68":0,"69":0,"73":0,"78":0,"80":0,"81":0,"84":0,"86":0,"87":0,"88":0,"94":0,"95":0,"97":0,"99":0,"100":0,"102":0,"103":0,"109":0,"110":0,"111":0,"113":0,"114":0,"115":0,"116":0,"117":0,"119":0,"122":0,"123":0,"125":0,"128":0,"132":0,"133":0,"134":0,"135":0,"136":0,"138":0,"142":0,"144":1,"145":0,"146":0,"148":0,"151":0,"166":1,"167":0,"168":0,"169":0,"172":0,"173":0,"174":0,"178":0,"182":0,"191":1,"192":0,"193":0,"194":0,"197":0,"198":0,"201":0,"205":0,"215":1,"216":0,"217":0,"218":0,"219":0,"220":0,"223":0,"224":0,"239":1,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"249":0,"250":0,"252":0,"262":1,"263":0,"264":0,"265":0,"267":0,"268":0,"271":0,"273":0,"283":1,"285":0,"294":1,"296":0,"297":0,"298":0,"302":0,"303":0,"304":0,"312":1,"313":0,"314":0,"315":0,"317":0,"324":1,"325":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"341":0,"345":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"370":0,"371":0,"373":0,"374":0,"375":0,"376":0,"378":0,"379":0,"380":0,"381":0,"382":0,"396":0,"400":0,"401":0,"404":0,"407":1}}}